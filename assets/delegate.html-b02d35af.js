const e=JSON.parse('{"key":"v-c8eab314","path":"/writings/pattern/delegate.html","title":"委派模式","lang":"zh-CN","frontmatter":{"title":"委派模式","icon":"article","category":["设计模式"],"description":"委派模式 委派模式：负责任务的调度和任务的分配，将任务的分配和执行分离开来。可以看作是一种特殊情况下的静态代理的全权代理 适用场景：委派对象是不知道如何处理一个任务的，只是把任务交给其他对象来处理 优点：通过任务委派的方式，能够把一个大型的任务细化，然后通过统一管理这些子任务的完成情况实现任务的跟进，能够加快任务执行的效率 缺点：任务委派的方式需要根据任务的复杂程度进行不同的改变，在任务比较复杂的情况下可能需要多重委派，容易导致紊乱 示例 以员工、领导、老板为例，老板让领导干活，领导不会亲自去做，而是把任务一个一个委派给下面的员工来具体完成","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/pattern/delegate.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"委派模式"}],["meta",{"property":"og:description","content":"委派模式 委派模式：负责任务的调度和任务的分配，将任务的分配和执行分离开来。可以看作是一种特殊情况下的静态代理的全权代理 适用场景：委派对象是不知道如何处理一个任务的，只是把任务交给其他对象来处理 优点：通过任务委派的方式，能够把一个大型的任务细化，然后通过统一管理这些子任务的完成情况实现任务的跟进，能够加快任务执行的效率 缺点：任务委派的方式需要根据任务的复杂程度进行不同的改变，在任务比较复杂的情况下可能需要多重委派，容易导致紊乱 示例 以员工、领导、老板为例，老板让领导干活，领导不会亲自去做，而是把任务一个一个委派给下面的员工来具体完成"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-01T07:27:35.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-01T07:27:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"委派模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-01T07:27:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"委派模式在源码中的体现","slug":"委派模式在源码中的体现","link":"#委派模式在源码中的体现","children":[{"level":3,"title":"JVM双亲委派模式","slug":"jvm双亲委派模式","link":"#jvm双亲委派模式","children":[]},{"level":3,"title":"Spring的IoC模块","slug":"spring的ioc模块","link":"#spring的ioc模块","children":[]}]},{"level":2,"title":"委派模式和静态代理的区别","slug":"委派模式和静态代理的区别","link":"#委派模式和静态代理的区别","children":[]}],"git":{"createdTime":1677655655000,"updatedTime":1677655655000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":4.06,"words":1219},"filePathRelative":"writings/pattern/delegate.md","localizedDate":"2023年3月1日","excerpt":"<h1> 委派模式</h1>\\n<p>委派模式：负责任务的调度和任务的分配，将任务的分配和执行分离开来。可以看作是一种特殊情况下的静态代理的全权代理</p>\\n<p>适用场景：委派对象是不知道如何处理一个任务的，只是把任务交给其他对象来处理</p>\\n<p>优点：通过任务委派的方式，能够把一个大型的任务细化，然后通过统一管理这些子任务的完成情况实现任务的跟进，能够加快任务执行的效率</p>\\n<p>缺点：任务委派的方式需要根据任务的复杂程度进行不同的改变，在任务比较复杂的情况下可能需要多重委派，容易导致紊乱</p>\\n<h2> 示例</h2>\\n<p>以员工、领导、老板为例，老板让领导干活，领导不会亲自去做，而是把任务一个一个委派给下面的员工来具体完成</p>","autoDesc":true}');export{e as data};
