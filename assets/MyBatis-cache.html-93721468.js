const t=JSON.parse('{"key":"v-d7d37d28","path":"/writings/MyBatis/MyBatis-cache.html","title":"MyBatis 缓存学习","lang":"zh-CN","frontmatter":{"title":"MyBatis 缓存学习","icon":"article","category":["干货"],"tag":["MyBatis","源码"],"description":"MyBatis 缓存 MyBatis 的缓存就是把当前查询的数据记录到内存中，等下一次查询相同数据的时候，就从缓存中取，不再查询数据库了。缓存的目的就是为了提高查询速度，但是不能影响查询的结果，当数据发生改变，缓存也就失效了。 MyBatis 一级缓存 MyBatis 一级缓存默认开启 Mybatis 一级缓存是 SqlSession 级别的，意思是通过同一个 SqlSession 查询出来的数据会被缓存，下次查询相同 SQL 语句（条件无关）的时候就从缓存中获取，不再查询数据库。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/MyBatis/MyBatis-cache.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"MyBatis 缓存学习"}],["meta",{"property":"og:description","content":"MyBatis 缓存 MyBatis 的缓存就是把当前查询的数据记录到内存中，等下一次查询相同数据的时候，就从缓存中取，不再查询数据库了。缓存的目的就是为了提高查询速度，但是不能影响查询的结果，当数据发生改变，缓存也就失效了。 MyBatis 一级缓存 MyBatis 一级缓存默认开启 Mybatis 一级缓存是 SqlSession 级别的，意思是通过同一个 SqlSession 查询出来的数据会被缓存，下次查询相同 SQL 语句（条件无关）的时候就从缓存中获取，不再查询数据库。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:46:06.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:tag","content":"MyBatis"}],["meta",{"property":"article:tag","content":"源码"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:46:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MyBatis 缓存学习\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:46:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"MyBatis 一级缓存","slug":"mybatis-一级缓存","link":"#mybatis-一级缓存","children":[{"level":3,"title":"一级缓存失效的场景","slug":"一级缓存失效的场景","link":"#一级缓存失效的场景","children":[]}]},{"level":2,"title":"MyBatis 二级缓存","slug":"mybatis-二级缓存","link":"#mybatis-二级缓存","children":[{"level":3,"title":"二级缓存开启的条件","slug":"二级缓存开启的条件","link":"#二级缓存开启的条件","children":[]},{"level":3,"title":"二级缓存失效的场景","slug":"二级缓存失效的场景","link":"#二级缓存失效的场景","children":[]},{"level":3,"title":"二级缓存注意事项","slug":"二级缓存注意事项","link":"#二级缓存注意事项","children":[]}]},{"level":2,"title":"MyBatis 缓存原理","slug":"mybatis-缓存原理","link":"#mybatis-缓存原理","children":[{"level":3,"title":"Cache","slug":"cache","link":"#cache","children":[]},{"level":3,"title":"PerpetualCache","slug":"perpetualcache","link":"#perpetualcache","children":[]},{"level":3,"title":"MyBatis 缓存数据流程","slug":"mybatis-缓存数据流程","link":"#mybatis-缓存数据流程","children":[]},{"level":3,"title":"MyBatis 一级缓存失效原理","slug":"mybatis-一级缓存失效原理","link":"#mybatis-一级缓存失效原理","children":[]}]},{"level":2,"title":"MyBatis 查询缓存的顺序","slug":"mybatis-查询缓存的顺序","link":"#mybatis-查询缓存的顺序","children":[]},{"level":2,"title":"MyBatis 整合第三方缓存","slug":"mybatis-整合第三方缓存","link":"#mybatis-整合第三方缓存","children":[{"level":3,"title":"MyBatis 整合 EHCache","slug":"mybatis-整合-ehcache","link":"#mybatis-整合-ehcache","children":[]},{"level":3,"title":"MyBatis 整合 Redis","slug":"mybatis-整合-redis","link":"#mybatis-整合-redis","children":[]}]}],"git":{"createdTime":1666591220000,"updatedTime":1677599166000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":5}]},"readingTime":{"minutes":8.12,"words":2435},"filePathRelative":"writings/MyBatis/MyBatis-cache.md","localizedDate":"2022年10月24日","excerpt":"<h1> MyBatis 缓存</h1>\\n<p>MyBatis 的缓存就是把当前查询的数据记录到内存中，等下一次查询相同数据的时候，就从缓存中取，不再查询数据库了。<strong>缓存的目的就是为了提高查询速度，但是不能影响查询的结果，当数据发生改变，缓存也就失效了。</strong></p>\\n<h2> MyBatis 一级缓存</h2>\\n<p><strong>MyBatis 一级缓存默认开启</strong></p>\\n<p>Mybatis 一级缓存是 <strong>SqlSession 级别</strong>的，意思是通过同一个 SqlSession 查询出来的数据会被缓存，下次查询相同 SQL 语句（条件无关）的时候就从缓存中获取，不再查询数据库。</p>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{t as data};
