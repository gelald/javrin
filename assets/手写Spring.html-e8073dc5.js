const e=JSON.parse('{"key":"v-64990e71","path":"/writings/Spring/%E6%89%8B%E5%86%99Spring.html","title":"手写Spring","lang":"zh-CN","frontmatter":{"description":"手写Spring 这个专题是手写 Spring 框架，准确点来说是用自己的理解去仿照 Spring 框架实现它的核心功能点，包括 IoC、DI、MVC、AOP、JDBC 这几个核心的模块。手写框架是理解框架其中一个有效的途径，毕竟”好记性不如烂笔头“。 很多初学者去看源码的时候容易陷入一个误区，拿到程序直接 Ctrl 点进去看，看着看着就被困在里面了。其实点进去看不是不行，而是需要一定的前提条件，前提条件就是需要先理解这个模块的时序图，有哪些关键的类，因为框架的封装程度是很高的，心里面始终会有一个清晰的主线，不至于绕晕。 对我个人来说，学习源码比较有效的方式还是两点","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Spring/%E6%89%8B%E5%86%99Spring.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"手写Spring"}],["meta",{"property":"og:description","content":"手写Spring 这个专题是手写 Spring 框架，准确点来说是用自己的理解去仿照 Spring 框架实现它的核心功能点，包括 IoC、DI、MVC、AOP、JDBC 这几个核心的模块。手写框架是理解框架其中一个有效的途径，毕竟”好记性不如烂笔头“。 很多初学者去看源码的时候容易陷入一个误区，拿到程序直接 Ctrl 点进去看，看着看着就被困在里面了。其实点进去看不是不行，而是需要一定的前提条件，前提条件就是需要先理解这个模块的时序图，有哪些关键的类，因为框架的封装程度是很高的，心里面始终会有一个清晰的主线，不至于绕晕。 对我个人来说，学习源码比较有效的方式还是两点"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-01T15:56:59.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2022-08-01T15:56:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"手写Spring\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-01T15:56:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"Spring解决了什么问题","slug":"spring解决了什么问题","link":"#spring解决了什么问题","children":[]},{"level":2,"title":"了解Spring基本工作原理","slug":"了解spring基本工作原理","link":"#了解spring基本工作原理","children":[{"level":3,"title":"实现基本思路","slug":"实现基本思路","link":"#实现基本思路","children":[]}]},{"level":2,"title":"实现 IoC 功能","slug":"实现-ioc-功能","link":"#实现-ioc-功能","children":[{"level":3,"title":"核心角色简述","slug":"核心角色简述","link":"#核心角色简述","children":[]},{"level":3,"title":"实现基本思路","slug":"实现基本思路-1","link":"#实现基本思路-1","children":[]}]},{"level":2,"title":"实现 DI 功能","slug":"实现-di-功能","link":"#实现-di-功能","children":[{"level":3,"title":"什么是循环依赖","slug":"什么是循环依赖","link":"#什么是循环依赖","children":[]},{"level":3,"title":"循环依赖的情况","slug":"循环依赖的情况","link":"#循环依赖的情况","children":[]},{"level":3,"title":"Spring如何检测是否存在循环依赖","slug":"spring如何检测是否存在循环依赖","link":"#spring如何检测是否存在循环依赖","children":[]},{"level":3,"title":"核心角色简述","slug":"核心角色简述-1","link":"#核心角色简述-1","children":[]},{"level":3,"title":"实现基本思路","slug":"实现基本思路-2","link":"#实现基本思路-2","children":[]}]},{"level":2,"title":"实现 MVC 功能","slug":"实现-mvc-功能","link":"#实现-mvc-功能","children":[{"level":3,"title":"前端九大组件介绍","slug":"前端九大组件介绍","link":"#前端九大组件介绍","children":[]},{"level":3,"title":"实现基本思路","slug":"实现基本思路-3","link":"#实现基本思路-3","children":[]}]},{"level":2,"title":"实现 AOP 功能","slug":"实现-aop-功能","link":"#实现-aop-功能","children":[{"level":3,"title":"核心角色简述","slug":"核心角色简述-2","link":"#核心角色简述-2","children":[]},{"level":3,"title":"实现基本思路","slug":"实现基本思路-4","link":"#实现基本思路-4","children":[]}]}],"git":{"createdTime":1659369419000,"updatedTime":1659369419000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":2},{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":13.5,"words":4050},"filePathRelative":"writings/Spring/手写Spring.md","localizedDate":"2022年8月1日","excerpt":"<h1> 手写Spring</h1>\\n<p>这个专题是手写 Spring 框架，准确点来说是用自己的理解去仿照 Spring 框架实现它的核心功能点，包括 IoC、DI、MVC、AOP、JDBC 这几个核心的模块。手写框架是理解框架其中一个有效的途径，毕竟”好记性不如烂笔头“。</p>\\n<p>很多初学者去看源码的时候容易陷入一个误区，拿到程序直接 Ctrl 点进去看，看着看着就被困在里面了。其实点进去看不是不行，而是需要一定的前提条件，前提条件就是需要先理解这个模块的时序图，有哪些关键的类，因为框架的封装程度是很高的，心里面始终会有一个清晰的主线，不至于绕晕。</p>\\n<p>对我个人来说，学习源码比较有效的方式还是两点</p>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
