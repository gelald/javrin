import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as r,e as t}from"./app-f9042815.js";const s={},i=t('<h2 id="封装baseservlet" tabindex="-1"><a class="header-anchor" href="#封装baseservlet" aria-hidden="true">#</a> 封装BaseServlet</h2><p>因为在HttpServlet中的service方法就是对请求方式做了一个分发，分发到doGet方法或doPost方法。如果我们想达到一个模块的功能都在同一个Servlet，那么我们的做法是：</p><ol><li>新建一个BaseServlet，继承HttpServlet</li><li>只重写service方法，不重写doGet、doPost，因为我们旨在修改对方法进行分发的策略</li><li>先获取uri，uri中有请求的方法</li><li>使用反射，获取对应的Method对象，参数默认还是request、response，并执行</li><li>因为后续自定义的Servlet都是继承自BaseServlet的，所以在BaseServlet中通过获取Method来执行的话实际上是自定义的Servlet来执行</li></ol><h2 id="使用ajax" tabindex="-1"><a class="header-anchor" href="#使用ajax" aria-hidden="true">#</a> 使用Ajax</h2><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/007S8ZIlgy1gfsru4utw9j315q06qtkm.jpg" alt=""></p><p>因为前端使用html开发，不能返回一张带有数据的jsp，只能返回json形式的字符串来让js来解析相应数据。</p><h2 id="为什么使用html而不使用jsp" tabindex="-1"><a class="header-anchor" href="#为什么使用html而不使用jsp" aria-hidden="true">#</a> 为什么使用html而不使用jsp</h2><p>一般来说，html比jsp加载速度更快；而且能实现前后端完全分离，让开发人员更专注于自己开发的部分</p><h2 id="验证码" tabindex="-1"><a class="header-anchor" href="#验证码" aria-hidden="true">#</a> 验证码</h2><p>验证码存在session中，虽然前端不是jsp开发，无法获取session域的内容，但是可以把验证验证码的工作放到后台，前端不作验证，只做获取和展示。比如说在注册和登录的时候先把验证码验证了，才进行下一步。<strong>最重要的是</strong>，验证码使用过了一定需要更换，无论正确还是错误，防止点击浏览器后退，重复使用同一个验证码。</p><h2 id="beanutils" tabindex="-1"><a class="header-anchor" href="#beanutils" aria-hidden="true">#</a> BeanUtils</h2><p><code>org.apache.commons.beanutils.BeanUtils</code></p><p>把map转换成实体</p><h2 id="beanpropertyrowmapper" tabindex="-1"><a class="header-anchor" href="#beanpropertyrowmapper" aria-hidden="true">#</a> BeanPropertyRowMapper</h2><p>JdbcTemplate查询单条记录时<code>queryForObject</code>，如果查询不出记录来，不返回null，直接报错，所以要try catch</p>',15),o=[i];function l(n,h){return a(),r("div",null,o)}const c=e(s,[["render",l],["__file","综合案例事后.html.vue"]]);export{c as default};
