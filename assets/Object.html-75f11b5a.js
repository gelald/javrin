const e=JSON.parse('{"key":"v-0e8781f0","path":"/writings/Java-base/Object.html","title":"Object","lang":"zh-CN","frontmatter":{"title":"Object","icon":"article","category":["Java基础"],"description":"Object Object 是 Java 所有类的最顶层的父类，它的地位不言而喻，有必要研究一番～ 这里先主要介绍一下 Object 一些经典的方法，关于它的其他研究，放在后面 native 开始学习 Object 的方法前，先了解一下 native 关键字 native 关键字用于修饰方法，native 意为原生的，那么原生的方法代表什么意思呢？ 其实被 native 修饰的方法含义就是交给我们的操作系统来实现这个方法，换言之在程序中这个方法是没有方法体的。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Java-base/Object.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Object"}],["meta",{"property":"og:description","content":"Object Object 是 Java 所有类的最顶层的父类，它的地位不言而喻，有必要研究一番～ 这里先主要介绍一下 Object 一些经典的方法，关于它的其他研究，放在后面 native 开始学习 Object 的方法前，先了解一下 native 关键字 native 关键字用于修饰方法，native 意为原生的，那么原生的方法代表什么意思呢？ 其实被 native 修饰的方法含义就是交给我们的操作系统来实现这个方法，换言之在程序中这个方法是没有方法体的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Object\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"native","slug":"native","link":"#native","children":[]},{"level":2,"title":"equals","slug":"equals","link":"#equals","children":[]},{"level":2,"title":"hashCode","slug":"hashcode","link":"#hashcode","children":[]},{"level":2,"title":"toString","slug":"tostring","link":"#tostring","children":[]},{"level":2,"title":"clone","slug":"clone","link":"#clone","children":[{"level":3,"title":"浅拷贝","slug":"浅拷贝","link":"#浅拷贝","children":[]},{"level":3,"title":"深拷贝","slug":"深拷贝","link":"#深拷贝","children":[]}]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":4.06,"words":1218},"filePathRelative":"writings/Java-base/Object.md","localizedDate":"2023年2月28日","excerpt":"<h1> Object</h1>\\n<blockquote>\\n<p>Object 是 Java 所有类的最顶层的父类，它的地位不言而喻，有必要研究一番～</p>\\n</blockquote>\\n<p>这里先主要介绍一下 Object 一些经典的方法，关于它的其他研究，放在后面</p>\\n<h2> native</h2>\\n<p>开始学习 Object 的方法前，先了解一下 native 关键字</p>\\n<p>native 关键字用于修饰方法，native 意为原生的，那么原生的方法代表什么意思呢？</p>\\n<blockquote>\\n<p>其实被 native 修饰的方法含义就是交给我们的操作系统来实现这个方法，换言之在程序中这个方法是没有方法体的。</p>\\n</blockquote>","autoDesc":true}');export{e as data};
