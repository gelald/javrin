const t=JSON.parse('{"key":"v-10a849ca","path":"/writings/Java-base/interface-and-abstract.html","title":"接口和抽象类区别","lang":"zh-CN","frontmatter":{"title":"接口和抽象类区别","icon":"article","category":["Java基础"],"tag":["设计思想"],"description":"接口和抽象类区别 语法层面 针对 jdk8 讨论 接口中只能定义抽象方法，也可以定义默认方法及其实现。一个类要实现接口必须实现这个接口中所有的抽象方法。 抽象类没有太多的限制，甚至一个普通类也可以直接加上 abstract 关键字称为抽象类，抽象类可以定义属性、方法，更多的限制在于抽象方法，抽象方法只能存在于接口和抽象类中。 思想层面 这一部分才是我想单独使用一篇笔记记录下来的原因，语法层面网上有太多太多的资料，我更想和大家聊一聊思想层面。先说结论再说原因：接口是自上向下的思想，抽象类是自下向上的思想。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Java-base/interface-and-abstract.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"接口和抽象类区别"}],["meta",{"property":"og:description","content":"接口和抽象类区别 语法层面 针对 jdk8 讨论 接口中只能定义抽象方法，也可以定义默认方法及其实现。一个类要实现接口必须实现这个接口中所有的抽象方法。 抽象类没有太多的限制，甚至一个普通类也可以直接加上 abstract 关键字称为抽象类，抽象类可以定义属性、方法，更多的限制在于抽象方法，抽象方法只能存在于接口和抽象类中。 思想层面 这一部分才是我想单独使用一篇笔记记录下来的原因，语法层面网上有太多太多的资料，我更想和大家聊一聊思想层面。先说结论再说原因：接口是自上向下的思想，抽象类是自下向上的思想。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-22T03:29:18.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:tag","content":"设计思想"}],["meta",{"property":"article:modified_time","content":"2023-04-22T03:29:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"接口和抽象类区别\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-04-22T03:29:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"语法层面","slug":"语法层面","link":"#语法层面","children":[]},{"level":2,"title":"思想层面","slug":"思想层面","link":"#思想层面","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1682134158000,"updatedTime":1682134158000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":2.15,"words":644},"filePathRelative":"writings/Java-base/interface-and-abstract.md","localizedDate":"2023年4月22日","excerpt":"<h1> 接口和抽象类区别</h1>\\n<h2> 语法层面</h2>\\n<blockquote>\\n<p>针对 jdk8 讨论</p>\\n</blockquote>\\n<p>接口中只能定义抽象方法，也可以定义默认方法及其实现。一个类要实现接口必须实现这个接口中所有的抽象方法。</p>\\n<p>抽象类没有太多的限制，甚至一个普通类也可以直接加上 <code>abstract</code> 关键字称为抽象类，抽象类可以定义属性、方法，更多的限制在于抽象方法，抽象方法只能存在于接口和抽象类中。</p>\\n<h2> 思想层面</h2>\\n<p>这一部分才是我想单独使用一篇笔记记录下来的原因，语法层面网上有太多太多的资料，我更想和大家聊一聊<strong>思想层面</strong>。先说结论再说原因：<strong>接口是自上向下的思想，抽象类是自下向上的思想</strong>。</p>","autoDesc":true}');export{t as data};
