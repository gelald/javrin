const n=JSON.parse('{"key":"v-e0a6a06e","path":"/writings/Spring/hot-data-init.html","title":"热点数据初始化","lang":"zh-CN","frontmatter":{"description":"热点数据初始化 思路 热点数据或字典数据初始化的思路： 尽可能在程序启动时就把数据放到缓存中（比如：redis），不希望在第一次查询时让用户等待时间较长 如果说在程序启动时就把数据加载到内存中，那么我们应该要把握好程序启动完成的时机 如何选择加载时机 main 方法 最简单粗暴的方法：写在 SpringBoot 程序的 main 方法中 @SpringBootApplication public class UserApplication { public static void main(String[] args) { SpringApplication.run(UserApplication.class, args); \\tlog.info(\\"加载热点数据到内存中\\"); } }","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Spring/hot-data-init.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"热点数据初始化"}],["meta",{"property":"og:description","content":"热点数据初始化 思路 热点数据或字典数据初始化的思路： 尽可能在程序启动时就把数据放到缓存中（比如：redis），不希望在第一次查询时让用户等待时间较长 如果说在程序启动时就把数据加载到内存中，那么我们应该要把握好程序启动完成的时机 如何选择加载时机 main 方法 最简单粗暴的方法：写在 SpringBoot 程序的 main 方法中 @SpringBootApplication public class UserApplication { public static void main(String[] args) { SpringApplication.run(UserApplication.class, args); \\tlog.info(\\"加载热点数据到内存中\\"); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-12T16:03:19.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-06-12T16:03:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"热点数据初始化\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-12T16:03:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[]},{"level":2,"title":"如何选择加载时机","slug":"如何选择加载时机","link":"#如何选择加载时机","children":[{"level":3,"title":"main 方法","slug":"main-方法","link":"#main-方法","children":[]},{"level":3,"title":"利用 Bean 的生命周期","slug":"利用-bean-的生命周期","link":"#利用-bean-的生命周期","children":[]},{"level":3,"title":"优雅的方法","slug":"优雅的方法","link":"#优雅的方法","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1686585799000,"updatedTime":1686585799000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":1.83,"words":550},"filePathRelative":"writings/Spring/hot-data-init.md","localizedDate":"2023年6月12日","excerpt":"<h1> 热点数据初始化</h1>\\n<h2> 思路</h2>\\n<p>热点数据或字典数据初始化的思路：</p>\\n<ul>\\n<li>尽可能在程序启动时就把数据放到缓存中（比如：redis），不希望在第一次查询时让用户等待时间较长</li>\\n<li>如果说在程序启动时就把数据加载到内存中，那么我们应该要把握好程序启动完成的时机</li>\\n</ul>\\n<h2> 如何选择加载时机</h2>\\n<h3> main 方法</h3>\\n<p>最简单粗暴的方法：写在 SpringBoot 程序的 main 方法中</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@SpringBootApplication</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">UserApplication</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">SpringApplication</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">UserApplication</span><span class=\\"token punctuation\\">.</span><span class=\\"token keyword\\">class</span><span class=\\"token punctuation\\">,</span> args<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n      \\tlog<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">info</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"加载热点数据到内存中\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{n as data};
