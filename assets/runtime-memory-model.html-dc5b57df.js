const e=JSON.parse('{"key":"v-fe0307cc","path":"/writings/JVM/runtime-memory-model.html","title":"Java 运行时内存模型","lang":"zh-CN","frontmatter":{"title":"Java 运行时内存模型","icon":"article","category":["JVM"],"description":"Java 运行时内存模型 内存是非常重要的系统资源，是硬盘和 CPU 的中间仓库及桥梁，承载着操作系统和应用程序的实时运行。JVM 内存布局规定了 Java 在运行过程中内存申请、分配、管理的策略，保证了 JVM 的高效稳定运行。 JVM运行时数据区大致包括以下五个部分 程序计数器 虚拟机栈 本地方法栈 方法区 堆 JVM 整体架构","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/JVM/runtime-memory-model.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Java 运行时内存模型"}],["meta",{"property":"og:description","content":"Java 运行时内存模型 内存是非常重要的系统资源，是硬盘和 CPU 的中间仓库及桥梁，承载着操作系统和应用程序的实时运行。JVM 内存布局规定了 Java 在运行过程中内存申请、分配、管理的策略，保证了 JVM 的高效稳定运行。 JVM运行时数据区大致包括以下五个部分 程序计数器 虚拟机栈 本地方法栈 方法区 堆 JVM 整体架构"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 运行时内存模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"JVM 整体架构","slug":"jvm-整体架构","link":"#jvm-整体架构","children":[]},{"level":2,"title":"程序计数器","slug":"程序计数器","link":"#程序计数器","children":[{"level":3,"title":"作用","slug":"作用","link":"#作用","children":[]}]},{"level":2,"title":"虚拟机栈","slug":"虚拟机栈","link":"#虚拟机栈","children":[{"level":3,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":3,"title":"栈运行原理","slug":"栈运行原理","link":"#栈运行原理","children":[]},{"level":3,"title":"栈帧的内部结构","slug":"栈帧的内部结构","link":"#栈帧的内部结构","children":[]}]},{"level":2,"title":"本地方法栈","slug":"本地方法栈","link":"#本地方法栈","children":[]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[{"level":3,"title":"堆内存划分","slug":"堆内存划分","link":"#堆内存划分","children":[]},{"level":3,"title":"新生代","slug":"新生代","link":"#新生代","children":[]},{"level":3,"title":"老年代","slug":"老年代","link":"#老年代","children":[]},{"level":3,"title":"创建一个新对象的内存分配流程","slug":"创建一个新对象的内存分配流程","link":"#创建一个新对象的内存分配流程","children":[]},{"level":3,"title":"堆内存与 OOM","slug":"堆内存与-oom","link":"#堆内存与-oom","children":[]},{"level":3,"title":"TLAB","slug":"tlab","link":"#tlab","children":[]}]},{"level":2,"title":"方法区","slug":"方法区","link":"#方法区","children":[{"level":3,"title":"永久代与元空间","slug":"永久代与元空间","link":"#永久代与元空间","children":[]},{"level":3,"title":"方法区内存与 OOM","slug":"方法区内存与-oom","link":"#方法区内存与-oom","children":[]},{"level":3,"title":"方法区内部结构","slug":"方法区内部结构","link":"#方法区内部结构","children":[]}]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":18.4,"words":5520},"filePathRelative":"writings/JVM/runtime-memory-model.md","localizedDate":"2023年2月28日","excerpt":"<h1> Java 运行时内存模型</h1>\\n<p>内存是非常重要的系统资源，是硬盘和 CPU 的中间仓库及桥梁，承载着操作系统和应用程序的实时运行。JVM 内存布局规定了 Java 在运行过程中内存申请、分配、管理的策略，保证了 JVM 的高效稳定运行。</p>\\n<p>JVM运行时数据区大致包括以下五个部分</p>\\n<ul>\\n<li>程序计数器</li>\\n<li>虚拟机栈</li>\\n<li>本地方法栈</li>\\n<li>方法区</li>\\n<li>堆</li>\\n</ul>\\n<h2> JVM 整体架构</h2>\\n<p><img src=\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220318171130.png\\" alt=\\"\\"></p>","autoDesc":true}');export{e as data};
