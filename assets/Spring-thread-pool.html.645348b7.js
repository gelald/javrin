import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o as p,c as o,a as n,b as c,w as i,e as s,d as l}from"./app.e035fa12.js";const u={},k=n("h1",{id:"springboot-\u7EBF\u7A0B\u6C60",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#springboot-\u7EBF\u7A0B\u6C60","aria-hidden":"true"},"#"),s(" SpringBoot \u7EBF\u7A0B\u6C60")],-1),d=n("p",null,"\u4F17\u6240\u5468\u77E5\uFF0C\u300CSpring makes all simple\u300D\uFF0C\u5F53\u7136\u4E5F\u5305\u62EC\u7EBF\u7A0B\u6C60\u3002",-1),r=s("\u7EBF\u7A0B\u6C60\u56DE\u987E\uFF1A"),v=s("\u7EBF\u7A0B\u6C60"),m=l(`<h2 id="spring-\u5B9E\u73B0\u7684\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#spring-\u5B9E\u73B0\u7684\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> Spring \u5B9E\u73B0\u7684\u7EBF\u7A0B\u6C60</h2><p>\u5148\u770B\u770B Spring \u4E2D\u63D0\u4F9B\u7684\u7EBF\u7A0B\u6C60</p><h3 id="taskexecutor" tabindex="-1"><a class="header-anchor" href="#taskexecutor" aria-hidden="true">#</a> TaskExecutor</h3><p><code>TaskExecutor</code> \u662F Spring \u4E2D\u7EBF\u7A0B\u6C60\u7684\u9876\u5C42\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">TaskExecutor</span> <span class="token keyword">extends</span> <span class="token class-name">Executor</span> <span class="token punctuation">{</span>
    
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230\u5B83\u662F\u7EE7\u627F\u4E86 JDK \u4E2D\u7684\u7EBF\u7A0B\u6C60\u63A5\u53E3 <code>Executor</code> \uFF0C\u4E5F\u6CA1\u6709\u505A\u9488\u5BF9 <code>execute</code> \u65B9\u6CD5\u7684\u5B9E\u73B0\uFF0C\u53EF\u4EE5\u770B\u51FA\u5B83\u5BF9\u4E8E\u5176\u5B9E\u73B0\u7C7B\u66F4\u591A\u5730\u53EA\u662F\u4F5C\u4E3A\u4E00\u4E2A\u6807\u8BC6\uFF0C\u6807\u8BC6\u8FD9\u662F Spring \u7684\u7EBF\u7A0B\u6C60\u3002</p><blockquote><p>\u53E6\u5916\u4E00\u53E5\u9898\u5916\u8BDD\uFF1A\u4ECE Spring \u5BF9\u5176\u547D\u540D\u4EE5\u53CA\u62BD\u8C61\u65B9\u6CD5\u4E2D\u5F62\u53C2\u7684\u547D\u540D\u6765\u770B\uFF0C\u6211\u8BA4\u4E3A Spring \u60F3\u7ED9\u5F00\u53D1\u4EBA\u5458\u660E\u786E\u4E00\u4E2A\u601D\u60F3\uFF1A\u6240\u6709\u7EBF\u7A0B\u6C60\u4E2D\u8FD0\u884C\u7684\u7EBF\u7A0B\uFF0C\u90FD\u8BA4\u4E3A\u662F\u4E00\u4E2A\u4EFB\u52A1</p></blockquote><h3 id="simpleasynctaskexecutor" tabindex="-1"><a class="header-anchor" href="#simpleasynctaskexecutor" aria-hidden="true">#</a> SimpleAsyncTaskExecutor</h3><p><code>SimpleAsyncTaskExecutor</code> \u867D\u7136\u662F\u5B9E\u73B0\u4E86\u9876\u5C42\u63A5\u53E3 <code>TaskExecutor</code> \uFF0C\u4F46\u662F\u4E25\u683C\u610F\u4E49\u4E0A\u6765\u8BF4\uFF0C\u4ED6\u4E0D\u80FD\u5F52\u5C5E\u4E8E\u7EBF\u7A0B\u6C60\u3002</p><p>\u6211\u4EEC\u8FD9\u5C31\u4E00\u6B65\u6B65\u770B\u4ED6\u5DE5\u4F5C\u6D41\u7A0B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleAsyncTaskExecutor</span> <span class="token keyword">extends</span> <span class="token class-name">CustomizableThreadCreator</span> <span class="token keyword">implements</span> <span class="token class-name">AsyncListenableTaskExecutor</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token function">execute</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> TIMEOUT_INDEFINITE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">,</span> <span class="token keyword">long</span> startTimeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token string">&quot;Runnable must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Runnable</span> taskToUse <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>taskDecorator <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>taskDecorator<span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token operator">:</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isThrottleActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> startTimeout <span class="token operator">&gt;</span> TIMEOUT_IMMEDIATE<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">this</span><span class="token punctuation">.</span>concurrencyThrottle<span class="token punctuation">.</span><span class="token function">beforeAccess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ConcurrencyThrottlingRunnable</span><span class="token punctuation">(</span>taskToUse<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token function">doExecute</span><span class="token punctuation">(</span>taskToUse<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
    
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doExecute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token comment">// \u6BCF\u6B21\u90FD\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u5E76\u542F\u52A8\u8FD9\u4E2A\u7EBF\u7A0B\u4EFB\u52A1</span>
		<span class="token class-name">Thread</span> thread <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">this</span><span class="token punctuation">.</span>threadFactory<span class="token punctuation">.</span><span class="token function">newThread</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">createThread</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		thread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
    
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53EF\u4EE5\u770B\u5230 <code>execute(Runnable task)</code> \u65B9\u6CD5\u5F80\u4E0B\u8C03\u7528\u4E86 <code>execute(Runnable task, long startTimeout)</code> \u65B9\u6CD5\uFF0C\u6700\u7EC8\u4F1A\u8C03\u7528\u771F\u6B63\u6267\u884C\u7684 <code>doExecute(Runnable task)</code></p><blockquote><p>\u9898\u5916\u8BDD\uFF0Cxxx\u3001doXxx\u7684\u547D\u540D\u65B9\u5F0F\uFF0C\u5F88Spring~</p></blockquote><p>\u5728 <code>doExecute</code> \u65B9\u6CD5\u4E2D\uFF0C\u5C45\u7136\u6BCF\u6B21\u8C03\u7528\u90FD\u662F\u521B\u5EFA\u4E86\u4E00\u4E2A\u65B0\u7684\u7EBF\u7A0B\uFF01</p><blockquote><p>\u597D\u5BB6\u4F19\uFF0C\u53C8\u56DE\u5230\u6700\u521D\u5B66\u4E60\u591A\u7EBF\u7A0B\u7684\u65F6\u5019\uFF0C\u624B\u52A8\u521B\u5EFA\u7EBF\u7A0B</p></blockquote><p>\u8FD9\u79CD\u9891\u7E41\u5730\u521B\u5EFA\u7EBF\u7A0B\u7684\u505A\u6CD5\u663E\u7136\u662F\u4E0D\u5408\u7406\u7684\uFF0C\u6240\u4EE5 <code>SimpleAsyncTaskExecutor</code> \u4E0D\u80FD\u79F0\u4E3A\u771F\u6B63\u610F\u4E49\u4E0A\u7684\u7EBF\u7A0B\u6C60</p><h3 id="synctaskexecutor" tabindex="-1"><a class="header-anchor" href="#synctaskexecutor" aria-hidden="true">#</a> SyncTaskExecutor</h3><p>\u4ECE\u540D\u5B57\u4E0A\u770B\uFF0C\u53EF\u4EE5\u5927\u6982\u77E5\u9053 <code>SyncTaskExecutor</code> \u8FD9\u4E2A\u7EBF\u7A0B\u6C60\u662F\u4E00\u4E2A\u540C\u6B65\u7684\u7EBF\u7A0B\u6C60</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SyncTaskExecutor</span> <span class="token keyword">implements</span> <span class="token class-name">TaskExecutor</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">SyncTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Assert</span><span class="token punctuation">.</span><span class="token function">notNull</span><span class="token punctuation">(</span>task<span class="token punctuation">,</span> <span class="token string">&quot;Runnable must not be null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        task<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>execute(Runnable task)</code> \u65B9\u6CD5\u53EA\u662F\u7B80\u5355\u6267\u884C\u4E86\u7EBF\u7A0B\u7684 <code>run</code> \u65B9\u6CD5\uFF0C\u6CE8\u610F\uFF1A\u4E0D\u662F <code>start</code> \u65B9\u6CD5\uFF0C\u6240\u4EE5\u8BF4\u8FD9\u662F\u4E00\u4E2A<strong>\u540C\u6B65\u8C03\u7528</strong></p><blockquote><p>\u597D\u5BB6\u4F19\uFF0C\u5B66\u4E60\u591A\u7EBF\u7A0B\u7684\u65F6\u5019\u5C31\u591A\u6B21\u63D0\u9192\u5F00\u542F\u7EBF\u7A0B\u4E0D\u80FD\u6267\u884C <code>run</code> \u65B9\u6CD5\uFF0C\u800C\u662F\u8981\u6267\u884C <code>start</code> \u65B9\u6CD5\u7B49\u5F85\u7EBF\u7A0B\u8C03\u7528</p></blockquote><p>\u56E0\u6B64 <code>SyncTaskExecutor</code> \u4E00\u822C\u4E0D\u9002\u5408\u7528\u4E8E\u591A\u7EBF\u7A0B\u7684\u4E1A\u52A1</p><h3 id="threadpooltaskexecutor" tabindex="-1"><a class="header-anchor" href="#threadpooltaskexecutor" aria-hidden="true">#</a> ThreadPoolTaskExecutor</h3><p>\u8FD9\u4E2A\u662F\u6700\u5E38\u7528\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5B9E\u9645\u4E0A\u662F\u5BF9 JDK \u7684 <code>ThreadPoolExecutor</code> \u7684\u4E00\u4E2A\u5305\u88C5</p><p>\u5176\u521B\u5EFA\u65B9\u5F0F\u548C <code>ThreadPoolExecutor</code> \u7684\u521B\u5EFA\u65B9\u5F0F\u57FA\u672C\u4FDD\u6301\u4E00\u81F4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ThreadPoolTaskExecutor</span> <span class="token keyword">extends</span> <span class="token class-name">ExecutorConfigurationSupport</span> <span class="token keyword">implements</span> <span class="token class-name">AsyncListenableTaskExecutor</span><span class="token punctuation">,</span> <span class="token class-name">SchedulingTaskExecutor</span> <span class="token punctuation">{</span>

	<span class="token comment">//\u975E\u5E38\u719F\u6089\u7684\u53C2\u6570</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds <span class="token operator">=</span> <span class="token number">60</span><span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">;</span>
	<span class="token keyword">private</span> <span class="token keyword">boolean</span> allowCoreThreadTimeOut <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">private</span> <span class="token class-name">TaskDecorator</span> taskDecorator<span class="token punctuation">;</span>

	<span class="token comment">//\u5B9E\u9645\u4E0A\u4F7F\u7528\u4E86 JDK \u7684\u7EBF\u7A0B\u6C60\u6765\u5B8C\u6210\u7EBF\u7A0B\u7684\u8C03\u7528</span>
	<span class="token annotation punctuation">@Nullable</span>
	<span class="token keyword">private</span> <span class="token class-name">ThreadPoolExecutor</span> threadPoolExecutor<span class="token punctuation">;</span>
	
	<span class="token comment">//\u4F7F\u7528\u4E0A\u9762\u7684\u53C2\u6570\u6765\u521D\u59CB\u5316\u4E00\u4E2A JDK \u7684\u7EBF\u7A0B\u6C60</span>
	<span class="token annotation punctuation">@Override</span>
	<span class="token keyword">protected</span> <span class="token class-name">ExecutorService</span> <span class="token function">initializeExecutor</span><span class="token punctuation">(</span>
			<span class="token class-name">ThreadFactory</span> threadFactory<span class="token punctuation">,</span> <span class="token class-name">RejectedExecutionHandler</span> rejectedExecutionHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>

		<span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> queue <span class="token operator">=</span> <span class="token function">createQueue</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">ThreadPoolExecutor</span> executor<span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>taskDecorator <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxPoolSize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveSeconds<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
					queue<span class="token punctuation">,</span> threadFactory<span class="token punctuation">,</span> rejectedExecutionHandler<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token annotation punctuation">@Override</span>
				<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">Runnable</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token class-name">Runnable</span> decorated <span class="token operator">=</span> taskDecorator<span class="token punctuation">.</span><span class="token function">decorate</span><span class="token punctuation">(</span>command<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token keyword">if</span> <span class="token punctuation">(</span>decorated <span class="token operator">!=</span> command<span class="token punctuation">)</span> <span class="token punctuation">{</span>
						decoratedTaskMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>decorated<span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">;</span>
					<span class="token punctuation">}</span>
					<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>decorated<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">(</span>
					<span class="token keyword">this</span><span class="token punctuation">.</span>corePoolSize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maxPoolSize<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keepAliveSeconds<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span>SECONDS<span class="token punctuation">,</span>
					queue<span class="token punctuation">,</span> threadFactory<span class="token punctuation">,</span> rejectedExecutionHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token punctuation">}</span>

		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>allowCoreThreadTimeOut<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			executor<span class="token punctuation">.</span><span class="token function">allowCoreThreadTimeOut</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>

		<span class="token keyword">this</span><span class="token punctuation">.</span>threadPoolExecutor <span class="token operator">=</span> executor<span class="token punctuation">;</span>
		<span class="token keyword">return</span> executor<span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	<span class="token comment">//\u5982\u679C\u6709\u4F20\u5165\u7EBF\u7A0B\u6C60\u4EFB\u52A1\u961F\u5217\u7684\u5BB9\u91CF\uFF0C\u90A3\u5C31\u4F7F\u7528 LinkedBlockQueue \uFF0C\u5426\u5219\u4F7F\u7528 SynchronousQueue \u8FD9\u79CD\u4E0D\u5B58\u50A8\u5143\u7D20\u7684\u963B\u585E\u961F\u5217</span>
	<span class="token keyword">protected</span> <span class="token class-name">BlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Runnable</span><span class="token punctuation">&gt;</span></span> <span class="token function">createQueue</span><span class="token punctuation">(</span><span class="token keyword">int</span> queueCapacity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>queueCapacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">LinkedBlockingQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">SynchronousQueue</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u8FD9\u4E2A <code>initializeExecutor</code> \u65B9\u6CD5\u662F\u5728\u5176\u7236\u7C7B <code>ExecutorConfigurationSupport</code> \u5B9E\u73B0\u4E86 <code>InitializingBean</code> \u63A5\u53E3\uFF0C\u5728 <code>afterPropertiesSet</code> \u8C03\u7528\u7684\uFF0C\u4E5F\u5C31\u662F\u8BF4 <code>ThreadPoolTaskExecutor</code> \u5728\u521D\u59CB\u5316\u65F6\u5C31\u6839\u636E\u8FD9\u4E9B\u53C2\u6570\u521B\u5EFA\u4E86\u4EFB\u52A1\u961F\u5217\u3001JDK \u7684\u7EBF\u7A0B\u6C60\u3002</p><p>\u6B64\u5916\uFF0C\u7236\u7C7B\u8FD8\u5B9E\u73B0\u4E86 <code>DisposableBean</code> \u63A5\u53E3\uFF0C\u5F53\u5BB9\u5668\u5173\u95ED\u65F6\uFF0C\u4E5F\u80FD\u81EA\u52A8\u6839\u636E\u53C2\u6570 <code>waitForTasksToCompleteOnShutdown</code> \u6765\u9500\u6BC1\u7EBF\u7A0B\u6C60\u3001\u505C\u6B62\u4EFB\u52A1\u3002</p><h2 id="springboot-\u4F7F\u7528\u7EBF\u7A0B\u6C60\u8FDB\u884C\u5F02\u6B65\u8C03\u7528" tabindex="-1"><a class="header-anchor" href="#springboot-\u4F7F\u7528\u7EBF\u7A0B\u6C60\u8FDB\u884C\u5F02\u6B65\u8C03\u7528" aria-hidden="true">#</a> SpringBoot \u4F7F\u7528\u7EBF\u7A0B\u6C60\u8FDB\u884C\u5F02\u6B65\u8C03\u7528</h2><h3 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h3><p>\u5728 SpringBoot \u9879\u76EE\u4E2D\u4F7F\u7528\u7EBF\u7A0B\u6C60\u5B9E\u73B0\u5F02\u6B65\u8C03\u7528\u5F88\u7B80\u5355\uFF0C\u53EA\u9700\u8981\u501F\u52A9 <code>@Async</code> \u6CE8\u89E3\u3002</p><p>\u88AB <code>@Async</code> \u4FEE\u9970\u7684\u65B9\u6CD5\u53EA\u80FD\u8981\u4E48\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u8981\u4E48\u8FD4\u56DE <code>Future&lt;?&gt;</code> \u5BF9\u8C61\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTask</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Async</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testVoidAsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u65E0\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u6210&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    
    <span class="token annotation punctuation">@Async</span>
    <span class="token keyword">public</span> <span class="token class-name">Future</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">testFutureAsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6709\u8FD4\u56DE\u503C\u7684\u5F02\u6B65\u4EFB\u52A1\u6267\u884C\u5B8C\u6210\uFF0C\u83B7\u53D6\u7ED3\u679C\u5C06\u4F1A\u963B\u585E\u4E3B\u7EBF\u7A0B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">AsyncResult</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6CE8\u610F\u4E8B\u9879" tabindex="-1"><a class="header-anchor" href="#\u6CE8\u610F\u4E8B\u9879" aria-hidden="true">#</a> \u6CE8\u610F\u4E8B\u9879</h3><ol><li>\u8C03\u7528\u88AB <code>@Async</code> \u548C <code>@Transactional</code> \u6807\u6CE8\u7684\u65B9\u6CD5\u9700\u8981\u4ECE<strong>\u5916\u90E8\u8C03\u7528</strong>\uFF0C\u5185\u90E8\u8C03\u7528\u662F\u4F1A\u5BFC\u81F4\u5931\u6548\u7684\uFF0C\u56E0\u4E3A <code>@Transactional</code> \u548C <code>@Async</code> \u6CE8\u89E3\u7684\u5B9E\u73B0\u90FD\u662F\u57FA\u4E8E Spring \u7684 AOP\uFF0C\u800C AOP \u7684\u5B9E\u73B0\u662F\u57FA\u4E8E\u52A8\u6001\u4EE3\u7406\u6A21\u5F0F\u5B9E\u73B0\u7684\u3002\u90A3\u4E48\u6CE8\u89E3\u5931\u6548\u7684\u539F\u56E0\u5C31\u5F88\u660E\u663E\u4E86\uFF0C\u6709\u53EF\u80FD\u56E0\u4E3A\u8C03\u7528\u65B9\u6CD5\u7684\u662F\u5BF9\u8C61\u672C\u8EAB\u800C\u4E0D\u662F\u4EE3\u7406\u5BF9\u8C61\uFF0C\u56E0\u4E3A<strong>\u6CA1\u6709\u7ECF\u8FC7 Spring \u5BB9\u5668</strong>\u3002</li><li>\u8FD9\u91CC\u8FDB\u884C\u5F02\u6B65\u8C03\u7528\u7684\u7EBF\u7A0B\u6C60\u4F7F\u7528\u7684\u662F Spring \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60 <code>SimpleAsyncTaskExecutor</code> \uFF0C\u4E0A\u9762\u5DF2\u7ECF\u5206\u6790\u8FC7\uFF0C\u8FD9\u4E2A\u7EBF\u7A0B\u6C60\u7531\u4E8E\u6BCF\u6B21\u90FD\u521B\u5EFA\u4E00\u4E2A\u65B0\u7EBF\u7A0B\u6765\u6267\u884C\u4EFB\u52A1\uFF0C\u5F00\u9500\u5927\u800C\u4E14\u6709 OOM \u7684\u98CE\u9669\uFF0C\u6240\u4EE5\u4E0D\u80FD\u76F4\u63A5\u4F7F\u7528\uFF0C\u9700\u8981\u81EA\u5B9A\u4E49\u4E00\u4E2A\u9002\u5408\u4E1A\u52A1\u7684\u7EBF\u7A0B\u6C60\u3002</li></ol><h2 id="springboot-\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60" tabindex="-1"><a class="header-anchor" href="#springboot-\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60" aria-hidden="true">#</a> SpringBoot \u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60</h2><p>\u65E2\u7136\u4F7F\u7528 Spring \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60 <code>SimpleAsyncTaskExecutor</code> \u4F1A\u6709 OOM \u7684\u98CE\u9669\uFF0C\u6240\u4EE5\u6211\u4EEC\u9700\u8981\u81EA\u5B9A\u4E49\u4E00\u4E2A\u6EE1\u8DB3\u4E1A\u52A1\u3001\u5B89\u5168\u7684\u7EBF\u7A0B\u6C60\u3002</p><p>\u5728 SpringBoot \u9879\u76EE\u4E2D\u5B9A\u4E49\u5E76\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60\u6709\u4EE5\u4E0B\u4E24\u79CD\u65B9\u5F0F</p><h3 id="_1-\u76F4\u63A5\u6839\u636E\u914D\u7F6E\u5B9A\u4E49\u7EBF\u7A0B\u6C60-bean" tabindex="-1"><a class="header-anchor" href="#_1-\u76F4\u63A5\u6839\u636E\u914D\u7F6E\u5B9A\u4E49\u7EBF\u7A0B\u6C60-bean" aria-hidden="true">#</a> 1. \u76F4\u63A5\u6839\u636E\u914D\u7F6E\u5B9A\u4E49\u7EBF\u7A0B\u6C60 Bean</h3><p>\u624B\u52A8\u6839\u636E\u53C2\u6570\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\u6C60\u7684 Bean\uFF0C\u7136\u540E\u5728\u8C03\u7528\u65F6\u5728 <code>@Async</code> \u6CE8\u89E3\u4E2D\u586B\u5199\u4F7F\u7528\u7684\u7EBF\u7A0B\u6C60\u7684 BeanName</p><p>\u8FD9\u79CD\u65B9\u5F0F\u6BD4\u8F83\u7075\u6D3B\uFF0C\u80FD\u6307\u5B9A\u6BCF\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\u6240\u4F7F\u7528\u7684\u7EBF\u7A0B\u6C60</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u542F\u52A8\u591A\u7EBF\u7A0B\u7684\u652F\u6301</span>
<span class="token annotation punctuation">@EnableAsync</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTaskConfig</span> <span class="token punctuation">{</span>
 
    <span class="token comment">// \u65B9\u4FBF\u6F14\u793A\u5C31\u5148\u4F7F\u7528@Value</span>
    <span class="token comment">// \u4E00\u822C\u4F1A\u4F7F\u7528@EnableConfigurationProperties\u4FEE\u9970\u4E00\u4E2A\u914D\u7F6E\u7C7B\uFF0C\u7EDF\u4E00\u7BA1\u7406\u76F8\u5173\u914D\u7F6E</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.core-size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.max-size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.queue-capacity}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.thread-name-prefix}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> namePrefix<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.keep-alive}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds<span class="token punctuation">;</span>
    
    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">customExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6700\u5927\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4EFB\u52A1\u961F\u5217\u7684\u5927\u5C0F</span>
        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EBF\u7A0B\u524D\u7F00\u540D</span>
        executor<span class="token punctuation">.</span><span class="token function">setThreadNamePrefix</span><span class="token punctuation">(</span>namePrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u975E\u6838\u5FC3\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4</span>
        executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u62D2\u7EDD\u5904\u7406\u7B56\u7565\uFF0C\u4EA4\u7ED9\u8C03\u7528\u65B9\u6CD5\u7EBF\u7A0B\u6267\u884C</span>
        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EBF\u7A0B\u6C60\u521D\u59CB\u5316</span>
        executor<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTask</span> <span class="token punctuation">{</span>
 
    <span class="token comment">// \u4F20\u5165\u81EA\u5B9A\u4E49\u7EBF\u7A0B\u6C60\u7684\u540D\u5B57</span>
    <span class="token comment">// \u544A\u8BC9 Spring \u8FD9\u91CC\u4F7F\u7528\u6211\u4EEC\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60\u800C\u4E0D\u662F\u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60</span>
    <span class="token annotation punctuation">@Async</span><span class="token punctuation">(</span><span class="token string">&quot;customExecutor&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60\u5B8C\u6210\u4E1A\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-\u5B9E\u73B0-asyncconfigurer-\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_2-\u5B9E\u73B0-asyncconfigurer-\u63A5\u53E3" aria-hidden="true">#</a> 2. \u5B9E\u73B0 AsyncConfigurer \u63A5\u53E3</h3><p>\u5B9E\u73B0\u8FD9\u4E2A\u63A5\u53E3\u5373\u53EF\u66FF\u6362\u6389 Spring \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\uFF0C\u5728\u4F7F\u7528 <code>@Async</code> \u7684\u65F6\u5019\u4E5F\u5C31\u4E0D\u7528\u518D\u6307\u5B9A\u7EBF\u7A0B\u6C60\u7684\u540D\u5B57\u4E86\u3002</p><p>\u8FD9\u79CD\u65B9\u5F0F\u66FF\u6362\u4E86 Spring \u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\uFF0C\u8FD8\u53EF\u4EE5\u5B9A\u4E49\u5F02\u5E38\u7684\u5904\u7406\uFF0C\u8F83\u4E3A\u4F18\u96C5\uFF1B\u4F46\u5176\u5B9E\u548C\u7B2C\u4E00\u79CD\u65B9\u5F0F\u5E76\u4E0D\u51B2\u7A81\uFF0C\u5982\u679C\u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\u65E0\u6CD5\u6EE1\u8DB3\u6240\u6709\u9700\u6C42\uFF0C\u90A3\u4E48\u5B9A\u4E49\u5176\u4ED6\u7EBF\u7A0B\u6C60\u4E5F\u662F\u5F88\u5408\u7406\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * \u539F\u751F(Spring)\u5F02\u6B65\u7EBF\u7A0B\u6C60\u88C5\u914D\u7C7B
 * \u5B9E\u73B0AsyncConfigurer\u63A5\u53E3\uFF0C\u91CD\u5199getAsyncExecutor\u548CgetAsyncUncaughtExceptionHandler\u65B9\u6CD5\uFF0C
 * \u8FD9\u6837\u4F7F\u7528\u9ED8\u8BA4\u7EBF\u7A0B\u6C60\u65F6\u5C31\u4F1A\u4F7F\u7528\u81EA\u5DF1\u91CD\u5199\u4E4B\u540E\u7684\u7EBF\u7A0B\u6C60
 **/</span>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@EnableAsync</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NativeAsyncTaskConfig</span> <span class="token keyword">implements</span> <span class="token class-name">AsyncConfigurer</span> <span class="token punctuation">{</span>

    <span class="token comment">// \u65B9\u4FBF\u6F14\u793A\u5C31\u5148\u4F7F\u7528@Value</span>
    <span class="token comment">// \u4E00\u822C\u4F1A\u4F7F\u7528@EnableConfigurationProperties\u4FEE\u9970\u4E00\u4E2A\u914D\u7F6E\u7C7B\uFF0C\u7EDF\u4E00\u7BA1\u7406\u76F8\u5173\u914D\u7F6E</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.core-size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> corePoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.max-size}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> maxPoolSize<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.queue-capacity}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> queueCapacity<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.thread-name-prefix}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> namePrefix<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.keep-alive}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> keepAliveSeconds<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.wait-for-tasks-to-complete-on-shutdown}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> waitForTasksToCompleteOnShutdown<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${spring.task.execution.pool.await-termination-seconds}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">boolean</span> awaitTerminationSeconds<span class="token punctuation">;</span>
    
	<span class="token doc-comment comment">/**
     * \u91CD\u5199\u9ED8\u8BA4\u7EBF\u7A0B\u6C60
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Executor</span> <span class="token function">getAsyncExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ThreadPoolTaskExecutor</span> executor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ThreadPoolTaskExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6700\u5927\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setMaxPoolSize</span><span class="token punctuation">(</span>maxPoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6838\u5FC3\u7EBF\u7A0B\u6570</span>
        executor<span class="token punctuation">.</span><span class="token function">setCorePoolSize</span><span class="token punctuation">(</span>corePoolSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4EFB\u52A1\u961F\u5217\u7684\u5927\u5C0F</span>
        executor<span class="token punctuation">.</span><span class="token function">setQueueCapacity</span><span class="token punctuation">(</span>queueCapacity<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EBF\u7A0B\u540D\u524D\u7F00</span>
        executor<span class="token punctuation">.</span><span class="token function">setThreadNamePrefix</span><span class="token punctuation">(</span>namePrefix<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u975E\u6838\u5FC3\u7EBF\u7A0B\u5B58\u6D3B\u65F6\u95F4</span>
        executor<span class="token punctuation">.</span><span class="token function">setKeepAliveSeconds</span><span class="token punctuation">(</span>keepAliveSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u7EBF\u7A0B\u6C60\u5173\u95ED\u7684\u65F6\u5019\u7B49\u5F85\u6240\u6709\u4EFB\u52A1\u90FD\u5B8C\u6210</span>
        executor<span class="token punctuation">.</span><span class="token function">setWaitForTasksToCompleteOnShutdown</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u8BBE\u7F6E\u7EBF\u7A0B\u6C60\u4E2D\u4EFB\u52A1\u7684\u7B49\u5F85\u65F6\u95F4\uFF0C\u5982\u679C\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u5019\u8FD8\u6CA1\u6709\u9500\u6BC1\u5C31\u5F3A\u5236\u9500\u6BC1\uFF0C\u4EE5\u786E\u4FDD\u5E94\u7528\u6700\u540E\u80FD\u591F\u88AB\u5173\u95ED\uFF0C\u800C\u4E0D\u662F\u963B\u585E\u4F4F</span>
        executor<span class="token punctuation">.</span><span class="token function">setAwaitTerminationSeconds</span><span class="token punctuation">(</span>awaitTerminationSeconds<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u62D2\u7EDD\u5904\u7406\u7B56\u7565\uFF0C\u4EA4\u7ED9\u8C03\u7528\u65B9\u6CD5\u7EBF\u7A0B\u6267\u884C</span>
        executor<span class="token punctuation">.</span><span class="token function">setRejectedExecutionHandler</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ThreadPoolExecutor<span class="token punctuation">.</span>CallerRunsPolicy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7EBF\u7A0B\u6C60\u521D\u59CB\u5316</span>
        executor<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> executor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5F02\u6B65\u4EFB\u52A1\u91CD\u5F02\u5E38\u5904\u7406
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">AsyncUncaughtExceptionHandler</span> <span class="token function">getAsyncUncaughtExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>ex<span class="token punctuation">,</span> method<span class="token punctuation">,</span> params<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F02\u6B65\u4EFB\u52A1\u53D1\u751F\u5F02\u5E38\uFF0C\u65B9\u6CD5\u540D:{}\uFF0C\u53C2\u6570\u8868:{}&quot;</span><span class="token punctuation">,</span> method<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AsyncTask</span> <span class="token punctuation">{</span>
 
    <span class="token comment">// \u4F7F\u7528\u7684\u662F\u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\uFF0C\u800C\u9ED8\u8BA4\u7684\u7EBF\u7A0B\u6C60\u5DF2\u88AB\u6211\u4EEC\u91CD\u5199</span>
    <span class="token annotation punctuation">@Async</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testAsyncTask</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u81EA\u5B9A\u4E49\u7684\u7EBF\u7A0B\u6C60\u5B8C\u6210\u4E1A\u52A1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48);function b(y,x){const a=e("RouterLink");return p(),o("div",null,[k,n("blockquote",null,[d,n("p",null,[r,c(a,{to:"/writings/concurrency/thread-pool.html"},{default:i(()=>[v]),_:1})])]),m])}var g=t(u,[["render",b],["__file","Spring-thread-pool.html.vue"]]);export{g as default};
