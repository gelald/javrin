import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.a2df5739.js";const t={},e=p(`<h1 id="\u59D4\u6D3E\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u59D4\u6D3E\u6A21\u5F0F" aria-hidden="true">#</a> \u59D4\u6D3E\u6A21\u5F0F</h1><p>\u59D4\u6D3E\u6A21\u5F0F\uFF1A\u8D1F\u8D23\u4EFB\u52A1\u7684\u8C03\u5EA6\u548C\u4EFB\u52A1\u7684\u5206\u914D\uFF0C\u5C06\u4EFB\u52A1\u7684\u5206\u914D\u548C\u6267\u884C\u5206\u79BB\u5F00\u6765\u3002\u53EF\u4EE5\u770B\u4F5C\u662F\u4E00\u79CD\u7279\u6B8A\u60C5\u51B5\u4E0B\u7684\u9759\u6001\u4EE3\u7406\u7684\u5168\u6743\u4EE3\u7406</p><p>\u9002\u7528\u573A\u666F\uFF1A\u59D4\u6D3E\u5BF9\u8C61\u662F\u4E0D\u77E5\u9053\u5982\u4F55\u5904\u7406\u4E00\u4E2A\u4EFB\u52A1\u7684\uFF0C\u53EA\u662F\u628A\u4EFB\u52A1\u4EA4\u7ED9\u5176\u4ED6\u5BF9\u8C61\u6765\u5904\u7406</p><p>\u4F18\u70B9\uFF1A\u901A\u8FC7\u4EFB\u52A1\u59D4\u6D3E\u7684\u65B9\u5F0F\uFF0C\u80FD\u591F\u628A\u4E00\u4E2A\u5927\u578B\u7684\u4EFB\u52A1\u7EC6\u5316\uFF0C\u7136\u540E\u901A\u8FC7\u7EDF\u4E00\u7BA1\u7406\u8FD9\u4E9B\u5B50\u4EFB\u52A1\u7684\u5B8C\u6210\u60C5\u51B5\u5B9E\u73B0\u4EFB\u52A1\u7684\u8DDF\u8FDB\uFF0C\u80FD\u591F\u52A0\u5FEB\u4EFB\u52A1\u6267\u884C\u7684\u6548\u7387</p><p>\u7F3A\u70B9\uFF1A\u4EFB\u52A1\u59D4\u6D3E\u7684\u65B9\u5F0F\u9700\u8981\u6839\u636E\u4EFB\u52A1\u7684\u590D\u6742\u7A0B\u5EA6\u8FDB\u884C\u4E0D\u540C\u7684\u6539\u53D8\uFF0C\u5728\u4EFB\u52A1\u6BD4\u8F83\u590D\u6742\u7684\u60C5\u51B5\u4E0B\u53EF\u80FD\u9700\u8981\u591A\u91CD\u59D4\u6D3E\uFF0C\u5BB9\u6613\u5BFC\u81F4\u7D0A\u4E71</p><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><p>\u4EE5\u5458\u5DE5\u3001\u9886\u5BFC\u3001\u8001\u677F\u4E3A\u4F8B\uFF0C\u8001\u677F\u8BA9\u9886\u5BFC\u5E72\u6D3B\uFF0C\u9886\u5BFC\u4E0D\u4F1A\u4EB2\u81EA\u53BB\u505A\uFF0C\u800C\u662F\u628A\u4EFB\u52A1\u4E00\u4E2A\u4E00\u4E2A\u59D4\u6D3E\u7ED9\u4E0B\u9762\u7684\u5458\u5DE5\u6765\u5177\u4F53\u5B8C\u6210</p><p>\u5458\u5DE5\u7EDF\u4E00\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IEmployee</span> <span class="token punctuation">{</span>
    <span class="token keyword">void</span> <span class="token function">doing</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u4E24\u4E2A\u5458\u5DE5\u7684\u5B9E\u73B0\u4EE3\u8868\u4E24\u79CD\u64C5\u957F\u80FD\u529B</p><p>\u5458\u5DE5A\u5177\u4F53\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeA</span> <span class="token keyword">implements</span> <span class="token class-name">IEmployee</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> goodAt <span class="token operator">=</span> <span class="token string">&quot;\u7F16\u7A0B&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doing</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u5458\u5DE5A\uFF0C\u6211\u64C5\u957F&quot;</span> <span class="token operator">+</span> goodAt <span class="token operator">+</span> <span class="token string">&quot;,\u73B0\u5728\u5F00\u59CB\u505A&quot;</span> <span class="token operator">+</span>task <span class="token operator">+</span> <span class="token string">&quot;\u5DE5\u4F5C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5458\u5DE5B\u5177\u4F53\u5B9E\u73B0</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmployeeB</span> <span class="token keyword">implements</span> <span class="token class-name">IEmployee</span> <span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> goodAt <span class="token operator">=</span> <span class="token string">&quot;\u5E73\u9762\u8BBE\u8BA1&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doing</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u6211\u662F\u5458\u5DE5B\uFF0C\u6211\u64C5\u957F&quot;</span> <span class="token operator">+</span> goodAt <span class="token operator">+</span> <span class="token string">&quot;,\u73B0\u5728\u5F00\u59CB\u505A&quot;</span> <span class="token operator">+</span>task <span class="token operator">+</span> <span class="token string">&quot;\u5DE5\u4F5C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9886\u5BFC\u5B9E\u73B0\uFF0C\u4E0D\u4EB2\u81EA\u5B8C\u6210\u5DE5\u4F5C\uFF0C\u800C\u662F\u53BB\u59D4\u6D3E\u7ED9\u64C5\u957F\u505A\u7684\u5458\u5DE5\u6765\u5B8C\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Leader</span> <span class="token keyword">implements</span> <span class="token class-name">IEmployee</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">IEmployee</span><span class="token punctuation">&gt;</span></span> employee <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">IEmployee</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        employee<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u722C\u866B&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">EmployeeA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        employee<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D77\u62A5\u56FE&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">EmployeeB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doing</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>employee<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FD9\u4E2A\u4EFB\u52A1&quot;</span> <span class="token operator">+</span>task <span class="token operator">+</span> <span class="token string">&quot;\u8D85\u51FA\u6211\u7684\u80FD\u529B\u8303\u56F4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        employee<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doing</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8001\u677F\u89D2\u8272\uFF0C\u4F20\u8FBE\u6307\u4EE4\u7ED9\u9886\u5BFC</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Boss</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">command</span><span class="token punctuation">(</span><span class="token class-name">String</span> task<span class="token punctuation">,</span><span class="token class-name">Leader</span> leader<span class="token punctuation">)</span><span class="token punctuation">{</span>
        leader<span class="token punctuation">.</span><span class="token function">doing</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BA2\u6237\u7AEF\u8C03\u7528</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Boss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;\u6D77\u62A5\u56FE&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Boss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;\u722C\u866B&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">new</span> <span class="token class-name">Boss</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token string">&quot;\u5356\u624B\u673A&quot;</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Leader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>\u6211\u662F\u5458\u5DE5B\uFF0C\u6211\u64C5\u957F\u5E73\u9762\u8BBE\u8BA1,\u73B0\u5728\u5F00\u59CB\u505A\u6D77\u62A5\u56FE\u5DE5\u4F5C \u6211\u662F\u5458\u5DE5A\uFF0C\u6211\u64C5\u957F\u7F16\u7A0B,\u73B0\u5728\u5F00\u59CB\u505A\u722C\u866B\u5DE5\u4F5C \u8FD9\u4E2A\u4EFB\u52A1\u5356\u624B\u673A\u8D85\u51FA\u6211\u7684\u80FD\u529B\u8303\u56F4</p></blockquote><h2 id="\u59D4\u6D3E\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0" tabindex="-1"><a class="header-anchor" href="#\u59D4\u6D3E\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0" aria-hidden="true">#</a> \u59D4\u6D3E\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0</h2><h3 id="jvm\u53CC\u4EB2\u59D4\u6D3E\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#jvm\u53CC\u4EB2\u59D4\u6D3E\u6A21\u5F0F" aria-hidden="true">#</a> JVM\u53CC\u4EB2\u59D4\u6D3E\u6A21\u5F0F</h3><p>\u4E00\u4E2A\u7C7B\u52A0\u8F7D\u5668\u5728\u52A0\u8F7D\u7C7B\u65F6\uFF0C\u5148\u628A\u8FD9\u4E2A\u8BF7\u6C42\u59D4\u6D3E\u7ED9\u81EA\u5DF1\u7684\u7236\u7C7B\u52A0\u8F7D\u5668\u53BB\u6267\u884C\uFF0C\u5982\u679C\u7236\u7C7B\u52A0\u8F7D\u5668\u8FD8\u5B58\u5728\u7236\u7C7B\u52A0\u8F7D\u5668\uFF0C\u5C31\u7EE7\u7EED\u5F80\u4E0A\u59D4\u6D3E\uFF0C\u76F4\u5230\u9876\u5C42\u7684\u542F\u52A8\u7C7B\u52A0\u8F7D\u5668\u3002\u5982\u679C\u7236\u7C7B\u52A0\u8F7D\u5668\u80FD\u591F\u5B8C\u6210\u7C7B\u52A0\u8F7D\u7684\u5DE5\u4F5C\uFF0C\u5C31\u6210\u529F\u8FD4\u56DE\uFF0C\u5982\u679C\u7236\u7C7B\u52A0\u8F7D\u5668\u65E0\u6CD5\u5B8C\u6210\u52A0\u8F7D\uFF0C\u90A3\u4E48\u5B50\u52A0\u8F7D\u5668\u624D\u4F1A\u5C1D\u8BD5\u53BB\u81EA\u5DF1\u52A0\u8F7D\u8FD9\u4E2A\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">ClassLoader</span> <span class="token punctuation">{</span>
 	<span class="token comment">// The parent class loader for delegation</span>
  <span class="token comment">// Note: VM hardcoded the offset of this field, thus all new fields must be added *after* it.</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ClassLoader</span> parent<span class="token punctuation">;</span> 
  
  <span class="token keyword">protected</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">loadClass</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">boolean</span> resolve<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token function">getClassLoadingLock</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// First, check if the class has already been loaded</span>
      <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> c <span class="token operator">=</span> <span class="token function">findLoadedClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">long</span> t0 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            c <span class="token operator">=</span> parent<span class="token punctuation">.</span><span class="token function">loadClass</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            c <span class="token operator">=</span> <span class="token function">findBootstrapClassOrNull</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// ClassNotFoundException thrown if class not found</span>
          <span class="token comment">// from the non-null parent class loader</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>c <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// If still not found, then invoke findClass in order</span>
          <span class="token comment">// to find the class.</span>
          <span class="token keyword">long</span> t1 <span class="token operator">=</span> <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">nanoTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          c <span class="token operator">=</span> <span class="token function">findClass</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token comment">// this is the defining class loader; record the stats</span>
          <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getParentDelegationTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addTime</span><span class="token punctuation">(</span>t1 <span class="token operator">-</span> t0<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClassTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addElapsedTimeFrom</span><span class="token punctuation">(</span>t1<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name"><span class="token namespace">sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span></span>PerfCounter</span><span class="token punctuation">.</span><span class="token function">getFindClasses</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">increment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">resolveClass</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> c<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="spring\u7684ioc\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#spring\u7684ioc\u6A21\u5757" aria-hidden="true">#</a> Spring\u7684IoC\u6A21\u5757</h3><p><code>Spring</code> \u4E2D\u7684 <code>DefaultBeanDefinitionDocumentReader</code> \u7C7B\uFF0C\u5728\u8C03\u7528 <code>doRegisterBeanDefinitions()</code> \u65B9\u6CD5\u65F6\u4F1A\u628A\u4E00\u4E2A\u7C7B\u578B\u4E3A <code>BeanDefinitionParserDelegate</code> \u7684\u5BF9\u8C61 <code>this.delegate</code> \u4F20\u5165\u5230 <code>parseBeanDefinitions()</code> \u65B9\u6CD5\uFF0C\u7136\u540E\u4E3B\u8981\u7684\u89E3\u6790\u5DE5\u4F5C\u5C31\u901A\u8FC7 <code>delegate</code> \u4F5C\u4E3A\u4E3B\u8981\u89D2\u8272\u6765\u5B8C\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doRegisterBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">BeanDefinitionParserDelegate</span> parent <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">createDelegate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getReaderContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> root<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">preProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span>root<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">postProcessXml</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>delegate <span class="token operator">=</span> parent<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6700\u7EC8\u8D70\u5230\u6CE8\u518C <code>bean</code> \u7684\u90E8\u5206\u7684\u65F6\u5019\uFF0C\u9488\u5BF9\u4E0D\u540C\u7C7B\u578B\u7684\u7ED3\u70B9\u8FDB\u884C\u771F\u6B63\u7684\u7684\u6CE8\u518C\u64CD\u4F5C\uFF0C<code>delegate</code> \u5BF9\u8C61\u4F1A\u5BF9 <code>element</code> \u8C03\u7528 <code>parseBeanDefinitions()</code> \uFF0C\u5F97\u5230\u4E00\u4E2A <code>BeanDefinitionHolder</code> \u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u901A\u8FC7\u8FD9\u4E2A\u5BF9\u8C61\u5B8C\u6210\u771F\u6B63\u6CE8\u518C\u5230 <code>Factory</code> \u7684\u64CD\u4F5C</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">parseBeanDefinitions</span><span class="token punctuation">(</span><span class="token class-name">Element</span> root<span class="token punctuation">,</span> <span class="token class-name">BeanDefinitionParserDelegate</span> delegate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">NodeList</span> nl <span class="token operator">=</span> root<span class="token punctuation">.</span><span class="token function">getChildNodes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nl<span class="token punctuation">.</span><span class="token function">getLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Node</span> node <span class="token operator">=</span> nl<span class="token punctuation">.</span><span class="token function">item</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token keyword">instanceof</span> <span class="token class-name">Element</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Element</span> ele <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Element</span><span class="token punctuation">)</span>node<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>delegate<span class="token punctuation">.</span><span class="token function">isDefaultNamespace</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">parseDefaultElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">,</span> delegate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>ele<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    delegate<span class="token punctuation">.</span><span class="token function">parseCustomElement</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728Spring\u7684\u6E90\u7801\u4E2D\uFF0C\u53EA\u8981\u4EE5 <code>Delegate</code> \u7ED3\u5C3E\u7684\u90FD\u662F\u5B9E\u73B0\u4E86\u59D4\u6D3E\u6A21\u5F0F\u3002\u5982\uFF1A<code>BeanDefinitionParserDelegate</code> \u6839\u636E\u4E0D\u540C\u7C7B\u578B\u59D4\u6D3E\u4E0D\u540C\u7684\u903B\u8F91\u6765\u89E3\u6790 <code>BeanDefinition</code></p><h2 id="\u59D4\u6D3E\u6A21\u5F0F\u548C\u9759\u6001\u4EE3\u7406\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u59D4\u6D3E\u6A21\u5F0F\u548C\u9759\u6001\u4EE3\u7406\u7684\u533A\u522B" aria-hidden="true">#</a> \u59D4\u6D3E\u6A21\u5F0F\u548C\u9759\u6001\u4EE3\u7406\u7684\u533A\u522B</h2><ul><li>\u4ECE\u8BBE\u8BA1\u6A21\u5F0F\u7684\u7C7B\u578B\u6765\u770B\uFF1A\u59D4\u6D3E\u6A21\u5F0F\u5C5E\u6027\u884C\u4E3A\u578B\u6A21\u5F0F\uFF1B\u4EE3\u7406\u6A21\u5F0F\u5C5E\u6027\u7ED3\u6784\u578B\u6A21\u5F0F</li><li>\u4ECE\u6CE8\u91CD\u70B9\u6765\u770B\uFF1A\u59D4\u6D3E\u6A21\u5F0F\u6CE8\u91CD\u7684\u662F\u4EFB\u52A1\u6D3E\u9063\uFF0C\u6CE8\u91CD\u7684\u662F\u7ED3\u679C\uFF1B\u4EE3\u7406\u6A21\u5F0F\u6CE8\u91CD\u7684\u662F\u4EE3\u7801\u589E\u5F3A\uFF0C\u6CE8\u91CD\u7684\u662F\u8FC7\u7A0B</li><li>\u59D4\u6D3E\u6A21\u5F0F\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u9759\u6001\u4EE3\u7406\uFF0C\u5C5E\u4E8E\u5168\u6743\u4EE3\u7406\uFF0C\u4E0E\u4E2D\u95F4\u5904\u7406\u65E0\u5173\uFF0C\u76F4\u63A5\u59D4\u6258\u5E76\u8FD4\u56DE\uFF0C\u65E0\u9700\u5173\u5FC3\u5B9E\u73B0\u7EC6\u8282</li></ul>`,33),o=[e];function c(l,i){return s(),a("div",null,o)}var d=n(t,[["render",c],["__file","\u59D4\u6D3E\u6A21\u5F0F.html.vue"]]);export{d as default};
