const e=JSON.parse('{"key":"v-0c996d1e","path":"/writings/Java-collection/PriorityQueue.html","title":"PriorityQueue","lang":"zh-CN","frontmatter":{"title":"PriorityQueue","icon":"article","category":["Java集合"],"description":"PriorityQueue 概述 Java 有一种特殊的队列叫做优先队列。Java 中优先队列的作用是能保证每次取出的元素都是队列中权值最小的。这里牵涉到了大小关系，元素大小的评判可以通过元素本身的自然顺序(natural ordering)，也可以通过构造时传入的比较器(Comparator)。 Java 中实现优先队列的集合是 PriorityQueue，通过堆实现优先队列，具体是通过完全二叉树实现的堆（任意一个非叶子结点的权值都不大于其左右结点的权值），而二叉树则是由数组实现的。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Java-collection/PriorityQueue.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"PriorityQueue"}],["meta",{"property":"og:description","content":"PriorityQueue 概述 Java 有一种特殊的队列叫做优先队列。Java 中优先队列的作用是能保证每次取出的元素都是队列中权值最小的。这里牵涉到了大小关系，元素大小的评判可以通过元素本身的自然顺序(natural ordering)，也可以通过构造时传入的比较器(Comparator)。 Java 中实现优先队列的集合是 PriorityQueue，通过堆实现优先队列，具体是通过完全二叉树实现的堆（任意一个非叶子结点的权值都不大于其左右结点的权值），而二叉树则是由数组实现的。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-01T09:46:17.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-01T09:46:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PriorityQueue\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-01T09:46:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"构造方法","slug":"构造方法","link":"#构造方法","children":[]},{"level":2,"title":"添加元素","slug":"添加元素","link":"#添加元素","children":[]},{"level":2,"title":"获取元素","slug":"获取元素","link":"#获取元素","children":[]},{"level":2,"title":"删除元素","slug":"删除元素","link":"#删除元素","children":[]}],"git":{"createdTime":1677597613000,"updatedTime":1677663977000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":2}]},"readingTime":{"minutes":3.05,"words":914},"filePathRelative":"writings/Java-collection/PriorityQueue.md","localizedDate":"2023年2月28日","excerpt":"<h1> PriorityQueue</h1>\\n<h2> 概述</h2>\\n<p>Java 有一种特殊的队列叫做优先队列。<strong>Java 中优先队列的作用是能保证每次取出的元素都是队列中权值最小的</strong>。这里牵涉到了大小关系，<strong>元素大小的评判可以通过元素本身的自然顺序(natural ordering)，也可以通过构造时传入的比较器</strong>(Comparator)。</p>\\n<p>Java 中实现优先队列的集合是 PriorityQueue，通过堆实现优先队列，具体是通过完全二叉树实现的堆（任意一个非叶子结点的权值都不大于其左右结点的权值），而二叉树则是由数组实现的。</p>","autoDesc":true}');export{e as data};
