import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e}from"./app-85442c0b.js";const t={},p=e(`<h1 id="oauth2" tabindex="-1"><a class="header-anchor" href="#oauth2" aria-hidden="true">#</a> OAuth2</h1><p><strong>OAuth 是一种授权机制。数据的所有者告诉系统，同意授权第三方应用进入系统，获取这些数据。系统从而产生一个短期的进入令牌（token），用来代替密码，供第三方应用使用。</strong></p><h2 id="授权方式" tabindex="-1"><a class="header-anchor" href="#授权方式" aria-hidden="true">#</a> 授权方式</h2><h3 id="授权码" tabindex="-1"><a class="header-anchor" href="#授权码" aria-hidden="true">#</a> 授权码</h3><p><strong>授权码方式（authorization code），指的是第三方应用先申请一个授权码，然后再用该码获取令牌。</strong></p><p>这种方式是最常用的流程，<strong>安全性也最高</strong>，它<strong>适用于那些有后端的 Web 应用</strong>。授权码通过前端传送，令牌则是储存在后端，而且所有与资源服务器的通信都在后端完成。这样的前后端分离，可以避免令牌泄漏。</p><ol><li><p>A 网站提供一个链接，用户点击后就会跳转到 B 网站，授权用户数据给 A网站使用</p><p>示例链接：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://b.com/oauth/authorize?
  response_type=code&amp;
  client_id=CLIENT_ID&amp;
  redirect_uri=CALLBACK_URL&amp;
  scope=read
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>response_type=code</code> 表示要求返回授权码</p><p><code>client_id</code> 让B网站知道是哪一个应用在请求</p><p><code>scope=read</code> 表示授权的范围是只读</p><p><code>redirect_uri</code> 表示B网站接受或拒绝请求后跳转的网站</p><hr></li><li><p>用户跳转后，B 网站会要求用户登录，然后询问是否同意给予 A 网站授权。用户表示同意，这时 B 网站就会跳回<code>redirect_uri</code>参数指定的网址，并且把授权码作为URL参数</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://a.com/callback?code=AUTHORIZATION_CODE
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中授权码作为query parameter拼接在上一步填写的回调地址后面</p><hr></li><li><p>A 网站拿到授权码以后，就可以在后端，向 B 网站请求令牌</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://b.com/oauth/token?
 client_id=CLIENT_ID&amp;
 client_secret=CLIENT_SECRET&amp;
 grant_type=authorization_code&amp;
 code=AUTHORIZATION_CODE&amp;
 redirect_uri=CALLBACK_URL
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>client_id</code>、<code>client_secret</code> 是让B网站确认A网站的身份</p><p><code>grant_type=authorization_code</code> 表示采用授权码这种授权方式</p><p><code>code</code> 是上一步拿到的授权码</p><p><code>redirect_uri</code> 需要和上一步的回调地址一致，用于校验</p><hr></li><li><p>A网站收到请求以后，就会颁发令牌</p><p>示例</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>    
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;ACCESS_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token number">2592000</span><span class="token punctuation">,</span>
  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;REFRESH_TOKEN&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;read&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;uid&quot;</span><span class="token operator">:</span><span class="token number">100101</span><span class="token punctuation">,</span>
  <span class="token property">&quot;info&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>...<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>access_token</code> 访问资源的令牌</p><p><code>refresh_token</code> 用于刷新令牌的刷新令牌</p></li></ol><h3 id="隐藏式" tabindex="-1"><a class="header-anchor" href="#隐藏式" aria-hidden="true">#</a> 隐藏式</h3><p><strong>隐藏式方式（implicit）适用于那些纯前端的Web应用，直接向前端颁发令牌。这种方式没有授权码这个中间步骤</strong></p><p>这种方式把令牌直接传给前端，是很不安全的。因此，只能用于一些安全要求不高的场景，并且令牌的有效期必须非常短，通常就是会话期间（session）有效，浏览器关掉，令牌就失效了。</p><ol><li><p>A 网站提供一个链接，用户点击后跳转到 B 网站，授权用户数据给 A 网站使用</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://b.com/oauth/authorize?
  response_type=token&amp;
  client_id=CLIENT_ID&amp;
  redirect_uri=CALLBACK_URL&amp;
  scope=read
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>response_type=code</code> 表示要求直接返回令牌</p><p><code>client_id</code> 让B网站知道是哪一个应用在请求</p><p><code>scope=read</code> 表示授权的范围是只读</p><p><code>redirect_uri</code> 表示B网站接受或拒绝请求后跳转的网站</p><hr></li><li><p>用户跳转到 B 网站，登录后同意给予 A 网站授权。这时，B 网站就会跳回<code>redirect_uri</code>参数指定的跳转网址，并且把令牌作为URL锚点跳转</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://a.com/callback#token=ACCESS_TOKEN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中令牌作为fragment拼接在上一步填写的回调地址后面</p><p>这是因为 OAuth 2.0 允许跳转网址是 HTTP 协议，因此存在&quot;中间人攻击&quot;的风险，而浏览器跳转时，<strong>路径参数会发到服务器，而锚点不会发到服务器，就减少了泄漏令牌的风险</strong></p></li><li><p>A 网站通过URL拿到令牌</p></li></ol><h3 id="密码式" tabindex="-1"><a class="header-anchor" href="#密码式" aria-hidden="true">#</a> 密码式</h3><p><strong>密码式（password）允许用户把用户名和密码直接告诉某个应用，该应用就使用用户的用户名密码去申请令牌</strong></p><ol><li><p>A 网站要求用户提供 B 网站的用户名和密码。拿到以后，A 就直接向 B 请求令牌</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://oauth.b.com/token?
  grant_type=password&amp;
  username=USERNAME&amp;
  password=PASSWORD&amp;
  client_id=CLIENT_ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>grant_type=password</code> 表示采用密码式的授权方式</p><p><code>username</code> 用户的用户名</p><p><code>password</code> 用户的密码</p><p><code>client_id</code> 让B网站知道是哪一个应用在请求</p><hr></li><li><p>B 网站验证身份通过后，给出令牌作为上面请求的响应，A 网站拿到令牌</p></li></ol><h3 id="凭证式" tabindex="-1"><a class="header-anchor" href="#凭证式" aria-hidden="true">#</a> 凭证式</h3><p><strong>凭证式（client credentials），适用于没有前端的命令行应用，即在命令行下请求令牌。</strong></p><p>这种方式给出的令牌，是针对第三方应用的，而不是针对用户的，即有可能多个用户共享同一个令牌。</p><ol><li><p>A 应用在命令行向 B 发出请求</p><p>示例链接</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://oauth.b.com/token?
  grant_type=client_credentials&amp;
  client_id=CLIENT_ID&amp;
  client_secret=CLIENT_SECRET
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>grant_type=client_credentials</code> 表示采用凭证式的授权方式</p><p><code>client_id</code>、<code>client_secret</code> 让B网站知道是哪一个应用在请求</p></li><li><p>B 网站验证通过以后，直接返回令牌</p></li></ol><h2 id="使用令牌" tabindex="-1"><a class="header-anchor" href="#使用令牌" aria-hidden="true">#</a> 使用令牌</h2><p>在请求头中加入<code>Authorization=Bearer access_token</code></p><h2 id="更新令牌" tabindex="-1"><a class="header-anchor" href="#更新令牌" aria-hidden="true">#</a> 更新令牌</h2><p>认证服务器颁发令牌时，一次性会颁发两个令牌，一个是<code>access_token</code>用于获取资源，另一个是<code>refresh_token</code>用于更新令牌、续期</p><p>更新令牌示例：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>https://b.com/oauth/token?
  grant_type=refresh_token&amp;
  client_id=CLIENT_ID&amp;
  client_secret=CLIENT_SECRET&amp;
  refresh_token=REFRESH_TOKEN
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>grant_type=refresh_token</code> 表示要求更新令牌</p><p><code>client_id</code>、<code>client_secret</code> 让认证服务器知道是哪一个应用在请求</p><p><code>refresh_token</code> 填用于更新令牌的令牌</p><p>认证服务器校验通过后，就会颁发新的令牌</p><h2 id="密码与令牌" tabindex="-1"><a class="header-anchor" href="#密码与令牌" aria-hidden="true">#</a> 密码与令牌</h2><p>密码（password）与令牌（token）的作用是一样的，都可以进入系统，但是有三点差异</p><ol><li>令牌是短期的，到期会自动失效，用户自己无法修改。密码一般长期有效，用户不修改，就不会发生变化</li><li>令牌可以被数据所有者撤销，会立即失效。举例，屋主可以随时取消快递员的令牌。密码一般不允许被他人撤销</li><li>令牌有权限范围（scope），比如只能进小区的二号门。对于网络服务来说，只读令牌就比读写令牌更安全。密码一般是完整权限</li></ol><p>上面这些设计，保证了令牌既可以让第三方应用获得权限，同时又随时可控，不会危及系统安全</p><h2 id="从client-credentials模式看token生成" tabindex="-1"><a class="header-anchor" href="#从client-credentials模式看token生成" aria-hidden="true">#</a> 从client_credentials模式看token生成</h2><p>虽然凭证式(cliennt_credentials)和其他模式有所不同，但是<strong>总体上的抽象是固定的</strong>，只是具体的实现类会被相应地替换。我们从<strong>最简单</strong>的凭证式去看spring security oauth2内部的运作流程，<strong>方便理解</strong></p><p><strong>首先开启Debug信息</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">org.springframework</span><span class="token punctuation">:</span> DEBUG
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>关键类</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ClientCredentialsTokenEndpointFilter
DaoAuthenticationProvider
TokenEndpoint
TokenGranter
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clientcredentialstokenendpointfilter" tabindex="-1"><a class="header-anchor" href="#clientcredentialstokenendpointfilter" aria-hidden="true">#</a> ClientCredentialsTokenEndpointFilter</h3><p>关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">ClientCredentialsTokenEndpointFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token keyword">this</span><span class="token punctuation">(</span><span class="token string">&quot;/oauth/token&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">attemptAuthentication</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span>
        <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">,</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token class-name">String</span> clientId <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;client_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> clientSecret <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">&quot;client_secret&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    clientId <span class="token operator">=</span> clientId<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">UsernamePasswordAuthenticationToken</span> authRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>clientId<span class="token punctuation">,</span>
            clientSecret<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAuthenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在请求到达<code>/oauth/token</code>之前经过了<code>ClientCredentialsTokenEndpointFilter</code>这个过滤器(构造方法中是拦截的路径)</p><p>父类<code>AbstractAuthenticationProcessingFilter</code>的<code>doFilter</code>方法中执行了<code>attemptAuthentication</code>方法，这个方法主要做了这些工作：</p><ol><li><p>从请求中获取<code>client_id</code>,<code>client_secret</code>，组装成一个<code>UsernamePasswordAuthenticationToken</code><strong>作为身份标识</strong></p></li><li><p>使用顶层身份管理器<code>AuthenticationManager</code>去<strong>进行身份认证</strong></p><blockquote><ol><li><code>AuthenticationManager</code>的实现类一般是<code>ProviderManager</code></li><li><code>ProviderManager</code>内部维护了一个<code>List</code>，真正的身份认证是由一系列<code>AuthenticationProvider</code>去完成</li><li><code>AuthenticationProvider</code>的常用实现类则是<code>DaoAuthenticationProvider</code></li><li><code>DaoAuthenticationProvider</code>内部又聚合了一个<code>UserDetailsService</code>接口</li><li><code>UserDetailsService</code>才是获取用户详细信息的最终接口</li></ol></blockquote></li></ol><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/spring-security-oauth2-xjf-2-1.png" alt=""></p><blockquote><p>虽然说client模式是不存在“用户”的概念的，但是这里的身份认证<code>UserDetailsService</code>的实现被适配成了<code>ClientDetailsUserDetailsService</code></p><p>这个设计是将client客户端的信息（<code>client_id</code>,<code>client_secret</code>）适配成用户的信息(<code>username</code>,<code>password</code>)，这样认证流程就不需要修改</p><p>经过<code>ClientCredentialsTokenEndpointFilter</code>之后，身份信息已经得到了<code>AuthenticationManager</code>的验证。接着便到达了<code>TokenEndpoint</code></p></blockquote><h3 id="tokenendpoint" tabindex="-1"><a class="header-anchor" href="#tokenendpoint" aria-hidden="true">#</a> TokenEndpoint</h3><p>刚刚前面一系列的<code>ClientCredentialsTokenEndpointFilter</code>、<code>ProviderManager</code>、<code>DaoAuthenticationProvider</code>可以理解为一些<strong>前置校验</strong>、<strong>身份封装</strong>等操作</p><p>关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@FrameworkEndpoint</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TokenEndpoint</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractEndpoint</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/oauth/token&quot;</span><span class="token punctuation">,</span> method<span class="token operator">=</span><span class="token class-name">RequestMethod</span><span class="token punctuation">.</span><span class="token constant">POST</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">OAuth2AccessToken</span><span class="token punctuation">&gt;</span></span> <span class="token function">postAccessToken</span><span class="token punctuation">(</span><span class="token class-name">Principal</span> principal<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> parameters<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">HttpRequestMethodNotSupportedException</span> <span class="token punctuation">{</span>
         <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">String</span> clientId <span class="token operator">=</span> <span class="token function">getClientId</span><span class="token punctuation">(</span>principal<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientDetails</span> authenticatedClient <span class="token operator">=</span> <span class="token function">getClientDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">loadClientByClientId</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">TokenRequest</span> tokenRequest <span class="token operator">=</span> <span class="token function">getOAuth2RequestFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createTokenRequest</span><span class="token punctuation">(</span>parameters<span class="token punctuation">,</span> authenticatedClient<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">OAuth2AccessToken</span> token <span class="token operator">=</span> <span class="token function">getTokenGranter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">grant</span><span class="token punctuation">(</span>tokenRequest<span class="token punctuation">.</span><span class="token function">getGrantType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tokenRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">return</span> <span class="token function">getResponse</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">TokenGranter</span> tokenGranter<span class="token punctuation">;</span>

 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>经过一系列的前置操作，方法参数中的<code>principal</code>已经填充了相关信息</p><p>方法内部依赖了一个<code>TokenGranter</code>来颁发token</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/spring-security-oauth2-xjf-2-2.png" alt=""></p><h4 id="compositetokengranter" tabindex="-1"><a class="header-anchor" href="#compositetokengranter" aria-hidden="true">#</a> CompositeTokenGranter</h4><p>TokenGranter的设计思路是：<strong>使用CompositeTokenGranter管理一个List列表</strong>，每一种grantType对应一个具体的真正授权者，在debug过程中可以发现CompositeTokenGranter <strong>内部就是在循环调用</strong>所有的TokenGranter(包含5种默认的TokenGranter和自定义的TokenGranter)实现类的grant方法，而granter内部则是<strong>通过grantType来区分是否是各自的授权类型</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CompositeTokenGranter</span> <span class="token keyword">implements</span> <span class="token class-name">TokenGranter</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TokenGranter</span><span class="token punctuation">&gt;</span></span> tokenGranters<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">CompositeTokenGranter</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TokenGranter</span><span class="token punctuation">&gt;</span></span> tokenGranters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>tokenGranters <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TokenGranter</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>tokenGranters<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token function">grant</span><span class="token punctuation">(</span><span class="token class-name">String</span> grantType<span class="token punctuation">,</span> <span class="token class-name">TokenRequest</span> tokenRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">TokenGranter</span> granter <span class="token operator">:</span> tokenGranters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">OAuth2AccessToken</span> grant <span class="token operator">=</span> granter<span class="token punctuation">.</span><span class="token function">grant</span><span class="token punctuation">(</span>grantType<span class="token punctuation">,</span> tokenRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>grant<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> grant<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="abstracttokengranter" tabindex="-1"><a class="header-anchor" href="#abstracttokengranter" aria-hidden="true">#</a> AbstractTokenGranter</h4><p>以客户端模式为例，思考如何产生token的，则需要继续研究5种授权者的抽象类：<code>AbstractTokenGranter</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractTokenGranter</span> <span class="token keyword">implements</span> <span class="token class-name">TokenGranter</span> <span class="token punctuation">{</span>

    <span class="token keyword">protected</span> <span class="token keyword">final</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//与token相关的service，重点</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AuthorizationServerTokenServices</span> tokenServices<span class="token punctuation">;</span>
    <span class="token comment">//与clientDetails相关的service，重点</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ClientDetailsService</span> clientDetailsService<span class="token punctuation">;</span>
    <span class="token comment">//创建oauth2Request的工厂，重点</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">OAuth2RequestFactory</span> requestFactory<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">String</span> grantType<span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token keyword">public</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token function">grant</span><span class="token punctuation">(</span><span class="token class-name">String</span> grantType<span class="token punctuation">,</span> <span class="token class-name">TokenRequest</span> tokenRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token class-name">String</span> clientId <span class="token operator">=</span> tokenRequest<span class="token punctuation">.</span><span class="token function">getClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ClientDetails</span> client <span class="token operator">=</span> clientDetailsService<span class="token punctuation">.</span><span class="token function">loadClientByClientId</span><span class="token punctuation">(</span>clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">validateGrantType</span><span class="token punctuation">(</span>grantType<span class="token punctuation">,</span> client<span class="token punctuation">)</span><span class="token punctuation">;</span>

        logger<span class="token punctuation">.</span><span class="token function">debug</span><span class="token punctuation">(</span><span class="token string">&quot;Getting access token for: &quot;</span> <span class="token operator">+</span> clientId<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">return</span> <span class="token function">getAccessToken</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> tokenRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token class-name">ClientDetails</span> client<span class="token punctuation">,</span> <span class="token class-name">TokenRequest</span> tokenRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> tokenServices<span class="token punctuation">.</span><span class="token function">createAccessToken</span><span class="token punctuation">(</span><span class="token function">getOAuth2Authentication</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> tokenRequest<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token class-name">OAuth2Authentication</span> <span class="token function">getOAuth2Authentication</span><span class="token punctuation">(</span><span class="token class-name">ClientDetails</span> client<span class="token punctuation">,</span> <span class="token class-name">TokenRequest</span> tokenRequest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">OAuth2Request</span> storedOAuth2Request <span class="token operator">=</span> requestFactory<span class="token punctuation">.</span><span class="token function">createOAuth2Request</span><span class="token punctuation">(</span>client<span class="token punctuation">,</span> tokenRequest<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OAuth2Authentication</span><span class="token punctuation">(</span>storedOAuth2Request<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>从参数中获取<code>client_id</code></li><li>（以<code>InMemoryClientDetailsService</code>为例）从<code>clientDetailsService</code>维护的Map集合<code>clientDetailsStore</code>中获取<code>ClientDetails</code>对象，这个对象包含应用的所有信息（client_id、client_secret等）</li><li>校验该应用是否支持当前的<code>grant_type</code></li><li>下一步生成token</li></ol><h4 id="authorizationservertokenservices" tabindex="-1"><a class="header-anchor" href="#authorizationservertokenservices" aria-hidden="true">#</a> AuthorizationServerTokenServices</h4><p>其中最终完成生成Token的类是<code>AuthorizationServerTokenServices</code>，默认实现类是<code>DefaultTokenServices</code></p><p><code>AuthorizationServerTokenServices</code>定义了创建token、刷新token、获取token的规范</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">AuthorizationServerTokenServices</span> <span class="token punctuation">{</span>
    <span class="token comment">//创建token</span>
    <span class="token class-name">OAuth2AccessToken</span> <span class="token function">createAccessToken</span><span class="token punctuation">(</span><span class="token class-name">OAuth2Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>
    <span class="token comment">//刷新token</span>
    <span class="token class-name">OAuth2AccessToken</span> <span class="token function">refreshAccessToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> refreshToken<span class="token punctuation">,</span> <span class="token class-name">TokenRequest</span> tokenRequest<span class="token punctuation">)</span>
            <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">;</span>
    <span class="token comment">//获取token</span>
    <span class="token class-name">OAuth2AccessToken</span> <span class="token function">getAccessToken</span><span class="token punctuation">(</span><span class="token class-name">OAuth2Authentication</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defaulttokenservices" tabindex="-1"><a class="header-anchor" href="#defaulttokenservices" aria-hidden="true">#</a> DefaultTokenServices</h4><p><code>DefaultTokenServices</code>提供了创建token，刷新token，获取token的实现。在创建token时，他会调用tokenStore对产生的token和相关信息存储到对应的实现类中，可以是Redis，数据库，内存，jwt</p><p>创建token的关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Transactional</span>
<span class="token keyword">public</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token function">createAccessToken</span><span class="token punctuation">(</span><span class="token class-name">OAuth2Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>

    <span class="token class-name">OAuth2AccessToken</span> existingAccessToken <span class="token operator">=</span> tokenStore<span class="token punctuation">.</span><span class="token function">getAccessToken</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">OAuth2RefreshToken</span> refreshToken <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token comment">// 查看是否存在相同的token，有的话先用回它</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>existingAccessToken <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 看看这个token是不是过期了</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>existingAccessToken<span class="token punctuation">.</span><span class="token function">isExpired</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果是过期了，那就把它从存储（jdbc、redis、memory等）中移除</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>existingAccessToken<span class="token punctuation">.</span><span class="token function">getRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 如果这个token同时有刷新令牌，也把刷新令牌移除</span>
                refreshToken <span class="token operator">=</span> existingAccessToken<span class="token punctuation">.</span><span class="token function">getRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// The token store could remove the refresh token when the</span>
                <span class="token comment">// access token is removed, but we want to</span>
                <span class="token comment">// be sure...</span>
                tokenStore<span class="token punctuation">.</span><span class="token function">removeRefreshToken</span><span class="token punctuation">(</span>refreshToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            tokenStore<span class="token punctuation">.</span><span class="token function">removeAccessToken</span><span class="token punctuation">(</span>existingAccessToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 如果没有过期，那就重新存起来并返回</span>
            <span class="token comment">// Re-store the access token in case the authentication has changed</span>
            tokenStore<span class="token punctuation">.</span><span class="token function">storeAccessToken</span><span class="token punctuation">(</span>existingAccessToken<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> existingAccessToken<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 颁发刷新令牌</span>
    <span class="token comment">// Only create a new refresh token if there wasn&#39;t an existing one</span>
    <span class="token comment">// associated with an expired access token.</span>
    <span class="token comment">// Clients might be holding existing refresh tokens, so we re-use it in</span>
    <span class="token comment">// the case that the old access token expired.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>refreshToken <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        refreshToken <span class="token operator">=</span> <span class="token function">createRefreshToken</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// 如果这个刷新令牌过期了，那就需要重新颁发</span>
    <span class="token comment">// But the refresh token itself might need to be re-issued if it has expired.</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>refreshToken <span class="token keyword">instanceof</span> <span class="token class-name">ExpiringOAuth2RefreshToken</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ExpiringOAuth2RefreshToken</span> expiring <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">ExpiringOAuth2RefreshToken</span><span class="token punctuation">)</span> refreshToken<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> expiring<span class="token punctuation">.</span><span class="token function">getExpiration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            refreshToken <span class="token operator">=</span> <span class="token function">createRefreshToken</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//生成token并存储起来</span>
    <span class="token class-name">OAuth2AccessToken</span> accessToken <span class="token operator">=</span> <span class="token function">createAccessToken</span><span class="token punctuation">(</span>authentication<span class="token punctuation">,</span> refreshToken<span class="token punctuation">)</span><span class="token punctuation">;</span>
    tokenStore<span class="token punctuation">.</span><span class="token function">storeAccessToken</span><span class="token punctuation">(</span>accessToken<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// In case it was modified</span>
    refreshToken <span class="token operator">=</span> accessToken<span class="token punctuation">.</span><span class="token function">getRefreshToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>refreshToken <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tokenStore<span class="token punctuation">.</span><span class="token function">storeRefreshToken</span><span class="token punctuation">(</span>refreshToken<span class="token punctuation">,</span> authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> accessToken<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="oauth2accesstoken" tabindex="-1"><a class="header-anchor" href="#oauth2accesstoken" aria-hidden="true">#</a> OAuth2AccessToken</h3><p>其中<code>OAuth2AccessToken</code>的实现类是<code>DefaultOAuth2AccessToken</code>就是最终拿到的token序列化之前的原始类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@org.codehaus.jackson.map.annotate.JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">OAuth2AccessTokenJackson1Serializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@org.codehaus.jackson.map.annotate.JsonDeserialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">OAuth2AccessTokenJackson1Deserializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@com.fasterxml.jackson.databind.annotation.JsonSerialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">OAuth2AccessTokenJackson2Serializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@com.fasterxml.jackson.databind.annotation.JsonDeserialize</span><span class="token punctuation">(</span>using <span class="token operator">=</span> <span class="token class-name">OAuth2AccessTokenJackson2Deserializer</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">BEARER_TYPE</span> <span class="token operator">=</span> <span class="token string">&quot;Bearer&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">OAUTH2_TYPE</span> <span class="token operator">=</span> <span class="token string">&quot;OAuth2&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The access token issued by the authorization server. This value is REQUIRED.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">ACCESS_TOKEN</span> <span class="token operator">=</span> <span class="token string">&quot;access_token&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The type of the token issued as described in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>
     <span class="token attr-name">*</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-7.1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Section 7.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>. Value is case insensitive.
     * This value is REQUIRED.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">TOKEN_TYPE</span> <span class="token operator">=</span> <span class="token string">&quot;token_type&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The lifetime in seconds of the access token. For example, the value &quot;3600&quot; denotes that the access token will
     * expire in one hour from the time the response was generated. This value is OPTIONAL.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">EXPIRES_IN</span> <span class="token operator">=</span> <span class="token string">&quot;expires_in&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The refresh token which can be used to obtain new access tokens using the same authorization grant as described
     * in <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-6<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Section 6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>. This value is OPTIONAL.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">REFRESH_TOKEN</span> <span class="token operator">=</span> <span class="token string">&quot;refresh_token&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * The scope of the access token as described by <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>
     <span class="token attr-name">*</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://tools.ietf.org/html/draft-ietf-oauth-v2-22#section-3.3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Section 3.3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">SCOPE</span> <span class="token operator">=</span> <span class="token string">&quot;scope&quot;</span><span class="token punctuation">;</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="defaultoauth2accesstoken" tabindex="-1"><a class="header-anchor" href="#defaultoauth2accesstoken" aria-hidden="true">#</a> DefaultOAuth2AccessToken</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultOAuth2AccessToken</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span><span class="token punctuation">,</span> <span class="token class-name">OAuth2AccessToken</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">914967629530462926L</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> value<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Date</span> expiration<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> tokenType <span class="token operator">=</span> <span class="token constant">BEARER_TYPE</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">OAuth2RefreshToken</span> refreshToken<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> scope<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> additionalInformation <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//getter,setter</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个典型的样例token响应,如下所示，就是上述类序列化后的结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span> 
    <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;950a7cc9-5a8a-42c9-a693-40e817b1a4b0&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span><span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span><span class="token string">&quot;773a0fcd-6023-45f8-8848-e141296cb3cb&quot;</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span><span class="token number">27036</span><span class="token punctuation">,</span> 
    <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span><span class="token string">&quot;select&quot;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="携带token访问受限资源" tabindex="-1"><a class="header-anchor" href="#携带token访问受限资源" aria-hidden="true">#</a> 携带token访问受限资源</h2><p>资源服务器<code>ResourceServerConfig</code>继承了<code>ResourceServerConfigurerAdapter</code></p><h3 id="resourceserverconfigureradapter" tabindex="-1"><a class="header-anchor" href="#resourceserverconfigureradapter" aria-hidden="true">#</a> ResourceServerConfigurerAdapter</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResourceServerConfigurerAdapter</span> <span class="token keyword">implements</span> <span class="token class-name">ResourceServerConfigurer</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">ResourceServerSecurityConfigurer</span> resources<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">AuthorizedUrl</span><span class="token punctuation">)</span>http<span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">anyRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">authenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们注意到其相关配置类是ResourceServerConfigurer，内部关联了<code>ResourceServerSecurityConfigurer</code>和<code>HttpSecurity</code>。前者与资源安全配置相关，后者与http安全配置相关</p><h3 id="resourceserversecurityconfigurer" tabindex="-1"><a class="header-anchor" href="#resourceserversecurityconfigurer" aria-hidden="true">#</a> ResourceServerSecurityConfigurer</h3><p>核心配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

    <span class="token class-name">AuthenticationManager</span> oauthAuthenticationManager <span class="token operator">=</span> <span class="token function">oauthAuthenticationManager</span><span class="token punctuation">(</span>http<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 创建OAuth2AuthenticationProcessingFilter,核心过滤器</span>
    resourcesServerFilter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">OAuth2AuthenticationProcessingFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    resourcesServerFilter<span class="token punctuation">.</span><span class="token function">setAuthenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// 为OAuth2AuthenticationProcessingFilter提供固定的AuthenticationManager即OAuth2AuthenticationManager</span>
    <span class="token comment">// 它并没有将OAuth2AuthenticationManager添加到spring的容器中</span>
    <span class="token comment">// 不然可能会影响spring security的普通认证流程（非oauth2请求）</span>
    <span class="token comment">// 只有被OAuth2AuthenticationProcessingFilter拦截到的oauth2相关请求才被特殊的身份认证器处理。</span>
    resourcesServerFilter<span class="token punctuation">.</span><span class="token function">setAuthenticationManager</span><span class="token punctuation">(</span>oauthAuthenticationManager<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>eventPublisher <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        resourcesServerFilter<span class="token punctuation">.</span><span class="token function">setAuthenticationEventPublisher</span><span class="token punctuation">(</span>eventPublisher<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>tokenExtractor <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	<span class="token comment">//设置了TokenExtractor默认的实现—-BearerTokenExtractor</span>
        resourcesServerFilter<span class="token punctuation">.</span><span class="token function">setTokenExtractor</span><span class="token punctuation">(</span>tokenExtractor<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    resourcesServerFilter <span class="token operator">=</span> <span class="token function">postProcess</span><span class="token punctuation">(</span>resourcesServerFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    resourcesServerFilter<span class="token punctuation">.</span><span class="token function">setStateless</span><span class="token punctuation">(</span>stateless<span class="token punctuation">)</span><span class="token punctuation">;</span>

    http
        <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">expressionHandler</span><span class="token punctuation">(</span>expressionHandler<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">addFilterBefore</span><span class="token punctuation">(</span>resourcesServerFilter<span class="token punctuation">,</span> <span class="token class-name">AbstractPreAuthenticatedProcessingFilter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token comment">//相关的异常处理器，可以重写相关实现，达到自定义异常的目的</span>
            <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="oauth2authenticationprocessingfilter" tabindex="-1"><a class="header-anchor" href="#oauth2authenticationprocessingfilter" aria-hidden="true">#</a> OAuth2AuthenticationProcessingFilter</h4><p>过滤器核心配置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span><span class="token class-name">ServletRequest</span> req<span class="token punctuation">,</span> <span class="token class-name">ServletResponse</span> res<span class="token punctuation">,</span> <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span><span class="token punctuation">{</span>

    <span class="token keyword">final</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span><span class="token punctuation">)</span> req<span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">HttpServletResponse</span> response <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">)</span> res<span class="token punctuation">;</span>

    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token comment">//从请求中取出身份信息，即access_token</span>
        <span class="token class-name">Authentication</span> authentication <span class="token operator">=</span> tokenExtractor<span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>authentication <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span> <span class="token punctuation">{</span>
            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token class-name">OAuth2AuthenticationDetails</span><span class="token punctuation">.</span><span class="token constant">ACCESS_TOKEN_VALUE</span><span class="token punctuation">,</span> authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>authentication <span class="token keyword">instanceof</span> <span class="token class-name">AbstractAuthenticationToken</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">AbstractAuthenticationToken</span> needsDetails <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AbstractAuthenticationToken</span><span class="token punctuation">)</span> authentication<span class="token punctuation">;</span>
                needsDetails<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span>authenticationDetailsSource<span class="token punctuation">.</span><span class="token function">buildDetails</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token comment">//认证身份</span>
            <span class="token class-name">Authentication</span> authResult <span class="token operator">=</span> authenticationManager<span class="token punctuation">.</span><span class="token function">authenticate</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            eventPublisher<span class="token punctuation">.</span><span class="token function">publishAuthenticationSuccess</span><span class="token punctuation">(</span>authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">//将身份信息绑定到SecurityContextHolder中</span>
            <span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span>authResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">OAuth2Exception</span> failed<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>OAuth2保护资源的核心认证过滤器。如果与<code>OAuth2AuthenticationManager</code>结合使用，则会从到来的请求之中提取一个OAuth2 token，之后使用<code>OAuth2Authentication</code>来填充Spring Security上下文(<code>SecurityContextHolder</code>)。</p><h4 id="tokenextractor" tabindex="-1"><a class="header-anchor" href="#tokenextractor" aria-hidden="true">#</a> TokenExtractor</h4><p>这个类的作用是从请求中<strong>各个地方</strong>提取token出来</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BearerTokenExtractor</span> <span class="token keyword">implements</span> <span class="token class-name">TokenExtractor</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">Log</span> logger <span class="token operator">=</span> <span class="token class-name">LogFactory</span><span class="token punctuation">.</span><span class="token function">getLog</span><span class="token punctuation">(</span><span class="token class-name">BearerTokenExtractor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">extract</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> tokenValue <span class="token operator">=</span> <span class="token function">extractToken</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>tokenValue <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">PreAuthenticatedAuthenticationToken</span> authentication <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PreAuthenticatedAuthenticationToken</span><span class="token punctuation">(</span>tokenValue<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> authentication<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">extractToken</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 首先从请求头中检查是否存在token</span>
        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token function">extractHeaderToken</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// bearer type allows a request parameter as well</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>token <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token comment">// 如果请求头没有token，那么从请求参数、请求体中获取token</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> token<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Extract the OAuth bearer token from a header.
     */</span>
    <span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">extractHeaderToken</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Enumeration</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> headers <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token punctuation">(</span>headers<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// typically there is only one (most servers enforce that)</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
            <span class="token comment">// 从Header中获取token</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到<code>BearerTokenExtractor</code>可以从多角度提取token，也就是说我们有多种携带token的方式</p><ul><li><p>在请求头中携带</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://localhost:8080/order/1
Header：
Authentication：Bearer f732723d-af7f-41bb-bd06-2636ab2be135
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在请求参数中携带</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://localhost:8080/order/1?access_token=f732723d-af7f-41bb-bd06-2636ab2be135
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>在请求体中携带</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://localhost:8080/order/1
form param：
access_token=f732723d-af7f-41bb-bd06-2636ab2be135
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="oauth2authenticationmanager" tabindex="-1"><a class="header-anchor" href="#oauth2authenticationmanager" aria-hidden="true">#</a> OAuth2AuthenticationManager</h4><p><code>OAuth2AuthenticationManager</code>和<code>ProviderManager</code>都是<code>AuthenticationManager</code>身份认证顶层接口，前者用于token认证相关的，后者用于token获取相关的</p><p>身份认证关键代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Authentication</span> <span class="token function">authenticate</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span> <span class="token punctuation">{</span>

    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> authentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//最终还是借助tokenServices根据token加载身份信息</span>
    <span class="token class-name">OAuth2Authentication</span> auth <span class="token operator">=</span> tokenServices<span class="token punctuation">.</span><span class="token function">loadAuthentication</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

    <span class="token function">checkClientDetails</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">OAuth2AuthenticationDetails</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">OAuth2AuthenticationDetails</span> details <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">OAuth2AuthenticationDetails</span><span class="token punctuation">)</span> authentication<span class="token punctuation">.</span><span class="token function">getDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token punctuation">}</span>
    auth<span class="token punctuation">.</span><span class="token function">setDetails</span><span class="token punctuation">(</span>authentication<span class="token punctuation">.</span><span class="token function">getDetails</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    auth<span class="token punctuation">.</span><span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> auth<span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="resourceservertokenservices" tabindex="-1"><a class="header-anchor" href="#resourceservertokenservices" aria-hidden="true">#</a> ResourceServerTokenServices</h4><p>避免产生误解，tokenServices分为两类，一个是用在认证服务器(生成token)端的<code>AuthorizationServerTokenServices</code>，另一个是用在资源服务器(校验token)端的<code>ResourceServerTokenServices</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ResourceServerTokenServices</span> <span class="token punctuation">{</span>

    <span class="token comment">//根据accessToken加载客户端信息</span>
    <span class="token class-name">OAuth2Authentication</span> <span class="token function">loadAuthentication</span><span class="token punctuation">(</span><span class="token class-name">String</span> accessToken<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AuthenticationException</span><span class="token punctuation">,</span> <span class="token class-name">InvalidTokenException</span><span class="token punctuation">;</span>

    <span class="token comment">//根据accessToken获取完整的访问令牌详细信息。</span>
    <span class="token class-name">OAuth2AccessToken</span> <span class="token function">readAccessToken</span><span class="token punctuation">(</span><span class="token class-name">String</span> accessToken<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="tokenstore" tabindex="-1"><a class="header-anchor" href="#tokenstore" aria-hidden="true">#</a> TokenStore</h2><p>存储token的方式有很多：JWT、Redis、JDBC、InMemory</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/Token继承体系.png" alt=""></p><h3 id="redistokenstore" tabindex="-1"><a class="header-anchor" href="#redistokenstore" aria-hidden="true">#</a> RedisTokenStore</h3><h4 id="redis存储token的优势" tabindex="-1"><a class="header-anchor" href="#redis存储token的优势" aria-hidden="true">#</a> Redis存储Token的优势</h4><ul><li>登录信息一般不需要长效储存，使用Redis可以减少数据库的压力</li><li>Redis可以实现Token的时效性，Token过期失效自动删除</li><li>Redis的响应速度非常快，如果不出现网络问题，基本上是毫秒级别相应</li><li>使用Redis可以避免单点的问题，在分布式系统中，无论是哪一个机器处理请求都是从Redis获取Token</li></ul><h4 id="redis存储token的内容" tabindex="-1"><a class="header-anchor" href="#redis存储token的内容" aria-hidden="true">#</a> Redis存储Token的内容</h4><p>用Redis存储Token时，Spring Security OAuth2会生成以下几个key<strong>前缀</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACCESS</span> <span class="token operator">=</span> <span class="token string">&quot;access:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">AUTH_TO_ACCESS</span> <span class="token operator">=</span> <span class="token string">&quot;auth_to_access:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">AUTH</span> <span class="token operator">=</span> <span class="token string">&quot;auth:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REFRESH_AUTH</span> <span class="token operator">=</span> <span class="token string">&quot;refresh_auth:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">ACCESS_TO_REFRESH</span> <span class="token operator">=</span> <span class="token string">&quot;access_to_refresh:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REFRESH</span> <span class="token operator">=</span> <span class="token string">&quot;refresh:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">REFRESH_TO_ACCESS</span> <span class="token operator">=</span> <span class="token string">&quot;refresh_to_access:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">CLIENT_ID_TO_ACCESS</span> <span class="token operator">=</span> <span class="token string">&quot;client_id_to_access:&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">UNAME_TO_ACCESS</span> <span class="token operator">=</span> <span class="token string">&quot;uname_to_access:&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从\`\`RedisTokenStore<code>中可以发现，用的是Spring Security OAuth2提供的</code>JdkSerializationStrategy\`这个序列化工具，然后我们通过redis-cli查看具体key对应的值时，发现存储的是序列化后的对象，不是简单易读的json形式，估计是为了提高存储和读取的性能考虑</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210903232126.png" alt=""></p><p>可以替换成自定义实现的序列化工具</p><p>需要自行实现<code>RedisTokenStoreSerializationStrategy</code>接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">RedisTokenStore</span> <span class="token function">redisTokenStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token class-name">RedisTokenStore</span> store <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisTokenStore</span><span class="token punctuation">(</span>redisConnectionFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
    store<span class="token punctuation">.</span><span class="token function">setSerializationStrategy</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FastjsonRedisTokenStoreSerializationStrategy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> store<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是由于<code>DefaultOAuth2RefreshToken</code>、<code>DefaultOAuth2AccessToken</code>没有默认的无参构造方法，<strong>需要定制化序列化以及反序列化策略</strong></p><p><strong>access:[key(access_token)]</strong></p><p>由<code>access:</code>前缀+<code>access_token</code>组成的，而<code>access_token</code>是请求token接口返回的</p><p>其中的内容对应对象<code>OAuth2AccessToken</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token comment">//token，拿着这个token我们就可以资源（接口）了</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;x8U6xmAK0MeFDEJ0&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//token类型是一个票据类型，还有授权码类型等等</span>
  <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//用于刷新access_token（资源访问token）的token</span>
  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0qLDRZE70MeFDEI!&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//access_token剩余存活时间（单位是秒）</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">29658</span><span class="token punctuation">,</span>
  <span class="token comment">//拿这个token可以访问那些范围内的资源</span>
  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token string">&quot;server&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>auth_to_access:[key]</strong></p><p>这个key是将username、client_id、scope三个值加密后的值</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">extractKey</span><span class="token punctuation">(</span><span class="token class-name">OAuth2Authentication</span> authentication<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">//省略一些代码</span>
	values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">USERNAME</span><span class="token punctuation">,</span> authentication<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">CLIENT_ID</span><span class="token punctuation">,</span> authorizationRequest<span class="token punctuation">.</span><span class="token function">getClientId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token constant">SCOPE</span><span class="token punctuation">,</span> <span class="token class-name">OAuth2Utils</span><span class="token punctuation">.</span><span class="token function">formatParameterList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TreeSet</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>authorizationRequest<span class="token punctuation">.</span><span class="token function">getScope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">generateKey</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">protected</span> <span class="token class-name">String</span> <span class="token function">generateKey</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> values<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//省略一些代码</span>
	<span class="token class-name">MessageDigest</span> digest <span class="token operator">=</span> <span class="token class-name">MessageDigest</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token string">&quot;MD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//对这个map进行md5加密</span>
  <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> digest<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span>values<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">&quot;UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%032x&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BigInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> bytes<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>反序列化之后得到的结果和access:[key]的结果一致，对应的对象是<code>OAuth2AccessToken</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token comment">//token，拿着这个token我们就可以资源（接口）了</span>
  <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;x8U6xmAK0MeFDEJ0&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//token类型是一个票据类型，还有授权码类型等等</span>
  <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//用与刷新access_token（资源访问token）的token</span>
  <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0qLDRZE70MeFDEI!&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//access_token剩余存活时间（单位是秒）</span>
  <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">29658</span><span class="token punctuation">,</span>
  <span class="token comment">//拿这个token可以访问那些范围内的资源</span>
  <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token string">&quot;server&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>auth:[key(access_token)]</strong></p><p>由<code>auth:</code>前缀+<code>access_token</code>组成的，而<code>access_token</code>是请求token接口返回的</p><p>其中的内容对应对象<code>OAuth2Authentication</code></p><p>主要包含当前<strong>登录用户的信息</strong>，以及用户附带的<strong>角色</strong>和和<strong>权限</strong>信息、生成Token时的<strong>授权方式</strong>等信息</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
            <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;authenticated&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;userAuthentication&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;client_secret&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;grant_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;authenticated&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;principal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
            <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                    <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span>
                    <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token property">&quot;accountNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token property">&quot;accountNonLocked&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token property">&quot;credentialsNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;credentials&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;credentials&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;principal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span>
                <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span>
                <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;accountNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;accountNonLocked&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;credentialsNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;oauth2Request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;clientId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;requestParameters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;grant_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;resourceIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;approved&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token property">&quot;redirectUri&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
        <span class="token property">&quot;responseTypes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token property">&quot;extensions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;grantType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;refreshTokenRequest&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;clientOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>access_to_refresh:[key(access_token)]</strong></p><p>由<code>access_to_refresh:</code>前缀+<code>access_token</code>组成的，而<code>access_token</code>是请求token接口返回的</p><p>其中的内容是认证时返回的<code>refresh_token</code>，用于刷新令牌</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>grz0Xlzi0MeQwkx9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>refresh_to_access:[key(refresh_token)]</strong></p><p>由<code>refresh_to_access:</code>前缀+<code>refresh_token</code>组成的，而<code>refresh_token</code>由请求token接口返回</p><p>其中的内容是拿<code>refresh_token</code>去刷新令牌时，生成的新的<code>accessToken</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>TesxUOBt0MeRDDxA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>refresh:[key(refresh_token)]</strong></p><p>由<code>refresh_to_access:</code>前缀+<code>refresh_token</code>组成的，而<code>refresh_token</code>由请求token接口返回</p><p>拿<code>refresh_token</code>去刷新令牌的时候，会先获取这个key的信息，判断当前<code>refresh_token</code>是否还有效，无效则无法刷新令牌</p><p>其中的内容是</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
 <span class="token comment">//refresh_toekn</span>
  <span class="token property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;grz0Xlzi0MeQwkx9&quot;</span><span class="token punctuation">,</span>
  <span class="token comment">//过期时间戳（mills）</span>
  <span class="token property">&quot;expiration&quot;</span><span class="token operator">:</span> <span class="token number">1557821765322</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>refresh_atuh:[key(refresh_token)]</strong></p><p>由<code>refresh_auth:</code>前缀+<code>refresh_token</code>组成，而<code>refresh_token</code>由请求token接口返回</p><p>与<code>auth</code>类似，其中内容对应的对象是<code>OAuth2Authentication</code></p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
  <span class="token property">&quot;authenticated&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userAuthentication&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;details&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;client_secret&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;grant_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;authenticated&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;principal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
      <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
          <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token property">&quot;accountNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;accountNonLocked&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;credentialsNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;credentials&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;credentials&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;principal&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;password&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ROLE_USER&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;authority&quot;</span><span class="token operator">:</span> <span class="token string">&quot;USER_RETRIEVE&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;accountNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;accountNonLocked&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;credentialsNonExpired&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;enabled&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;oauth2Request&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;clientId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;server&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;requestParameters&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;grant_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;client_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;resourceIds&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;authorities&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;approved&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refresh&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token property">&quot;redirectUri&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>
    <span class="token property">&quot;responseTypes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;extensions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;grantType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;password&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refreshTokenRequest&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;clientOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wuji&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>client_id_to_access:[key(client_id)]</strong></p><p>由<code>client_id_to_access:</code>前缀+<code>client_id</code>组成，而<code>client_id</code>由服务端定义，用于标识当前请求哪一个应用的token</p><p>这个key将使用当前<code>client_id</code>所生成的所有<code>OAuth2AccessToken</code>对象存储起来，是一个<code>list</code>结构</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TesxUOBt0MeRDDxA&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;grz0Xlzi0MeQwkx9&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">41714</span><span class="token punctuation">,</span>
    <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token string">&quot;server&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>uname_to_access:[key(client_id:username)]</strong></p><p>由<code>uname_to_access:</code>前缀+<code>client_id:username</code>组成，<code>client_id</code>由服务端定义，<code>username</code>是用户名</p><p>这个key将使用当前<code>client_id</code>和指定用户名<code>username</code>所生成的所有<code>OAuth2AccessToken</code>对象存储起来，是一个<code>list</code>结构</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">[</span><span class="token punctuation">{</span>
    <span class="token property">&quot;access_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;TesxUOBt0MeRDDxA&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;token_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bearer&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;refresh_token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;grz0Xlzi0MeQwkx9&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;expires_in&quot;</span><span class="token operator">:</span> <span class="token number">41714</span><span class="token punctuation">,</span>
    <span class="token property">&quot;scope&quot;</span><span class="token operator">:</span> <span class="token string">&quot;server&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,153),o=[p];function c(i,l){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","OAuth2.html.vue"]]);export{k as default};
