const t=JSON.parse('{"key":"v-0134baa4","path":"/writings/algorithm/binary-search.html","title":"二分查找","lang":"zh-CN","frontmatter":{"description":"二分查找 概述：二分查找参考了二叉查找树的原理对数组进行数据查询，每次都用一个中间值与目标值做比较从而划分出两个下一轮的查询区间，直到找到目标值为止。 适用场景：数组中的数据是有序的，而是元素不能重复 在写二分查找，经常容易纠结的点在于： 新一轮查找区间的右边界是 middle 还是 middle - 1 while 条件中要写 left &lt; right 还是 left &lt;= right 数组的长度是奇数和偶数时，对中间值有什么影响","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/algorithm/binary-search.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"二分查找"}],["meta",{"property":"og:description","content":"二分查找 概述：二分查找参考了二叉查找树的原理对数组进行数据查询，每次都用一个中间值与目标值做比较从而划分出两个下一轮的查询区间，直到找到目标值为止。 适用场景：数组中的数据是有序的，而是元素不能重复 在写二分查找，经常容易纠结的点在于： 新一轮查找区间的右边界是 middle 还是 middle - 1 while 条件中要写 left &lt; right 还是 left &lt;= right 数组的长度是奇数和偶数时，对中间值有什么影响"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-06T09:52:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-06T09:52:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二分查找\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-06T09:52:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"写法一","slug":"写法一","link":"#写法一","children":[{"level":3,"title":"程序实现","slug":"程序实现","link":"#程序实现","children":[]},{"level":3,"title":"如果数组长度是奇数","slug":"如果数组长度是奇数","link":"#如果数组长度是奇数","children":[]},{"level":3,"title":"如果数组长度是偶数","slug":"如果数组长度是偶数","link":"#如果数组长度是偶数","children":[]}]},{"level":2,"title":"写法二","slug":"写法二","link":"#写法二","children":[{"level":3,"title":"程序实现","slug":"程序实现-1","link":"#程序实现-1","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1677837248000,"updatedTime":1678096333000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":2}]},"readingTime":{"minutes":3.91,"words":1174},"filePathRelative":"writings/algorithm/binary-search.md","localizedDate":"2023年3月3日","excerpt":"<h1> 二分查找</h1>\\n<p>概述：二分查找参考了二叉查找树的原理对<strong>数组</strong>进行数据查询，每次都用一个<strong>中间值</strong>与目标值做比较从而划分出两个下一轮的查询区间，直到找到目标值为止。</p>\\n<p>适用场景：<strong>数组中的数据是有序的，而是元素不能重复</strong></p>\\n<p>在写二分查找，经常容易纠结的点在于：</p>\\n<ul>\\n<li>新一轮查找区间的右边界是 middle 还是 middle - 1</li>\\n<li>while 条件中要写 left &lt; right 还是 left &lt;= right</li>\\n<li>数组的长度是奇数和偶数时，对中间值有什么影响</li>\\n</ul>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{t as data};
