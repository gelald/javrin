const e=JSON.parse('{"key":"v-aaf9198e","path":"/writings/Java-base/object-oriented.html","title":"面向对象","lang":"zh-CN","frontmatter":{"title":"面向对象","icon":"article","category":["Java基础"],"tag":["面向对象"],"description":"面向对象 每当提起 Java ，面向对象都是我们第一时间能想到与其关联的内容，我们在这里梳理一下面向对象的内容。 三大特性 面向对象的三大特性是老生常谈的话题，本节简单总结一下三大特性。 封装 概念：使对象尽可能隐藏内部细节，只保留一些对外的方法使之与外部发生联系。用户无需知道对象内部细节，但可以通过对象对外提供的方法来访问对象。 优点： 减少耦合：可以独立地进行开发、修改、测试。 便于开发人员理解这个类的功能。 提高系统的可复用性。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Java-base/object-oriented.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"面向对象"}],["meta",{"property":"og:description","content":"面向对象 每当提起 Java ，面向对象都是我们第一时间能想到与其关联的内容，我们在这里梳理一下面向对象的内容。 三大特性 面向对象的三大特性是老生常谈的话题，本节简单总结一下三大特性。 封装 概念：使对象尽可能隐藏内部细节，只保留一些对外的方法使之与外部发生联系。用户无需知道对象内部细节，但可以通过对象对外提供的方法来访问对象。 优点： 减少耦合：可以独立地进行开发、修改、测试。 便于开发人员理解这个类的功能。 提高系统的可复用性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:tag","content":"面向对象"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"面向对象\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"三大特性","slug":"三大特性","link":"#三大特性","children":[{"level":3,"title":"封装","slug":"封装","link":"#封装","children":[]},{"level":3,"title":"继承","slug":"继承","link":"#继承","children":[]},{"level":3,"title":"多态","slug":"多态","link":"#多态","children":[]}]},{"level":2,"title":"重写与重载","slug":"重写与重载","link":"#重写与重载","children":[]},{"level":2,"title":"抽象类与接口","slug":"抽象类与接口","link":"#抽象类与接口","children":[]},{"level":2,"title":"关键字","slug":"关键字","link":"#关键字","children":[{"level":3,"title":"super与this","slug":"super与this","link":"#super与this","children":[]},{"level":3,"title":"static","slug":"static","link":"#static","children":[]},{"level":3,"title":"final","slug":"final","link":"#final","children":[]}]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":7,"words":2099},"filePathRelative":"writings/Java-base/object-oriented.md","localizedDate":"2023年2月28日","excerpt":"<h1> 面向对象</h1>\\n<blockquote>\\n<p>每当提起 Java ，面向对象都是我们第一时间能想到与其关联的内容，我们在这里梳理一下面向对象的内容。</p>\\n</blockquote>\\n<h2> 三大特性</h2>\\n<blockquote>\\n<p>面向对象的三大特性是老生常谈的话题，本节简单总结一下三大特性。</p>\\n</blockquote>\\n<h3> 封装</h3>\\n<p>概念：使对象尽可能隐藏内部细节，只保留一些对外的方法使之与外部发生联系。用户无需知道对象内部细节，但可以通过对象对外提供的方法来访问对象。</p>\\n<p>优点：</p>\\n<ol>\\n<li>\\n<p>减少耦合：可以独立地进行开发、修改、测试。</p>\\n</li>\\n<li>\\n<p>便于开发人员理解这个类的功能。</p>\\n</li>\\n<li>\\n<p>提高系统的可复用性。</p>\\n</li>\\n</ol>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
