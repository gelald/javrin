import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.43edfa4f.js";const e={},t=p(`<h1 id="priorityqueue" tabindex="-1"><a class="header-anchor" href="#priorityqueue" aria-hidden="true">#</a> PriorityQueue</h1><h2 id="\u6982\u8FF0" tabindex="-1"><a class="header-anchor" href="#\u6982\u8FF0" aria-hidden="true">#</a> \u6982\u8FF0</h2><p>Java \u6709\u4E00\u79CD\u7279\u6B8A\u7684\u961F\u5217\u53EB\u505A\u4F18\u5148\u961F\u5217\u3002<strong>Java \u4E2D\u4F18\u5148\u961F\u5217\u7684\u4F5C\u7528\u662F\u80FD\u4FDD\u8BC1\u6BCF\u6B21\u53D6\u51FA\u7684\u5143\u7D20\u90FD\u662F\u961F\u5217\u4E2D\u6743\u503C\u6700\u5C0F\u7684</strong>\u3002\u8FD9\u91CC\u7275\u6D89\u5230\u4E86\u5927\u5C0F\u5173\u7CFB\uFF0C<strong>\u5143\u7D20\u5927\u5C0F\u7684\u8BC4\u5224\u53EF\u4EE5\u901A\u8FC7\u5143\u7D20\u672C\u8EAB\u7684\u81EA\u7136\u987A\u5E8F(natural ordering)\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u6784\u9020\u65F6\u4F20\u5165\u7684\u6BD4\u8F83\u5668</strong>(Comparator)\u3002</p><p>Java \u4E2D\u5B9E\u73B0\u4F18\u5148\u961F\u5217\u7684\u96C6\u5408\u662F PriorityQueue\uFF0C\u901A\u8FC7\u5806\u5B9E\u73B0\u4F18\u5148\u961F\u5217\uFF0C\u5177\u4F53\u662F\u901A\u8FC7\u5B8C\u5168\u4E8C\u53C9\u6811\u5B9E\u73B0\u7684\u5806\uFF08\u4EFB\u610F\u4E00\u4E2A\u975E\u53F6\u5B50\u7ED3\u70B9\u7684\u6743\u503C\u90FD\u4E0D\u5927\u4E8E\u5176\u5DE6\u53F3\u7ED3\u70B9\u7684\u6743\u503C\uFF09\uFF0C\u800C\u4E8C\u53C9\u6811\u5219\u662F\u7531\u6570\u7EC4\u5B9E\u73B0\u7684\u3002</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220314172348.png" alt=""></p><p>\u7236\u5B50\u8282\u70B9\u7684\u7F16\u53F7\u4E4B\u95F4\u6709\u8FD9\u6837\u7684\u5173\u7CFB</p><ul><li>leftNo = parentNo * 2 + 1</li><li>rightNo = parentNo * 2 + 2</li><li>parentNo = (nodeNo - 1) / 2</li></ul><p>\u6709\u8FD9\u6837\u7684\u5173\u7CFB\u540E\uFF0C\u53EF\u4EE5\u8F7B\u6613\u8BA1\u7B97\u51FA\u67D0\u4E00\u4E2A\u8282\u70B9\u7684\u7236\u8282\u70B9\u53CA\u5176\u5B50\u8282\u70B9\u7684\u4E0B\u6807\uFF0C\u6240\u4EE5\u4E8C\u53C9\u6811\u53EF\u4EE5\u4F7F\u7528\u6570\u7EC4\u6765\u5B9E\u73B0</p><h2 id="\u6784\u9020\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u65B9\u6CD5</h2><p>\u7A7A\u53C2\u7684\u6784\u9020\u65B9\u6CD5\u751F\u6210\u7684\u6570\u7EC4\u9ED8\u8BA4\u957F\u5EA6\u662F11</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">int</span> DEFAULT_INITIAL_CAPACITY <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">PriorityQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">(</span>DEFAULT_INITIAL_CAPACITY<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6DFB\u52A0\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u6DFB\u52A0\u5143\u7D20" aria-hidden="true">#</a> \u6DFB\u52A0\u5143\u7D20</h2><p>\u5BF9\u5806\u4E2D\u6DFB\u52A0\u5143\u7D20\u5FC5\u7136\u4F1A\u5BFC\u81F4\u5C0F\u9876\u5806\u7684\u7279\u6027\u88AB\u7834\u574F\uFF0C\u6240\u4EE5\u9700\u8981\u8FDB\u884C\u5FC5\u8981\u7684\u8C03\u6574</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">offer</span><span class="token punctuation">(</span><span class="token class-name">E</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token comment">//\u4E0D\u5141\u8BB8\u653E\u5165null\u5143\u7D20</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> i <span class="token operator">=</span> size<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
        <span class="token function">grow</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u81EA\u52A8\u6269\u5BB9</span>
    size <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//\u961F\u5217\u539F\u6765\u4E3A\u7A7A\uFF0C\u8FD9\u662F\u63D2\u5165\u7684\u7B2C\u4E00\u4E2A\u5143\u7D20</span>
        queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">siftUp</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8C03\u6574</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u4EE3\u7801\u4E2D\uFF0C\u6269\u5BB9\u51FD\u6570 <code>grow()</code> \u7C7B\u4F3C\u4E8E <code>ArrayList</code> \u91CC\u7684 <code>grow()</code> \u51FD\u6570\uFF0C\u5C31\u662F\u518D\u7533\u8BF7\u4E00\u4E2A\u66F4\u5927\u7684\u6570\u7EC4\uFF0C\u5E76\u5C06\u539F\u6570\u7EC4\u7684\u5143\u7D20\u590D\u5236\u8FC7\u53BB\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\u3002</p><p>\u9700\u8981\u6CE8\u610F\u7684\u662F <code>siftUp(int k, E x)</code> \u65B9\u6CD5\uFF0C\u8BE5\u65B9\u6CD5\u7528\u4E8E\u63D2\u5165\u5143\u7D20 <code>x</code> \u5E76\u7EF4\u6301\u5806\u7684\u7279\u6027\u3002</p><p>\u8C03\u6574\u7684\u8FC7\u7A0B\u4E3A : \u4ECE <code>k</code> \u6307\u5B9A\u7684\u4F4D\u7F6E\u5F00\u59CB\uFF0C\u5C06 <code>x</code> \u9010\u5C42\u4E0E\u5F53\u524D\u70B9\u7684 <code>parent</code> \u8FDB\u884C\u6BD4\u8F83\u5E76\u4EA4\u6362\uFF0C\u76F4\u5230\u6EE1\u8DB3 <code>x &gt;= queue[parent]</code> \u4E3A\u6B62</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">siftUp</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token class-name">E</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//parentNo = (nodeNo-1)/2 \u7528\u65E0\u7B26\u53F7\u53F3\u79FB\u8868\u793A\u5904\u4EE52</span>
        <span class="token keyword">int</span> parent <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token class-name">Object</span> e <span class="token operator">=</span> queue<span class="token punctuation">[</span>parent<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> e<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//\u8C03\u7528\u6BD4\u8F83\u5668\u7684\u6BD4\u8F83\u65B9\u6CD5</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">;</span>
        k <span class="token operator">=</span> parent<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    queue<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u83B7\u53D6\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u83B7\u53D6\u5143\u7D20" aria-hidden="true">#</a> \u83B7\u53D6\u5143\u7D20</h2><p>\u4ECE\u5806\u4E2D\u83B7\u53D6\u5143\u7D20\uFF0C\u6BCF\u6B21\u90FD\u4F1A\u83B7\u53D6\u5806\u9876\u6743\u503C\u6700\u5C0F\u7684\u90A3\u4E00\u4E2A\u5143\u7D20\u51FA\u6765\u3002\u7531\u4E8E\u5806\u4F7F\u7528\u6570\u7EC4\u6765\u5B9E\u73B0\uFF0C\u6240\u4EE5\u6839\u636E\u7D22\u5F15\u5173\u7CFB\uFF0C\u7D22\u5F15\u4E3A0\u7684\u5143\u7D20\u5C31\u662F\u5806\u9876\u5143\u7D20\uFF0C\u6240\u4EE5\u83B7\u53D6\u5143\u7D20\u64CD\u4F5C\u662F\u5E38\u6570\u65F6\u95F4</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">peek</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//0\u4E0B\u6807\u5904\u7684\u90A3\u4E2A\u5143\u7D20\u5C31\u662F\u6700\u5C0F\u7684\u90A3\u4E2A</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5220\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u5220\u9664\u5143\u7D20" aria-hidden="true">#</a> \u5220\u9664\u5143\u7D20</h2><p>\u5220\u9664\u5143\u7D20\u5E38\u7528\u7684\u65B9\u5F0F\u662F\u5220\u9664\u5E76\u8FD4\u56DE\u5806\u9876\u5143\u7D20</p><ul><li><p>\u83B7\u53D6\u5806\u9876\u5143\u7D20\u5E76\u5C06\u5176\u8FD4\u56DE\u5E76\u5220\u9664</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">E</span> <span class="token function">poll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> s <span class="token operator">=</span> <span class="token operator">--</span>size<span class="token punctuation">;</span>
    modCount<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token class-name">E</span> result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> queue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//0\u4E0B\u6807\u5904\u7684\u90A3\u4E2A\u5143\u7D20\u5C31\u662F\u6700\u5C0F\u7684\u90A3\u4E2A</span>
    <span class="token class-name">E</span> x <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> queue<span class="token punctuation">[</span>s<span class="token punctuation">]</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">[</span>s<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token comment">//\u6307\u5411null\u4FC3\u8FDBGC\u7684\u5DE5\u4F5C</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token function">siftDown</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8C03\u6574</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4E0E\u6DFB\u52A0\u5143\u7D20\u7C7B\u4F3C\uFF0C\u5220\u9664\u5143\u7D20\u540E\u4E5F\u9700\u8981\u8FDB\u884C\u5806\u7684\u8C03\u6574</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">siftDown</span><span class="token punctuation">(</span><span class="token keyword">int</span> k<span class="token punctuation">,</span> <span class="token class-name">E</span> x<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> half <span class="token operator">=</span> size <span class="token operator">&gt;&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;</span> half<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    	<span class="token comment">//\u9996\u5148\u627E\u5230\u5DE6\u53F3\u5B69\u5B50\u4E2D\u8F83\u5C0F\u7684\u90A3\u4E2A\uFF0C\u8BB0\u5F55\u5230c\u91CC\uFF0C\u5E76\u7528child\u8BB0\u5F55\u5176\u4E0B\u6807</span>
        <span class="token keyword">int</span> child <span class="token operator">=</span> <span class="token punctuation">(</span>k <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">//leftNo = parentNo*2+1</span>
        <span class="token class-name">Object</span> c <span class="token operator">=</span> queue<span class="token punctuation">[</span>child<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> right <span class="token operator">=</span> child <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;</span> size <span class="token operator">&amp;&amp;</span>
            comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> c<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> queue<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
            c <span class="token operator">=</span> queue<span class="token punctuation">[</span>child <span class="token operator">=</span> right<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>comparator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">E</span><span class="token punctuation">)</span> c<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        queue<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span><span class="token comment">//\u7136\u540E\u7528c\u53D6\u4EE3\u539F\u6765\u7684\u503C</span>
        k <span class="token operator">=</span> child<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    queue<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u6574\u5806\u7684\u6D41\u7A0B\u56FE</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220314193835.png" alt=""></p></li></ul>`,24),o=[t];function c(l,i){return s(),a("div",null,o)}var r=n(e,[["render",c],["__file","PriorityQueue.html.vue"]]);export{r as default};
