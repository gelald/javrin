const e=JSON.parse('{"key":"v-2ca496bc","path":"/writings/Spring/filter-and-interceptor.html","title":"Spring 中的拦截器与过滤器","lang":"zh-CN","frontmatter":{"title":"Spring 中的拦截器与过滤器","icon":"article","category":["框架"],"tag":["SpringMVC","拦截器"],"description":"Spring 中的拦截器与过滤器 在 SpringBoot 的 Web 项目开发中，如果想实现拦截、过滤的功能，大概会有三种做法：Filter 过滤器、Interceptor 拦截器、AOP 切面编程，而我们今天要讨论的是 Filter 与 Interceptor 的做法及它们之间的区别。 Filter 过滤器 Filter 是 Servlet 中用于拦截请求、过滤请求的一个接口。在以前，我们通常会使用 Filter 来拦截请求设置请求的字符集、判断用户是否登陆、校验权限等等。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Spring/filter-and-interceptor.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Spring 中的拦截器与过滤器"}],["meta",{"property":"og:description","content":"Spring 中的拦截器与过滤器 在 SpringBoot 的 Web 项目开发中，如果想实现拦截、过滤的功能，大概会有三种做法：Filter 过滤器、Interceptor 拦截器、AOP 切面编程，而我们今天要讨论的是 Filter 与 Interceptor 的做法及它们之间的区别。 Filter 过滤器 Filter 是 Servlet 中用于拦截请求、过滤请求的一个接口。在以前，我们通常会使用 Filter 来拦截请求设置请求的字符集、判断用户是否登陆、校验权限等等。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-05T03:23:34.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:tag","content":"SpringMVC"}],["meta",{"property":"article:tag","content":"拦截器"}],["meta",{"property":"article:modified_time","content":"2023-07-05T03:23:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Spring 中的拦截器与过滤器\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-05T03:23:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"Filter 过滤器","slug":"filter-过滤器","link":"#filter-过滤器","children":[{"level":3,"title":"Filter 方法简单介绍","slug":"filter-方法简单介绍","link":"#filter-方法简单介绍","children":[]},{"level":3,"title":"SpringBoot 中添加 Filter","slug":"springboot-中添加-filter","link":"#springboot-中添加-filter","children":[]},{"level":3,"title":"Filter 原理","slug":"filter-原理","link":"#filter-原理","children":[]}]},{"level":2,"title":"HandlerInterceptor 拦截器","slug":"handlerinterceptor-拦截器","link":"#handlerinterceptor-拦截器","children":[{"level":3,"title":"HandlerInterceptor 方法简单介绍","slug":"handlerinterceptor-方法简单介绍","link":"#handlerinterceptor-方法简单介绍","children":[]},{"level":3,"title":"SpringBoot 中添加 HandlerInterceptor","slug":"springboot-中添加-handlerinterceptor","link":"#springboot-中添加-handlerinterceptor","children":[]},{"level":3,"title":"HandlerInterceptor 原理","slug":"handlerinterceptor-原理","link":"#handlerinterceptor-原理","children":[]}]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1681228589000,"updatedTime":1688527414000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":2}]},"readingTime":{"minutes":6.59,"words":1977},"filePathRelative":"writings/Spring/filter-and-interceptor.md","localizedDate":"2023年4月11日","excerpt":"<h1> Spring 中的拦截器与过滤器</h1>\\n<blockquote>\\n<p>在 SpringBoot 的 Web 项目开发中，如果想实现拦截、过滤的功能，大概会有三种做法：Filter 过滤器、Interceptor 拦截器、AOP 切面编程，而我们今天要讨论的是 Filter 与 Interceptor 的做法及它们之间的区别。</p>\\n</blockquote>\\n<h2> Filter 过滤器</h2>\\n<p>Filter 是 Servlet 中用于拦截请求、过滤请求的一个接口。在以前，我们通常会使用 Filter 来拦截请求设置请求的字符集、判断用户是否登陆、校验权限等等。</p>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
