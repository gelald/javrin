import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,a as o,o as g}from"./app-DCpuSOHQ.js";const i={};function a(e,n){return g(),s("div",null,[...n[0]||(n[0]=[o('<h1 id="uml" tabindex="-1"><a class="header-anchor" href="#uml"><span>UML</span></a></h1><p>统一建模语言（Unified Modeling Language），是一种为<strong>面向对象</strong>系统的产品进行说明、可视化和编制文档的<strong>标准语言</strong>。</p><p>UML使用面向对象设计的建模工具，但独立于任何具体程序设计语言</p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210519173435.png" style="zoom:80%;"><h2 id="关系描述" tabindex="-1"><a class="header-anchor" href="#关系描述"><span>关系描述</span></a></h2><ul><li><p>关联：这是一种静态关系，与运行过程的状态无关，在运行前就可以确定</p><ul><li><strong>普通箭头实线</strong>的表示<strong>单向关系</strong>，<strong>箭头</strong>指向<strong>被拥有者</strong></li><li><strong>没有箭头实线</strong>的表示<strong>双向关系</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110200.png" alt=""></p></li><li><p>聚合：整体与部分的关系。<strong>不同的生命周期</strong></p><ul><li>用<strong>带空心菱形的实线</strong>表示，<strong>菱形</strong>指向<strong>整体</strong>，<strong>箭头</strong>指向<strong>个体</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110127.png" alt=""></p></li><li><p>组合：整体与部分的关系，组合比聚合更加<strong>严格</strong>。<strong>相同的生命周期</strong></p><ul><li>用<strong>带实心菱形的实线</strong>表示，<strong>菱形</strong>指向<strong>整体</strong>，<strong>箭头</strong>指向<strong>个体</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110142.png" alt=""></p></li><li><p>泛化：表示一个<strong>更泛化</strong>的元素和一个<strong>更具体</strong>的元素之间的关系。父类与子类的关系</p><ul><li>用<strong>带三角箭头的实线</strong>表示，<strong>箭头</strong>指向<strong>父类</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303105832.png" alt=""></p></li><li><p>实现：实现类与接口的关系</p><ul><li>用<strong>带三角箭头的虚线</strong>表示，<strong>箭头</strong>指向<strong>接口</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110059.png" alt=""></p></li><li><p>依赖：如果一个类的改动会影响到另一个类，则两个类之间存在依赖关系，<strong>一般而言，依赖是单向的</strong></p><ul><li>用<strong>带普通箭头的虚线</strong>表示，<strong>箭头</strong>指向<strong>被依赖者</strong></li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110218.png" alt=""></p></li></ul><h2 id="类图" tabindex="-1"><a class="header-anchor" href="#类图"><span>类图</span></a></h2><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210913152524.png" style="zoom:67%;"><ul><li><code>+</code>：<code>public</code></li><li><code>-</code>：<code>private</code></li><li><code>#</code>：<code>protected</code></li><li><code>~</code>：<code>default</code>，可省略</li><li>字段和方法返回值的数据类型<strong>可省略</strong></li><li><strong>抽象</strong>类或抽象方法用<strong>斜体</strong>表示</li><li><strong>静态</strong>类或静态方法加<strong>下划线</strong></li><li>如果是接口需要在类名上方加&lt;&lt;Interface&gt;&gt;</li></ul><h3 id="类图案例" tabindex="-1"><a class="header-anchor" href="#类图案例"><span>类图案例</span></a></h3><h4 id="案例一" tabindex="-1"><a class="header-anchor" href="#案例一"><span>案例一</span></a></h4><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210913155546.png" alt=""></p><h4 id="案例二《大话设计模式》" tabindex="-1"><a class="header-anchor" href="#案例二《大话设计模式》"><span>案例二《大话设计模式》</span></a></h4><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210913160834.png" alt=""></p><h2 id="时序图" tabindex="-1"><a class="header-anchor" href="#时序图"><span>时序图</span></a></h2><p>时序图描述对象之间消息的发送顺序，<strong>强调时间顺序</strong>。时序图是一个二维图，<strong>横轴代表对象</strong>，<strong>纵轴表示时间</strong>，消息在各对象之间横向传递，依照时间顺序纵向排列。用箭头表示消息、用竖虚线表示对象的生命线</p><p><strong>可以直观的描述并发进程</strong></p><h3 id="组成元素" tabindex="-1"><a class="header-anchor" href="#组成元素"><span>组成元素</span></a></h3><ul><li><p>角色（Actor）：系统角色：人、机器，一般是一个入口</p></li><li><p>对象（Object）：类名</p></li><li><p>生命线（Lifeline）：对象所存在的时间</p></li><li><p>控制焦点（Focus of Control）：激活，当前执行的逻辑</p></li><li><p>消息（Message）：同步消息、异步消息</p></li><li><p>自关联消息：方法自身调用、一个对象的某个方法调用另一个方法</p></li><li><p>组合片段</p><ul><li><p>Opt 选项：包含一个可能发生或可能不发生的序列，可以在临界中指定序列发生的条件</p></li><li><p>Alt 抉择：包含一个片段列表，这些片段包含备选的消息序列，<strong>仅能发生一个序列</strong></p></li><li><p>Par 并行：并行执行</p></li><li><p>Loop 循环：片段重复一定次数</p></li></ul></li></ul><h3 id="消息" tabindex="-1"><a class="header-anchor" href="#消息"><span>消息</span></a></h3><ul><li>同步消息，需要等待响应：实心箭头实线表示</li><li>异步消息，不需要等待响应：带线型箭头实线表示</li><li>返回消息，从过程调用返回：带线型箭头虚线表示</li></ul><h3 id="时序图案例" tabindex="-1"><a class="header-anchor" href="#时序图案例"><span>时序图案例</span></a></h3><p>下面通过一个小案例加深时序图的理解</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110340.png" alt=""></p>',24)])])}const p=t(i,[["render",a]]),c=JSON.parse('{"path":"/writings/project-tools/UML.html","title":"UML基础知识","lang":"zh-CN","frontmatter":{"title":"UML基础知识","icon":"article","category":["干货","项目工具"],"tag":["UML","基础"],"description":"UML 统一建模语言（Unified Modeling Language），是一种为面向对象系统的产品进行说明、可视化和编制文档的标准语言。 UML使用面向对象设计的建模工具，但独立于任何具体程序设计语言 关系描述 关联：这是一种静态关系，与运行过程的状态无关，在运行前就可以确定 普通箭头实线的表示单向关系，箭头指向被拥有者 没有箭头实线的表示双向关系...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"UML基础知识\\",\\"image\\":[\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110200.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110127.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110142.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303105832.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110059.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110218.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210913155546.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20210913160834.png\\",\\"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110340.png\\"],\\"dateModified\\":\\"2022-07-30T16:45:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"],["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/project-tools/UML.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"UML基础知识"}],["meta",{"property":"og:description","content":"UML 统一建模语言（Unified Modeling Language），是一种为面向对象系统的产品进行说明、可视化和编制文档的标准语言。 UML使用面向对象设计的建模工具，但独立于任何具体程序设计语言 关系描述 关联：这是一种静态关系，与运行过程的状态无关，在运行前就可以确定 普通箭头实线的表示单向关系，箭头指向被拥有者 没有箭头实线的表示双向关系..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220303110200.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-07-30T16:45:09.000Z"}],["meta",{"property":"article:tag","content":"基础"}],["meta",{"property":"article:tag","content":"UML"}],["meta",{"property":"article:modified_time","content":"2022-07-30T16:45:09.000Z"}]]},"git":{"createdTime":1657776977000,"updatedTime":1659199509000,"contributors":[{"name":"wuyingbin","username":"wuyingbin","email":"yb.ng@foxmail.com","commits":1,"url":"https://github.com/wuyingbin"},{"name":"gelald","username":"gelald","email":"yb.ng@foxmail.com","commits":2,"url":"https://github.com/gelald"}]},"readingTime":{"minutes":3,"words":900},"filePathRelative":"writings/project-tools/UML.md","autoDesc":true}');export{p as comp,c as data};
