import{_ as p}from"./plugin-vue_export-helper.21dcd24c.js";import{r as e,o,c,a as n,b as l,d as s,e as a}from"./app.a2583bd1.js";const i={},u=s(`<h1 id="\u4E00\u4E2A\u4F18\u79C0\u7684-controller-\u5C42\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u4E00\u4E2A\u4F18\u79C0\u7684-controller-\u5C42\u903B\u8F91" aria-hidden="true">#</a> \u4E00\u4E2A\u4F18\u79C0\u7684 Controller \u5C42\u903B\u8F91</h1><blockquote><p>\u8BF4\u5230 Controller\uFF0C\u76F8\u4FE1\u5927\u5BB6\u90FD\u4E0D\u964C\u751F\uFF0C\u5B83\u53EF\u4EE5\u5F88\u65B9\u4FBF\u5730\u5BF9\u5916\u63D0\u4F9B\u6570\u636E\u63A5\u53E3\u3002\u5B83\u7684\u5B9A\u4F4D\uFF0C\u6211\u8BA4\u4E3A\u662F\u300C\u4E0D\u53EF\u6216\u7F3A\u7684\u914D\u89D2\u300D\uFF0C\u8BF4\u5B83\u4E0D\u53EF\u6216\u7F3A\u662F\u56E0\u4E3A\u65E0\u8BBA\u662F\u4F20\u7EDF\u7684\u4E09\u5C42\u67B6\u6784\u8FD8\u662F\u73B0\u5728\u7684COLA\u67B6\u6784\uFF0CController \u5C42\u4F9D\u65E7\u6709\u4E00\u5E2D\u4E4B\u5730\uFF0C\u8BF4\u660E\u4ED6\u7684\u5FC5\u8981\u6027\uFF1B\u8BF4\u5B83\u662F\u914D\u89D2\u662F\u56E0\u4E3A Controller \u5C42\u7684\u4EE3\u7801\u4E00\u822C\u662F\u4E0D\u8D1F\u8D23\u5177\u4F53\u7684\u903B\u8F91\u4E1A\u52A1\u903B\u8F91\u5B9E\u73B0\uFF0C\u4F46\u662F\u5B83\u8D1F\u8D23\u63A5\u6536\u548C\u54CD\u5E94\u8BF7\u6C42</p></blockquote><h2 id="\u4ECE\u73B0\u72B6\u770B\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u4ECE\u73B0\u72B6\u770B\u95EE\u9898" aria-hidden="true">#</a> \u4ECE\u73B0\u72B6\u770B\u95EE\u9898</h2><p>Controller \u4E3B\u8981\u7684\u5DE5\u4F5C\u6709\u4EE5\u4E0B\u51E0\u9879</p><ul><li>\u63A5\u6536\u8BF7\u6C42\u5E76\u89E3\u6790\u53C2\u6570</li><li>\u8C03\u7528 Service \u6267\u884C\u5177\u4F53\u7684\u4E1A\u52A1\u4EE3\u7801\uFF08\u53EF\u80FD\u5305\u542B\u53C2\u6570\u6821\u9A8C\uFF09</li><li>\u6355\u83B7\u4E1A\u52A1\u903B\u8F91\u5F02\u5E38\u505A\u51FA\u53CD\u9988</li><li>\u4E1A\u52A1\u903B\u8F91\u6267\u884C\u6210\u529F\u505A\u51FA\u54CD\u5E94</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//DTO</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDTO</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> num<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> type<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">//Service</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestService</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">service</span><span class="token punctuation">(</span><span class="token class-name">TestDTO</span> testDTO<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>testDTO<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;\u8F93\u5165\u7684\u6570\u5B57\u9700\u8981\u5927\u4E8E0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>testDTO<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;square&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span>testDTO<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>testDTO<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;factorial&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">double</span> result <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> num <span class="token operator">=</span> testDTO<span class="token punctuation">.</span><span class="token function">getNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">while</span> <span class="token punctuation">(</span>num <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                result <span class="token operator">=</span> result <span class="token operator">*</span> num<span class="token punctuation">;</span>
                num <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Exception</span><span class="token punctuation">(</span><span class="token string">&quot;\u672A\u8BC6\u522B\u7684\u7B97\u6CD5&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">//Controller</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Double</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">TestDTO</span> testDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Double</span> result <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>testService<span class="token punctuation">.</span><span class="token function">service</span><span class="token punctuation">(</span>testDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> result<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">DTOid</span> <span class="token function">setTestService</span><span class="token punctuation">(</span><span class="token class-name">TestService</span> testService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>testService <span class="token operator">=</span> testService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u771F\u7684\u6309\u7167\u4E0A\u9762\u6240\u5217\u7684\u5DE5\u4F5C\u9879\u6765\u5F00\u53D1 Controller \u4EE3\u7801\u4F1A\u6709\u51E0\u4E2A\u95EE\u9898</p><ol><li>\u53C2\u6570\u6821\u9A8C\u8FC7\u591A\u5730\u8026\u5408\u4E86\u4E1A\u52A1\u4EE3\u7801\uFF0C\u8FDD\u80CC\u5355\u4E00\u804C\u8D23\u539F\u5219</li><li>\u53EF\u80FD\u5728\u591A\u4E2A\u4E1A\u52A1\u4E2D\u90FD\u629B\u51FA\u540C\u4E00\u4E2A\u5F02\u5E38\uFF0C\u5BFC\u81F4\u4EE3\u7801\u91CD\u590D</li><li>\u5404\u79CD\u5F02\u5E38\u53CD\u9988\u548C\u6210\u529F\u54CD\u5E94\u683C\u5F0F\u4E0D\u7EDF\u4E00\uFF0C\u63A5\u53E3\u5BF9\u63A5\u4E0D\u53CB\u597D</li></ol><h2 id="\u6539\u9020-controller-\u5C42\u903B\u8F91" tabindex="-1"><a class="header-anchor" href="#\u6539\u9020-controller-\u5C42\u903B\u8F91" aria-hidden="true">#</a> \u6539\u9020 Controller \u5C42\u903B\u8F91</h2><h3 id="\u7EDF\u4E00\u8FD4\u56DE\u7ED3\u6784" tabindex="-1"><a class="header-anchor" href="#\u7EDF\u4E00\u8FD4\u56DE\u7ED3\u6784" aria-hidden="true">#</a> \u7EDF\u4E00\u8FD4\u56DE\u7ED3\u6784</h3><p>\u7EDF\u4E00\u8FD4\u56DE\u503C\u7C7B\u578B\u65E0\u8BBA\u9879\u76EE\u524D\u540E\u7AEF\u662F\u5426\u5206\u79BB\u90FD\u662F\u975E\u5E38\u5FC5\u8981\u7684\uFF0C\u65B9\u4FBF\u5BF9\u63A5\u63A5\u53E3\u7684\u5F00\u53D1\u4EBA\u5458\u66F4\u52A0\u6E05\u6670\u5730\u77E5\u9053\u8FD9\u4E2A\u63A5\u53E3\u7684\u8C03\u7528\u662F\u5426\u6210\u529F\uFF08\u4E0D\u80FD\u4EC5\u4EC5\u7B80\u5355\u5730\u770B\u8FD4\u56DE\u503C\u662F\u5426\u4E3A <code>null</code> \u5C31\u5224\u65AD\u6210\u529F\u4E0E\u5426\uFF0C\u56E0\u4E3A\u6709\u4E9B\u63A5\u53E3\u7684\u8BBE\u8BA1\u5C31\u662F\u5982\u6B64\uFF09\uFF0C\u4F7F\u7528\u4E00\u4E2A\u72B6\u6001\u7801\u3001\u72B6\u6001\u4FE1\u606F\u5C31\u80FD\u6E05\u695A\u5730\u4E86\u89E3\u63A5\u53E3\u8C03\u7528\u60C5\u51B5</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u5B9A\u4E49\u8FD4\u56DE\u6570\u636E\u7ED3\u6784</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IResult</span> <span class="token punctuation">{</span>
    <span class="token class-name">Integer</span> <span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5E38\u7528\u7ED3\u679C\u7684\u679A\u4E3E</span>
<span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">ResultEnum</span> <span class="token keyword">implements</span> <span class="token class-name">IResult</span> <span class="token punctuation">{</span>
    <span class="token function">SUCCESS</span><span class="token punctuation">(</span><span class="token number">2001</span><span class="token punctuation">,</span> <span class="token string">&quot;\u63A5\u53E3\u8C03\u7528\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">VALIDATE_FAILED</span><span class="token punctuation">(</span><span class="token number">2002</span><span class="token punctuation">,</span> <span class="token string">&quot;\u53C2\u6570\u6821\u9A8C\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">COMMON_FAILED</span><span class="token punctuation">(</span><span class="token number">2003</span><span class="token punctuation">,</span> <span class="token string">&quot;\u63A5\u53E3\u8C03\u7528\u5931\u8D25&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">FORBIDDEN</span><span class="token punctuation">(</span><span class="token number">2004</span><span class="token punctuation">,</span> <span class="token string">&quot;\u6CA1\u6709\u6743\u9650\u8BBF\u95EE\u8D44\u6E90&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>

    <span class="token comment">//\u7701\u7565get\u3001set\u65B9\u6CD5\u548C\u6784\u9020\u65B9\u6CD5</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u7EDF\u4E00\u8FD4\u56DE\u6570\u636E\u7ED3\u6784</span>
<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> code<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> message<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">T</span> data<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>SUCCESS<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">failed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>COMMON_FAILED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>COMMON_FAILED<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>COMMON_FAILED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> message<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">IResult</span> errorResult<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>errorResult<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> errorResult<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token function">instance</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> code<span class="token punctuation">,</span> <span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">T</span> data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
        result<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7EDF\u4E00\u8FD4\u56DE\u7ED3\u6784\u540E\uFF0C\u5728 Controller \u4E2D\u5C31\u53EF\u4EE5\u4F7F\u7528\u4E86\uFF0C\u4F46\u662F\u6BCF\u4E00\u4E2A Controller \u90FD\u5199\u8FD9\u4E48\u4E00\u6BB5\u6700\u7EC8\u5C01\u88C5\u7684\u903B\u8F91\uFF0C\u8FD9\u4E9B\u90FD\u662F\u5F88\u91CD\u590D\u7684\u5DE5\u4F5C\uFF0C\u6240\u4EE5\u8FD8\u8981\u7EE7\u7EED\u60F3\u529E\u6CD5\u8FDB\u4E00\u6B65\u5904\u7406\u7EDF\u4E00\u8FD4\u56DE\u7ED3\u6784</p><h3 id="\u7EDF\u4E00\u5305\u88C5\u5904\u7406" tabindex="-1"><a class="header-anchor" href="#\u7EDF\u4E00\u5305\u88C5\u5904\u7406" aria-hidden="true">#</a> \u7EDF\u4E00\u5305\u88C5\u5904\u7406</h3><p>Spring \u4E2D\u63D0\u4F9B\u4E86\u4E00\u4E2A\u7C7B <code>ResponseBodyAdvice</code> \uFF0C\u80FD\u5E2E\u52A9\u6211\u4EEC\u5B9E\u73B0\u4E0A\u8FF0\u9700\u6C42</p><p><code>ResponseBodyAdvice</code> \u662F\u5BF9 Controller \u8FD4\u56DE\u7684\u5185\u5BB9\u5728 <code>HttpMessageConverter</code> \u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u4E4B\u524D\u62E6\u622A\uFF0C\u8FDB\u884C\u76F8\u5E94\u7684\u5904\u7406\u64CD\u4F5C\u540E\uFF0C\u518D\u5C06\u7ED3\u679C\u8FD4\u56DE\u7ED9\u5BA2\u6237\u7AEF\u3002\u90A3\u8FD9\u6837\u5C31\u53EF\u4EE5\u628A\u7EDF\u4E00\u5305\u88C5\u7684\u5DE5\u4F5C\u653E\u5230\u8FD9\u4E2A\u7C7B\u91CC\u9762\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ResponseBodyAdvice</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converterType<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Nullable</span>
    <span class="token class-name">T</span> <span class="token function">beforeBodyWrite</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">T</span> body<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">MediaType</span> selectedContentType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> selectedConverterType<span class="token punctuation">,</span> <span class="token class-name">ServerHttpRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerHttpResponse</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>supports\uFF1A\u5224\u65AD\u662F\u5426\u8981\u4EA4\u7ED9 beforeBodyWrite \u65B9\u6CD5\u6267\u884C\uFF0Cture\uFF1A\u9700\u8981\uFF1Bfalse\uFF1A\u4E0D\u9700\u8981</li><li>beforeBodyWrite\uFF1A\u5BF9 response \u8FDB\u884C\u5177\u4F53\u7684\u5904\u7406</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u5982\u679C\u5F15\u5165\u4E86swagger\u6216knife4j\u7684\u6587\u6863\u751F\u6210\u7EC4\u4EF6\uFF0C\u8FD9\u91CC\u9700\u8981\u4EC5\u626B\u63CF\u81EA\u5DF1\u9879\u76EE\u7684\u5305\uFF0C\u5426\u5219\u6587\u6863\u65E0\u6CD5\u6B63\u5E38\u751F\u6210</span>
<span class="token annotation punctuation">@RestControllerAdvice</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.example.demo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseAdvice</span> <span class="token keyword">implements</span> <span class="token class-name">ResponseBodyAdvice</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supports</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converterType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u4E0D\u9700\u8981\u8FDB\u884C\u5C01\u88C5\u7684\uFF0C\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E9B\u6821\u9A8C\u624B\u6BB5\uFF0C\u6BD4\u5982\u6DFB\u52A0\u6807\u8BB0\u6392\u9664\u7684\u6CE8\u89E3</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">beforeBodyWrite</span><span class="token punctuation">(</span><span class="token class-name">Object</span> body<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">MediaType</span> selectedContentType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> selectedConverterType<span class="token punctuation">,</span> <span class="token class-name">ServerHttpRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerHttpResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u63D0\u4F9B\u4E00\u5B9A\u7684\u7075\u6D3B\u5EA6\uFF0C\u5982\u679Cbody\u5DF2\u7ECF\u88AB\u5305\u88C5\u4E86\uFF0C\u5C31\u4E0D\u8FDB\u884C\u5305\u88C5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>body <span class="token keyword">instanceof</span> <span class="token class-name">Result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> body<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ECF\u8FC7\u8FD9\u6837\u6539\u9020\uFF0C\u65E2\u80FD\u5B9E\u73B0\u5BF9 Controller \u8FD4\u56DE\u7684\u6570\u636E\u8FDB\u884C\u7EDF\u4E00\u5305\u88C5\uFF0C\u53C8\u4E0D\u9700\u8981\u5BF9\u539F\u6709\u4EE3\u7801\u8FDB\u884C\u5927\u91CF\u7684\u6539\u52A8</p><h3 id="\u5904\u7406-cannot-be-cast-to-java-lang-string-\u95EE\u9898" tabindex="-1"><a class="header-anchor" href="#\u5904\u7406-cannot-be-cast-to-java-lang-string-\u95EE\u9898" aria-hidden="true">#</a> \u5904\u7406 cannot be cast to java.lang.String \u95EE\u9898</h3><p>\u5982\u679C\u76F4\u63A5\u4F7F\u7528 <code>ResponseBodyAdvice</code>\uFF0C\u5BF9\u4E8E\u4E00\u822C\u7684\u7C7B\u578B\u90FD\u6CA1\u6709\u95EE\u9898\uFF0C\u5F53\u5904\u7406\u5B57\u7B26\u4E32\u7C7B\u578B\u65F6\uFF0C\u4F1A\u629B\u51FA <code>xxx.\u5305\u88C5\u7C7B cannot be cast to java.lang.String</code> \u7684\u7C7B\u578B\u8F6C\u6362\u7684\u5F02\u5E38</p><p>\u5728 <code>ResponseBodyAdvice</code> \u5B9E\u73B0\u7C7B\u4E2D debug \u53D1\u73B0\uFF0C\u53EA\u6709 String \u7C7B\u578B\u7684 <code>selectedConverterType</code> \u53C2\u6570\u503C\u662F <code>org.springframework.http.converter.StringHttpMessageConverter</code>\uFF0C\u800C\u5176\u4ED6\u6570\u636E\u7C7B\u578B\u7684\u503C\u662F <code>org.springframework.http.converter.json.MappingJackson2HttpMessageConverter</code></p><ul><li>String \u7C7B\u578B</li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220725002350.png" alt=""></p><ul><li>\u5176\u4ED6\u7C7B\u578B (\u5982 Integer \u7C7B\u578B)</li></ul><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220725002504.png" alt=""></p><p>\u73B0\u5728\u95EE\u9898\u5DF2\u7ECF\u8F83\u4E3A\u6E05\u6670\u4E86\uFF0C\u56E0\u4E3A\u6211\u4EEC\u9700\u8981\u8FD4\u56DE\u4E00\u4E2A <code>Result</code> \u5BF9\u8C61</p><p>\u6240\u4EE5\u4F7F\u7528 <code>MappingJackson2HttpMessageConverter</code> \u662F\u53EF\u4EE5\u6B63\u5E38\u8F6C\u6362\u7684</p><p>\u800C\u4F7F\u7528 <code>StringHttpMessageConverter</code> \u5B57\u7B26\u4E32\u8F6C\u6362\u5668\u4F1A\u5BFC\u81F4\u7C7B\u578B\u8F6C\u6362\u5931\u8D25</p><hr><p>\u73B0\u5728\u5904\u7406\u8FD9\u4E2A\u95EE\u9898\u6709\u4E24\u79CD\u65B9\u5F0F</p><ol><li><p>\u5728 <code>beforeBodyWrite</code> \u65B9\u6CD5\u5904\u8FDB\u884C\u5224\u65AD\uFF0C\u5982\u679C\u8FD4\u56DE\u503C\u662F String \u7C7B\u578B\u5C31\u5BF9 <code>Result</code> \u5BF9\u8C61\u624B\u52A8\u8FDB\u884C\u8F6C\u6362\u6210 JSON \u5B57\u7B26\u4E32\uFF0C\u53E6\u5916\u65B9\u4FBF\u524D\u7AEF\u4F7F\u7528\uFF0C\u6700\u597D\u5728 <code>@RequestMapping</code> \u4E2D\u6307\u5B9A ContentType</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestControllerAdvice</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.example.demo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ResponseAdvice</span> <span class="token keyword">implements</span> <span class="token class-name">ResponseBodyAdvice</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">beforeBodyWrite</span><span class="token punctuation">(</span><span class="token class-name">Object</span> body<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> returnType<span class="token punctuation">,</span> <span class="token class-name">MediaType</span> selectedContentType<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> selectedConverterType<span class="token punctuation">,</span> <span class="token class-name">ServerHttpRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">ServerHttpResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u63D0\u4F9B\u4E00\u5B9A\u7684\u7075\u6D3B\u5EA6\uFF0C\u5982\u679Cbody\u5DF2\u7ECF\u88AB\u5305\u88C5\u4E86\uFF0C\u5C31\u4E0D\u8FDB\u884C\u5305\u88C5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>body <span class="token keyword">instanceof</span> <span class="token class-name">Result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> body<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// \u5982\u679C\u8FD4\u56DE\u503C\u662FString\u7C7B\u578B\uFF0C\u90A3\u5C31\u624B\u52A8\u628AResult\u5BF9\u8C61\u8F6C\u6362\u6210JSON\u5B57\u7B26\u4E32</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>body <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span><span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/returnString&quot;</span><span class="token punctuation">,</span> produces <span class="token operator">=</span> <span class="token string">&quot;application/json; charset=UTF-8&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">returnString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>\u4FEE\u6539 <code>HttpMessageConverter</code> \u5B9E\u4F8B\u96C6\u5408\u4E2D <code>MappingJackson2HttpMessageConverter</code> \u7684\u987A\u5E8F\u3002\u56E0\u4E3A\u53D1\u751F\u4E0A\u8FF0\u95EE\u9898\u7684\u6839\u6E90\u6240\u5728\u662F\u96C6\u5408\u4E2D <code>StringHttpMessageConverter</code> \u7684\u987A\u5E8F\u5148\u4E8E <code>MappingJackson2HttpMessageConverter</code> \u7684\uFF0C\u8C03\u6574\u987A\u5E8F\u540E\u5373\u53EF\u4ECE\u6839\u6E90\u4E0A\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898</p><ul><li>\u7F51\u4E0A\u6709\u4E0D\u5C11\u505A\u6CD5\u662F\u76F4\u63A5\u5728\u96C6\u5408\u4E2D\u7B2C\u4E00\u4F4D\u6DFB\u52A0 <code>MappingJackson2HttpMessageConverter</code></li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
    
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u8BDA\u7136\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u53EF\u4EE5\u89E3\u51B3\u95EE\u9898\uFF0C\u4F46\u5176\u5B9E\u95EE\u9898\u7684\u6839\u6E90\u4E0D\u662F\u96C6\u5408\u4E2D\u7F3A\u5C11\u8FD9\u4E00\u4E2A\u8F6C\u6362\u5668\uFF0C\u800C\u662F\u8F6C\u6362\u5668\u7684\u987A\u5E8F\u5BFC\u81F4\u7684\uFF0C\u6240\u4EE5\u6700\u5408\u7406\u7684\u505A\u6CD5\u5E94\u8BE5\u662F\u8C03\u6574 <code>MappingJackson2HttpMessageConverter</code> \u5728\u96C6\u5408\u4E2D\u7684\u987A\u5E8F</li></ul><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebMvcConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u4EA4\u6362MappingJackson2HttpMessageConverter\u4E0E\u7B2C\u4E00\u4F4D\u5143\u7D20
     * \u8BA9\u8FD4\u56DE\u503C\u7C7B\u578B\u4E3AString\u7684\u63A5\u53E3\u80FD\u6B63\u5E38\u8FD4\u56DE\u5305\u88C5\u7ED3\u679C
     *
     * <span class="token keyword">@param</span> <span class="token parameter">converters</span> initially an empty list of converters
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> converters<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>converters<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">instanceof</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">MappingJackson2HttpMessageConverter</span> mappingJackson2HttpMessageConverter <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">)</span> converters<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
                converters<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> converters<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                converters<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> mappingJackson2HttpMessageConverter<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="\u53C2\u6570\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570\u6821\u9A8C" aria-hidden="true">#</a> \u53C2\u6570\u6821\u9A8C</h3><p>Java API \u7684\u89C4\u8303 <code>JSR303</code> \u5B9A\u4E49\u4E86\u6821\u9A8C\u7684\u6807\u51C6 <code>validation-api</code> \uFF0C\u5176\u4E2D\u4E00\u4E2A\u6BD4\u8F83\u51FA\u540D\u7684\u5B9E\u73B0\u662F <code>hibernate validation</code> \uFF0C<code>spring validation</code> \u662F\u5BF9\u5176\u7684\u4E8C\u6B21\u5C01\u88C5\uFF0C\u5E38\u7528\u4E8E SpringMVC \u7684\u53C2\u6570\u81EA\u52A8\u6821\u9A8C\uFF0C\u53C2\u6570\u6821\u9A8C\u7684\u4EE3\u7801\u5C31\u4E0D\u9700\u8981\u518D\u4E0E\u4E1A\u52A1\u903B\u8F91\u4EE3\u7801\u8FDB\u884C\u8026\u5408\u4E86</p><h4 id="pathvariable-\u548C-requestparam-\u53C2\u6570\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#pathvariable-\u548C-requestparam-\u53C2\u6570\u6821\u9A8C" aria-hidden="true">#</a> @PathVariable \u548C @RequestParam \u53C2\u6570\u6821\u9A8C</h4><p>Get \u8BF7\u6C42\u7684\u53C2\u6570\u63A5\u6536\u4E00\u822C\u4F9D\u8D56\u8FD9\u4E24\u4E2A\u6CE8\u89E3\uFF0C\u4F46\u662F\u5904\u4E8E url \u6709\u957F\u5EA6\u9650\u5236\u548C\u4EE3\u7801\u7684\u53EF\u7EF4\u62A4\u6027\uFF0C\u8D85\u8FC7 5 \u4E2A\u53C2\u6570\u5C3D\u91CF\u7528\u5B9E\u4F53\u6765\u4F20\u53C2</p><p>\u5BF9 @PathVariable \u548C @RequestParam \u53C2\u6570\u8FDB\u884C\u6821\u9A8C\u9700\u8981\u5728\u5165\u53C2\u58F0\u660E\u7EA6\u675F\u7684\u6CE8\u89E3</p><p>\u5982\u679C\u6821\u9A8C\u5931\u8D25\uFF0C\u4F1A\u629B\u51FA <code>MethodArgumentNotValidException</code> \u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;prettyTestController&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/pretty&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Validated</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/{num}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">detail</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;num&quot;</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Min</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token annotation punctuation">@Max</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> num<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/getByEmail&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">TestDTO</span> <span class="token function">getByAccount</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span> <span class="token annotation punctuation">@NotBlank</span> <span class="token annotation punctuation">@Email</span> <span class="token class-name">String</span> email<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">TestDTO</span> testDTO <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TestDTO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        testDTO<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> testDTO<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTestService</span><span class="token punctuation">(</span><span class="token class-name">TestService</span> prettyTestService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>testService <span class="token operator">=</span> prettyTestService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6821\u9A8C\u539F\u7406" tabindex="-1"><a class="header-anchor" href="#\u6821\u9A8C\u539F\u7406" aria-hidden="true">#</a> \u6821\u9A8C\u539F\u7406</h4><p>\u5728 SpringMVC \u4E2D\uFF0C\u6709\u4E00\u4E2A\u7C7B\u662F <code>RequestResponseBodyMethodProcessor</code> \uFF0C\u8FD9\u4E2A\u7C7B\u6709\u4E24\u4E2A\u4F5C\u7528\uFF08\u5B9E\u9645\u4E0A\u53EF\u4EE5\u4ECE\u540D\u5B57\u4E0A\u5F97\u5230\u4E00\u70B9\u542F\u53D1\uFF09</p><ol><li>\u7528\u4E8E\u89E3\u6790 @RequestBody \u6807\u6CE8\u7684\u53C2\u6570</li><li>\u5904\u7406 @ResponseBody \u6807\u6CE8\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C</li></ol><p>\u89E3\u6790 @RequestBoyd \u6807\u6CE8\u53C2\u6570\u7684\u65B9\u6CD5\u662F <code>resolveArgument</code></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractMessageConverterMethodProcessor</span> <span class="token punctuation">{</span>
		<span class="token doc-comment comment">/**
     * Throws MethodArgumentNotValidException if validation fails.
     * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">HttpMessageNotReadableException</span></span> if <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">RequestBody</span><span class="token punctuation">#</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * is <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token boolean">true</span></span></span><span class="token punctuation">}</span> and there is no body content or if there is no suitable
     * converter to read the content with.
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">resolveArgument</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">ModelAndViewContainer</span> mavContainer<span class="token punctuation">,</span>
        <span class="token class-name">NativeWebRequest</span> webRequest<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">WebDataBinderFactory</span> binderFactory<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>

      parameter <span class="token operator">=</span> parameter<span class="token punctuation">.</span><span class="token function">nestedIfOptional</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//\u628A\u8BF7\u6C42\u6570\u636E\u5C01\u88C5\u6210\u6807\u6CE8\u7684DTO\u5BF9\u8C61</span>
      <span class="token class-name">Object</span> arg <span class="token operator">=</span> <span class="token function">readWithMessageConverters</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">,</span> parameter<span class="token punctuation">,</span> parameter<span class="token punctuation">.</span><span class="token function">getNestedGenericParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token class-name">Conventions</span><span class="token punctuation">.</span><span class="token function">getVariableNameForParameter</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span>binderFactory <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WebDataBinder</span> binder <span class="token operator">=</span> binderFactory<span class="token punctuation">.</span><span class="token function">createBinder</span><span class="token punctuation">(</span>webRequest<span class="token punctuation">,</span> arg<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>arg <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">//\u6267\u884C\u6570\u636E\u6821\u9A8C</span>
          <span class="token function">validateIfApplicable</span><span class="token punctuation">(</span>binder<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token comment">//\u5982\u679C\u6821\u9A8C\u4E0D\u901A\u8FC7\uFF0C\u5C31\u629B\u51FAMethodArgumentNotValidException\u5F02\u5E38</span>
          <span class="token comment">//\u5982\u679C\u6211\u4EEC\u4E0D\u81EA\u5DF1\u6355\u83B7\uFF0C\u90A3\u4E48\u6700\u7EC8\u4F1A\u7531DefaultHandlerExceptionResolver\u6355\u83B7\u5904\u7406</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>binder<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isBindExceptionRequired</span><span class="token punctuation">(</span>binder<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">(</span>parameter<span class="token punctuation">,</span> binder<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>mavContainer <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          mavContainer<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token class-name">BindingResult</span><span class="token punctuation">.</span>MODEL_KEY_PREFIX <span class="token operator">+</span> name<span class="token punctuation">,</span> binder<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">return</span> <span class="token function">adaptArgumentIfNecessary</span><span class="token punctuation">(</span>arg<span class="token punctuation">,</span> parameter<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbstractMessageConverterMethodArgumentResolver</span> <span class="token keyword">implements</span> <span class="token class-name">HandlerMethodArgumentResolver</span> <span class="token punctuation">{</span>
  <span class="token doc-comment comment">/**
	 * Validate the binding target if applicable.
	 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>The default implementation checks for <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@javax.validation.Valid</span></span></span><span class="token punctuation">}</span>,
	 * Spring&#39;s <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Validated</span></span><span class="token punctuation">}</span>,
	 * and custom annotations whose name starts with &quot;Valid&quot;.
	 * <span class="token keyword">@param</span> <span class="token parameter">binder</span> the DataBinder to be used
	 * <span class="token keyword">@param</span> <span class="token parameter">parameter</span> the method parameter descriptor
	 * <span class="token keyword">@since</span> 4.1.5
	 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">isBindExceptionRequired</span></span>
	 */</span>
	<span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">validateIfApplicable</span><span class="token punctuation">(</span><span class="token class-name">WebDataBinder</span> binder<span class="token punctuation">,</span> <span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u83B7\u53D6\u53C2\u6570\u4E0A\u7684\u6240\u6709\u6CE8\u89E3</span>
		<span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span> annotations <span class="token operator">=</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Annotation</span> ann <span class="token operator">:</span> annotations<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">//\u5982\u679C\u6CE8\u89E3\u4E2D\u5305\u542B\u4E86@Valid\u3001@Validated\u6216\u8005\u662F\u540D\u5B57\u4EE5Valid\u5F00\u5934\u7684\u6CE8\u89E3\u5C31\u8FDB\u884C\u53C2\u6570\u6821\u9A8C</span>
			<span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> validationHints <span class="token operator">=</span> <span class="token class-name">ValidationAnnotationUtils</span><span class="token punctuation">.</span><span class="token function">determineValidationHints</span><span class="token punctuation">(</span>ann<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>validationHints <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5B9E\u9645\u6821\u9A8C\u903B\u8F91\uFF0C\u6700\u7EC8\u4F1A\u8C03\u7528Hibernate Validator\u6267\u884C\u771F\u6B63\u7684\u6821\u9A8C</span>
        <span class="token comment">//\u6240\u4EE5Spring Validation\u662F\u5BF9Hibernate Validation\u7684\u4E8C\u6B21\u5C01\u88C5</span>
				binder<span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span>validationHints<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">break</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="requestbody-\u53C2\u6570\u6821\u9A8C" tabindex="-1"><a class="header-anchor" href="#requestbody-\u53C2\u6570\u6821\u9A8C" aria-hidden="true">#</a> @RequestBody \u53C2\u6570\u6821\u9A8C</h4><p>Post\u3001Put \u8BF7\u6C42\u7684\u53C2\u6570\u63A8\u8350\u4F7F\u7528 @RequestBody \u8BF7\u6C42\u4F53\u53C2\u6570</p><p>\u5BF9 @RequestBody \u53C2\u6570\u8FDB\u884C\u6821\u9A8C\u9700\u8981\u5728 DTO \u5BF9\u8C61\u4E2D\u52A0\u5165\u6821\u9A8C\u6761\u4EF6\u540E\uFF0C\u518D\u642D\u914D @Validated \u5373\u53EF\u5B8C\u6210\u81EA\u52A8\u6821\u9A8C</p><p>\u5982\u679C\u6821\u9A8C\u5931\u8D25\uFF0C\u4F1A\u629B\u51FA <code>ConstraintViolationException</code> \u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//DTO</span>
<span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestDTO</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@NotBlank</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotBlank</span>
    <span class="token annotation punctuation">@Length</span><span class="token punctuation">(</span>min <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">,</span> max <span class="token operator">=</span> <span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> password<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@NotNull</span>
    <span class="token annotation punctuation">@Email</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> email<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//Controller</span>
<span class="token annotation punctuation">@RestController</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;prettyTestController&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/pretty&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">TestService</span> testService<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test-validation&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testValidation</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token annotation punctuation">@Validated</span> <span class="token class-name">TestDTO</span> testDTO<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>testService<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>testDTO<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setTestService</span><span class="token punctuation">(</span><span class="token class-name">TestService</span> testService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>testService <span class="token operator">=</span> testService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u6821\u9A8C\u539F\u7406-1" tabindex="-1"><a class="header-anchor" href="#\u6821\u9A8C\u539F\u7406-1" aria-hidden="true">#</a> \u6821\u9A8C\u539F\u7406</h4><p>\u58F0\u660E\u7EA6\u675F\u7684\u65B9\u5F0F\uFF0C\u6CE8\u89E3\u52A0\u5230\u4E86\u53C2\u6570\u4E0A\u9762\uFF0C\u53EF\u4EE5\u6BD4\u8F83\u5BB9\u6613\u731C\u6D4B\u5230\u662F\u4F7F\u7528\u4E86 AOP \u5BF9\u65B9\u6CD5\u8FDB\u884C\u589E\u5F3A</p><p>\u800C\u5B9E\u9645\u4E0A Spring \u4E5F\u662F\u901A\u8FC7 <code>MethodValidationPostProcessor</code> \u52A8\u6001\u6CE8\u518C AOP \u5207\u9762\uFF0C\u7136\u540E\u4F7F\u7528 <code>MethodValidationInterceptor</code> \u5BF9\u5207\u70B9\u65B9\u6CD5\u8FDB\u884C\u7EC7\u5165\u589E\u5F3A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodValidationPostProcessor</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractBeanFactoryAwareAdvisingPostProcessor</span> <span class="token keyword">implements</span> <span class="token class-name">InitializingBean</span> <span class="token punctuation">{</span>
  
    <span class="token comment">//\u6307\u5B9A\u4E86\u521B\u5EFA\u5207\u9762\u7684Bean\u7684\u6CE8\u89E3</span>
  	<span class="token keyword">private</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Annotation</span><span class="token punctuation">&gt;</span></span> validatedAnnotationType <span class="token operator">=</span> <span class="token class-name">Validated</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">;</span>
  
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterPropertiesSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u4E3A\u6240\u6709@Validated\u6807\u6CE8\u7684Bean\u521B\u5EFA\u5207\u9762</span>
        <span class="token class-name">Pointcut</span> pointcut <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationMatchingPointcut</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validatedAnnotationType<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u521B\u5EFAAdvisor\u8FDB\u884C\u589E\u5F3A</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>advisor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultPointcutAdvisor</span><span class="token punctuation">(</span>pointcut<span class="token punctuation">,</span> <span class="token function">createMethodValidationAdvice</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>validator<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">//\u521B\u5EFAAdvice\uFF0C\u672C\u8D28\u5C31\u662F\u4E00\u4E2A\u65B9\u6CD5\u62E6\u622A\u5668</span>
    <span class="token keyword">protected</span> <span class="token class-name">Advice</span> <span class="token function">createMethodValidationAdvice</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Validator</span> validator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>validator <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">MethodValidationInterceptor</span><span class="token punctuation">(</span>validator<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">MethodValidationInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodValidationInterceptor</span> <span class="token keyword">implements</span> <span class="token class-name">MethodInterceptor</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">MethodInvocation</span> invocation<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u65E0\u9700\u589E\u5F3A\u7684\u65B9\u6CD5\uFF0C\u76F4\u63A5\u8DF3\u8FC7</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isFactoryBeanMetadataMethod</span><span class="token punctuation">(</span>invocation<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      
        <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> groups <span class="token operator">=</span> <span class="token function">determineValidationGroups</span><span class="token punctuation">(</span>invocation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ExecutableValidator</span> execVal <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>validator<span class="token punctuation">.</span><span class="token function">forExecutables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Method</span> methodToValidate <span class="token operator">=</span> invocation<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConstraintViolation</span><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> result<span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">//\u65B9\u6CD5\u5165\u53C2\u6821\u9A8C\uFF0C\u6700\u7EC8\u8FD8\u662F\u59D4\u6258\u7ED9Hibernate Validator\u6765\u6821\u9A8C</span>
	          <span class="token comment">//\u6240\u4EE5Spring Validation\u662F\u5BF9Hibernate Validation\u7684\u4E8C\u6B21\u5C01\u88C5</span>
            result <span class="token operator">=</span> execVal<span class="token punctuation">.</span><span class="token function">validateParameters</span><span class="token punctuation">(</span>
                invocation<span class="token punctuation">.</span><span class="token function">getThis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodToValidate<span class="token punctuation">,</span> invocation<span class="token punctuation">.</span><span class="token function">getArguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> groups<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalArgumentException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//\u6821\u9A8C\u4E0D\u901A\u8FC7\u629B\u51FAConstraintViolationException\u5F02\u5E38</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConstraintViolationException</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//Controller\u65B9\u6CD5\u8C03\u7528</span>
        <span class="token class-name">Object</span> returnValue <span class="token operator">=</span> invocation<span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u4E0B\u9762\u662F\u5BF9\u8FD4\u56DE\u503C\u505A\u6821\u9A8C\uFF0C\u6D41\u7A0B\u548C\u4E0A\u9762\u5927\u6982\u4E00\u6837</span>
        result <span class="token operator">=</span> execVal<span class="token punctuation">.</span><span class="token function">validateReturnValue</span><span class="token punctuation">(</span>invocation<span class="token punctuation">.</span><span class="token function">getThis</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> methodToValidate<span class="token punctuation">,</span> returnValue<span class="token punctuation">,</span> groups<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>result<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">ConstraintViolationException</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> returnValue<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="\u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219</h4><p>\u6709\u4E9B\u65F6\u5019 <code>JSR303</code> \u6807\u51C6\u4E2D\u63D0\u4F9B\u7684\u6821\u9A8C\u89C4\u5219\u4E0D\u6EE1\u8DB3\u590D\u6742\u7684\u4E1A\u52A1\u9700\u6C42\uFF0C\u4E5F\u53EF\u4EE5\u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219</p><p>\u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219\u9700\u8981\u505A\u4E24\u4EF6\u4E8B\u60C5</p><ol><li>\u81EA\u5B9A\u4E49\u6CE8\u89E3\u7C7B\uFF0C\u5B9A\u4E49\u9519\u8BEF\u4FE1\u606F\u548C\u4E00\u4E9B\u5176\u4ED6\u9700\u8981\u7684\u5185\u5BB9</li><li>\u6CE8\u89E3\u6821\u9A8C\u5668\uFF0C\u5B9A\u4E49\u5224\u5B9A\u89C4\u5219</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u81EA\u5B9A\u4E49\u6CE8\u89E3\u7C7B</span>
<span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span>METHOD<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>FIELD<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>ANNOTATION_TYPE<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>CONSTRUCTOR<span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span>PARAMETER<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span>RUNTIME<span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token annotation punctuation">@Constraint</span><span class="token punctuation">(</span>validatedBy <span class="token operator">=</span> <span class="token class-name">MobileValidator</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Mobile</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * \u662F\u5426\u5141\u8BB8\u4E3A\u7A7A
     */</span>
    <span class="token keyword">boolean</span> <span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token boolean">true</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * \u6821\u9A8C\u4E0D\u901A\u8FC7\u8FD4\u56DE\u7684\u63D0\u793A\u4FE1\u606F
     */</span>
    <span class="token class-name">String</span> <span class="token function">message</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;\u4E0D\u662F\u4E00\u4E2A\u624B\u673A\u53F7\u7801\u683C\u5F0F&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * Constraint\u8981\u6C42\u7684\u5C5E\u6027\uFF0C\u7528\u4E8E\u5206\u7EC4\u6821\u9A8C\u548C\u6269\u5C55\uFF0C\u7559\u7A7A\u5C31\u597D
     */</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">groups</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Payload</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u6CE8\u89E3\u6821\u9A8C\u5668</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MobileValidator</span> <span class="token keyword">implements</span> <span class="token class-name">ConstraintValidator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Mobile</span><span class="token punctuation">,</span> <span class="token class-name">CharSequence</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token string">&quot;^1[34578][0-9]{9}$&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u9A8C\u8BC1\u624B\u673A\u53F7</span>

    <span class="token doc-comment comment">/**
     * \u5728\u9A8C\u8BC1\u5F00\u59CB\u524D\u8C03\u7528\u6CE8\u89E3\u91CC\u7684\u65B9\u6CD5\uFF0C\u4ECE\u800C\u83B7\u53D6\u5230\u4E00\u4E9B\u6CE8\u89E3\u91CC\u7684\u53C2\u6570
     *
     * <span class="token keyword">@param</span> <span class="token parameter">constraintAnnotation</span> annotation instance for a given constraint declaration
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">initialize</span><span class="token punctuation">(</span><span class="token class-name">Mobile</span> constraintAnnotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>required <span class="token operator">=</span> constraintAnnotation<span class="token punctuation">.</span><span class="token function">required</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u5224\u65AD\u53C2\u6570\u662F\u5426\u5408\u6CD5
     *
     * <span class="token keyword">@param</span> <span class="token parameter">value</span>   object to validate
     * <span class="token keyword">@param</span> <span class="token parameter">context</span> context in which the constraint is evaluated
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isValid</span><span class="token punctuation">(</span><span class="token class-name">CharSequence</span> value<span class="token punctuation">,</span> <span class="token class-name">ConstraintValidatorContext</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>required<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u9A8C\u8BC1</span>
            <span class="token keyword">return</span> <span class="token function">isMobile</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u9A8C\u8BC1</span>
            <span class="token keyword">return</span> <span class="token function">isMobile</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">boolean</span> <span class="token function">isMobile</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">CharSequence</span> str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Matcher</span> m <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> m<span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u81EA\u52A8\u6821\u9A8C\u53C2\u6570\u771F\u7684\u662F\u4E00\u9879\u975E\u5E38\u5FC5\u8981\u3001\u975E\u5E38\u6709\u610F\u4E49\u7684\u5DE5\u4F5C\u3002 <code>JSR303</code> \u63D0\u4F9B\u4E86\u4E30\u5BCC\u7684\u53C2\u6570\u6821\u9A8C\u89C4\u5219\uFF0C\u518D\u52A0\u4E0A\u590D\u6742\u4E1A\u52A1\u7684\u81EA\u5B9A\u4E49\u6821\u9A8C\u89C4\u5219\uFF0C\u5B8C\u5168\u628A\u53C2\u6570\u6821\u9A8C\u548C\u4E1A\u52A1\u903B\u8F91\u89E3\u8026\u5F00\uFF0C\u4EE3\u7801\u66F4\u52A0\u7B80\u6D01\uFF0C\u7B26\u5408\u5355\u4E00\u804C\u8D23\u539F\u5219\u3002</p>`,60),k=a("\u66F4\u591A\u5173\u4E8E Spring \u53C2\u6570\u6821\u9A8C\u8BF7\u53C2\u8003\uFF1A"),r={href:"https://juejin.cn/post/6856541106626363399",target:"_blank",rel:"noopener noreferrer"},d=a("Spring Validation\u6700\u4F73\u5B9E\u8DF5\u53CA\u5176\u5B9E\u73B0\u539F\u7406\uFF0C\u53C2\u6570\u6821\u9A8C\u6CA1\u90A3\u4E48\u7B80\u5355\uFF01"),v=s(`<h3 id="\u81EA\u5B9A\u4E49\u5F02\u5E38\u4E0E\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u5F02\u5E38\u4E0E\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u5F02\u5E38\u4E0E\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38</h3><p>\u539F\u6765\u7684\u4EE3\u7801\u4E2D\u53EF\u4EE5\u770B\u5230\u6709\u51E0\u4E2A\u95EE\u9898</p><ol><li>\u629B\u51FA\u7684\u5F02\u5E38\u4E0D\u591F\u5177\u4F53\uFF0C\u53EA\u662F\u7B80\u5355\u5730\u628A\u9519\u8BEF\u4FE1\u606F\u653E\u5230\u4E86 Exception \u4E2D</li><li>\u629B\u51FA\u5F02\u5E38\u540E\uFF0CController \u4E0D\u80FD\u5177\u4F53\u5730\u6839\u636E\u5F02\u5E38\u505A\u51FA\u53CD\u9988</li><li>\u867D\u7136\u505A\u4E86\u53C2\u6570\u81EA\u52A8\u6821\u9A8C\uFF0C\u4F46\u662F\u5F02\u5E38\u8FD4\u56DE\u7ED3\u6784\u548C\u6B63\u5E38\u8FD4\u56DE\u7ED3\u6784\u4E0D\u4E00\u81F4</li></ol><p>\u81EA\u5B9A\u4E49\u5F02\u5E38\u662F\u4E3A\u4E86\u540E\u9762\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38\u65F6\uFF0C\u5BF9\u4E1A\u52A1\u4E2D\u7684\u5F02\u5E38\u6709\u66F4\u52A0\u7EC6\u9897\u7C92\u5EA6\u7684\u533A\u5206\uFF0C\u62E6\u622A\u65F6\u9488\u5BF9\u4E0D\u540C\u7684\u5F02\u5E38\u4F5C\u51FA\u4E0D\u540C\u7684\u54CD\u5E94</p><p>\u800C\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38\u7684\u76EE\u7684\u4E00\u4E2A\u662F\u4E3A\u4E86\u53EF\u4EE5\u4E0E\u524D\u9762\u5B9A\u4E49\u4E0B\u6765\u7684\u7EDF\u4E00\u5305\u88C5\u8FD4\u56DE\u7ED3\u6784\u80FD\u5BF9\u5E94\u4E0A\uFF0C\u53E6\u4E00\u4E2A\u662F\u6211\u4EEC\u5E0C\u671B\u65E0\u8BBA\u7CFB\u7EDF\u53D1\u751F\u4EC0\u4E48\u5F02\u5E38\uFF0CHttp \u7684\u72B6\u6001\u7801\u90FD\u8981\u662F 200 \uFF0C\u5C3D\u53EF\u80FD\u7531\u4E1A\u52A1\u6765\u533A\u5206\u7CFB\u7EDF\u7684\u5F02\u5E38</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u81EA\u5B9A\u4E49\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForbiddenException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">ForbiddenException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u81EA\u5B9A\u4E49\u5F02\u5E38</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BusinessException</span> <span class="token keyword">extends</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">BusinessException</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u7EDF\u4E00\u62E6\u622A\u5F02\u5E38</span>
<span class="token annotation punctuation">@RestControllerAdvice</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.example.demo&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ExceptionAdvice</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * \u6355\u83B7 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">BusinessException</span></span></span><span class="token punctuation">}</span> \u5F02\u5E38
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">BusinessException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleBusinessException</span><span class="token punctuation">(</span><span class="token class-name">BusinessException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6355\u83B7 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ForbiddenException</span></span></span><span class="token punctuation">}</span> \u5F02\u5E38
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ForbiddenException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleForbiddenException</span><span class="token punctuation">(</span><span class="token class-name">ForbiddenException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>FORBIDDEN<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@RequestBody</span></span></span><span class="token punctuation">}</span> \u53C2\u6570\u6821\u9A8C\u4E0D\u901A\u8FC7\u65F6\u629B\u51FA\u7684\u5F02\u5E38\u5904\u7406
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">MethodArgumentNotValidException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleMethodArgumentNotValidException</span><span class="token punctuation">(</span><span class="token class-name">MethodArgumentNotValidException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">BindingResult</span> bindingResult <span class="token operator">=</span> ex<span class="token punctuation">.</span><span class="token function">getBindingResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;\u6821\u9A8C\u5931\u8D25:&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">FieldError</span> fieldError <span class="token operator">:</span> bindingResult<span class="token punctuation">.</span><span class="token function">getFieldErrors</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fieldError<span class="token punctuation">.</span><span class="token function">getField</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\uFF1A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>fieldError<span class="token punctuation">.</span><span class="token function">getDefaultMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;, &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token class-name">String</span> msg <span class="token operator">=</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>VALIDATE_FAILED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>VALIDATE_FAILED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@PathVariable</span></span></span><span class="token punctuation">}</span> \u548C <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token annotation punctuation">@RequestParam</span></span></span><span class="token punctuation">}</span> \u53C2\u6570\u6821\u9A8C\u4E0D\u901A\u8FC7\u65F6\u629B\u51FA\u7684\u5F02\u5E38\u5904\u7406
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ConstraintViolationException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handleConstraintViolationException</span><span class="token punctuation">(</span><span class="token class-name">ConstraintViolationException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">hasText</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>VALIDATE_FAILED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span><span class="token class-name">ResultEnum</span><span class="token punctuation">.</span>VALIDATE_FAILED<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u9876\u7EA7\u5F02\u5E38\u6355\u83B7\u5E76\u7EDF\u4E00\u5904\u7406\uFF0C\u5F53\u5176\u4ED6\u5F02\u5E38\u65E0\u6CD5\u5904\u7406\u65F6\u5019\u9009\u62E9\u4F7F\u7528
     */</span>
    <span class="token annotation punctuation">@ExceptionHandler</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">Result</span><span class="token punctuation">.</span><span class="token function">failed</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a> \u603B\u7ED3</h2><p>\u505A\u597D\u4E86\u8FD9\u4E00\u5207\u6539\u52A8\u540E\uFF0C\u53EF\u4EE5\u53D1\u73B0 Controller \u7684\u4EE3\u7801\u53D8\u5F97\u975E\u5E38\u7B80\u6D01\uFF0C\u53EF\u4EE5\u5F88\u6E05\u695A\u5730\u77E5\u9053\u6BCF\u4E00\u4E2A\u53C2\u6570\u3001\u6BCF\u4E00\u4E2ADTO\u7684\u6821\u9A8C\u89C4\u5219\uFF0C\u53EF\u4EE5\u5F88\u660E\u786E\u5730\u770B\u5230\u6BCF\u4E00\u4E2A Controller \u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4EC0\u4E48\u6570\u636E\uFF0C\u4E5F\u53EF\u4EE5\u65B9\u4FBF\u6BCF\u4E00\u4E2A\u5F02\u5E38\u5E94\u8BE5\u5982\u4F55\u8FDB\u884C\u53CD\u9988</p><p>\u8FD9\u4E00\u5957\u64CD\u4F5C\u4E0B\u6765\u540E\uFF0C\u6211\u4EEC\u80FD\u66F4\u52A0\u4E13\u6CE8\u4E8E\u4E1A\u52A1\u903B\u8F91\u7684\u5F00\u53D1\uFF0C\u4EE3\u7801\u7B80\u6D01\u3001\u529F\u80FD\u5B8C\u5584\uFF0C\u4F55\u4E50\u800C\u4E0D\u4E3A\u5462\uFF1F</p>`,9);function m(b,g){const t=e("ExternalLinkIcon");return o(),c("div",null,[u,n("p",null,[k,n("a",r,[d,l(t)])]),v])}var f=p(i,[["render",m],["__file","pretty-controller.html.vue"]]);export{f as default};
