const t=JSON.parse('{"key":"v-c3b9aa42","path":"/writings/pattern/chain-of-responsibility.html","title":"责任链模式","lang":"zh-CN","frontmatter":{"title":"责任链模式","icon":"article","category":["设计模式"],"description":"责任链模式 定义：将链中每一个结点看作一个对象，每个节点处理的请求均不相同，且内部自动维护一个下一结点的对象。每一个请求从链式的首端发出时，会沿着链的路径依次传递给每一个结点对象，直到有对象处理这个请求为止 本质：把请求和处理解耦，可以让请求在处理链中传递，最后被处理 适用场景： 多个对象可以处理同一请求，但具体由哪个对象处理则要在运行时动态决定 在不明确指定接受者的情况下，向多个对象中的一个提交一次请求 可动态指定一组对象处理请求 优点： 将请求和处理解耦，请求发送者不需要关心链路结构，只需等待结果 节点对象只需关注自己感兴趣的请求进行处理即可，对于不感兴趣的、无法处理的，直接转发到下一个节点对象 易于扩展新的或移除旧的节点对象，动态调整链路结构","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/pattern/chain-of-responsibility.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"责任链模式"}],["meta",{"property":"og:description","content":"责任链模式 定义：将链中每一个结点看作一个对象，每个节点处理的请求均不相同，且内部自动维护一个下一结点的对象。每一个请求从链式的首端发出时，会沿着链的路径依次传递给每一个结点对象，直到有对象处理这个请求为止 本质：把请求和处理解耦，可以让请求在处理链中传递，最后被处理 适用场景： 多个对象可以处理同一请求，但具体由哪个对象处理则要在运行时动态决定 在不明确指定接受者的情况下，向多个对象中的一个提交一次请求 可动态指定一组对象处理请求 优点： 将请求和处理解耦，请求发送者不需要关心链路结构，只需等待结果 节点对象只需关注自己感兴趣的请求进行处理即可，对于不感兴趣的、无法处理的，直接转发到下一个节点对象 易于扩展新的或移除旧的节点对象，动态调整链路结构"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-01T07:27:35.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-01T07:27:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"责任链模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-01T07:27:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"责任链模式在源码中的体现","slug":"责任链模式在源码中的体现","link":"#责任链模式在源码中的体现","children":[{"level":3,"title":"Spring","slug":"spring","link":"#spring","children":[]}]}],"git":{"createdTime":1677655655000,"updatedTime":1677655655000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":3.84,"words":1151},"filePathRelative":"writings/pattern/chain-of-responsibility.md","localizedDate":"2023年3月1日","excerpt":"<h1> 责任链模式</h1>\\n<p>定义：将链中每一个结点看作一个对象，每个节点处理的请求均不相同，且内部自动维护一个下一结点的对象。每一个请求从链式的首端发出时，会沿着链的路径依次传递给每一个结点对象，直到有对象处理这个请求为止</p>\\n<p>本质：把请求和处理解耦，可以让请求在处理链中传递，最后被处理</p>\\n<p>适用场景：</p>\\n<ol>\\n<li>多个对象可以处理同一请求，但具体由哪个对象处理则要在运行时动态决定</li>\\n<li>在不明确指定接受者的情况下，向多个对象中的一个提交一次请求</li>\\n<li>可动态指定一组对象处理请求</li>\\n</ol>\\n<p>优点：</p>\\n<ol>\\n<li>将请求和处理解耦，请求发送者不需要关心链路结构，只需等待结果</li>\\n<li>节点对象只需关注自己感兴趣的请求进行处理即可，对于不感兴趣的、无法处理的，直接转发到下一个节点对象</li>\\n<li>易于扩展新的或移除旧的节点对象，动态调整链路结构</li>\\n</ol>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{t as data};
