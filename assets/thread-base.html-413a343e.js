const a=JSON.parse('{"key":"v-51a3ac40","path":"/writings/concurrency/thread-base.html","title":"Java 线程基本知识","lang":"zh-CN","frontmatter":{"description":"Java 线程基本知识 在 Java 中如何创建线程 继承 Thread 类 public class ThreadTest { public static class ThreadDemo extends Thread { @Override public void run() { System.out.println(\\"ThreadDemo线程运行\\"); } } public static void main(String[] args) { ThreadDemo threadDemo = new ThreadDemo(); threadDemo.start(); } }","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/concurrency/thread-base.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Java 线程基本知识"}],["meta",{"property":"og:description","content":"Java 线程基本知识 在 Java 中如何创建线程 继承 Thread 类 public class ThreadTest { public static class ThreadDemo extends Thread { @Override public void run() { System.out.println(\\"ThreadDemo线程运行\\"); } } public static void main(String[] args) { ThreadDemo threadDemo = new ThreadDemo(); threadDemo.start(); } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-19T09:58:36.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-06-19T09:58:36.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 线程基本知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-19T09:58:36.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"在 Java 中如何创建线程","slug":"在-java-中如何创建线程","link":"#在-java-中如何创建线程","children":[{"level":3,"title":"继承 Thread 类","slug":"继承-thread-类","link":"#继承-thread-类","children":[]},{"level":3,"title":"实现 Runnable 接口","slug":"实现-runnable-接口","link":"#实现-runnable-接口","children":[]},{"level":3,"title":"Thread 和 Runnable 对比","slug":"thread-和-runnable-对比","link":"#thread-和-runnable-对比","children":[]},{"level":3,"title":"Callable + Future","slug":"callable-future","link":"#callable-future","children":[]},{"level":3,"title":"Callable + FutureTask","slug":"callable-futuretask","link":"#callable-futuretask","children":[]}]},{"level":2,"title":"Java 线程的状态及转换","slug":"java-线程的状态及转换","link":"#java-线程的状态及转换","children":[{"level":3,"title":"操作系统中线程状态转换","slug":"操作系统中线程状态转换","link":"#操作系统中线程状态转换","children":[]},{"level":3,"title":"Java 线程的 6 个状态","slug":"java-线程的-6-个状态","link":"#java-线程的-6-个状态","children":[]}]}],"git":{"createdTime":1687168716000,"updatedTime":1687168716000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":2.35,"words":704},"filePathRelative":"writings/concurrency/thread-base.md","localizedDate":"2023年6月19日","excerpt":"<h1> Java 线程基本知识</h1>\\n<h2> 在 Java 中如何创建线程</h2>\\n<h3> 继承 Thread 类</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ThreadTest</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">class</span> <span class=\\"token class-name\\">ThreadDemo</span> <span class=\\"token keyword\\">extends</span> <span class=\\"token class-name\\">Thread</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token annotation punctuation\\">@Override</span>\\n        <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">run</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"ThreadDemo线程运行\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">static</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">String</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span> args<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">ThreadDemo</span> threadDemo <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ThreadDemo</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        threadDemo<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{a as data};
