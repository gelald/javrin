import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as p}from"./app.aa9f976b.js";const t={},e=p(`<h1 id="param-\u6E90\u7801\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#param-\u6E90\u7801\u89E3\u6790" aria-hidden="true">#</a> @Param \u6E90\u7801\u89E3\u6790</h1><p>\u63A5\u4E0B\u6765\u4ECE MyBatis \u6E90\u7801\u4E2D\u5206\u6790 @Param \u81EA\u5B9A\u4E49\u952E\u540D\u7684\u8FC7\u7A0B\uFF0C\u6E90\u7801\u5206\u6790\u8FC7\u7A0B\uFF1A</p><p>SqlSession#getMapper -&gt; MapperProxy#invoke -&gt; MapperMethod#execute -&gt; ParamNameResolver#getNamedParams</p><h2 id="sqlsession" tabindex="-1"><a class="header-anchor" href="#sqlsession" aria-hidden="true">#</a> SqlSession</h2><p>\u5C3D\u7BA1\u73B0\u5728\u5F00\u53D1\u65F6\u90FD\u4E0D\u4F1A\u518D\u5199\u4E0B\u9762\u8FD9\u6837\u7684\u4EE3\u7801\uFF0C\u4F46\u662F\u56DE\u5F52\u6700\u539F\u59CB\u7684\u65B9\u5F0F\u6709\u52A9\u4E8E\u6211\u4EEC\u5206\u6790\u8FC7\u7A0B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token class-name">InputStream</span> inputStream <span class="token operator">=</span> <span class="token class-name">Resources</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;mybatis-config.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SqlSessionFactoryBuilder</span> sqlSessionFactoryBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SqlSessionFactoryBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SqlSessionFactory</span> sqlSessionFactory <span class="token operator">=</span> sqlSessionFactoryBuilder<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>inputStream<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">SqlSession</span> sqlSession <span class="token operator">=</span> sqlSessionFactory<span class="token punctuation">.</span><span class="token function">openSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">UserMapper</span> mapper <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">getMapper</span><span class="token punctuation">(</span><span class="token class-name">UserMapper</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8C03\u7528 <code>getMapper</code> \u65B9\u6CD5\u65F6\u901A\u8FC7\u8FFD\u8E2A\u6E90\u7801\u53D1\u73B0\u662F\u4F7F\u7528\u4EE3\u7406\u6A21\u5F0F\u6765\u521B\u5EFA Mapper \u7684\u4EE3\u7406\u5BF9\u8C61\u7684\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// MapperProxyFactory.class</span>
<span class="token keyword">protected</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mapperProxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token class-name">Proxy</span><span class="token punctuation">.</span><span class="token function">newProxyInstance</span><span class="token punctuation">(</span>mapperInterface<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Class</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> mapperInterface <span class="token punctuation">}</span><span class="token punctuation">,</span> mapperProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">newInstance</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">final</span> <span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> mapperProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> mapperInterface<span class="token punctuation">,</span> methodCache<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">newInstance</span><span class="token punctuation">(</span>mapperProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mapperproxy" tabindex="-1"><a class="header-anchor" href="#mapperproxy" aria-hidden="true">#</a> MapperProxy</h2><p>\u5176\u4E2D MapperProxy \u5C31\u662F\u4EE3\u7406 Mapper \u7684\u4EE3\u7406\u7C7B\uFF0C\u6CDB\u578B\u4EE3\u8868\u5177\u4F53\u7684 Mapper \u7C7B\u578B\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapperProxy</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">InvocationHandler</span><span class="token punctuation">,</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
  
  <span class="token annotation punctuation">@Override</span>
  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">getDeclaringClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> method<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8C03\u7528\u65B9\u6CD5\u7684\u5BF9\u8C61\u4E00\u822C\u90FD\u4F1A\u662F\u5177\u4F53\u7684 Mapper \u5BF9\u8C61</span>
      <span class="token keyword">return</span> <span class="token function">cachedInvoker</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>proxy<span class="token punctuation">,</span> method<span class="token punctuation">,</span> args<span class="token punctuation">,</span> sqlSession<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">private</span> <span class="token class-name">MapperMethodInvoker</span> <span class="token function">cachedInvoker</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token class-name">MapUtil</span><span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>methodCache<span class="token punctuation">,</span> method<span class="token punctuation">,</span> m <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>m<span class="token punctuation">.</span><span class="token function">isDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5982\u679C\u65B9\u6CD5\u88AB defalut \u4FEE\u9970\u8D70\u7684\u903B\u8F91\uFF0C\u4E00\u822C Mapper \u4E2D\u90FD\u5199\u62BD\u8C61\u65B9\u6CD5</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5176\u4E2D PlainMethodInvoker \u662F MapperProxy \u7684\u4E00\u4E2A\u5185\u90E8\u7C7B\uFF0C\u8D1F\u8D23\u8FDB\u4E00\u6B65\u4EE3\u7406\u65B9\u6CD5\u7684\u6267\u884C</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">PlainMethodInvoker</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MapperMethod</span><span class="token punctuation">(</span>mapperInterface<span class="token punctuation">,</span> method<span class="token punctuation">,</span> sqlSession<span class="token punctuation">.</span><span class="token function">getConfiguration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">PlainMethodInvoker</span> <span class="token keyword">implements</span> <span class="token class-name">MapperMethodInvoker</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Object</span> proxy<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">,</span> <span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Throwable</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> mapperMethod<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mappermethod" tabindex="-1"><a class="header-anchor" href="#mappermethod" aria-hidden="true">#</a> MapperMethod</h2><p>MapperMethod \u662F\u5177\u4F53\u4E3A Mapper \u65B9\u6CD5\u6267\u884C\u589E\u5F3A\u7684\u5BF9\u8C61\uFF0C\u589E\u5F3A\u903B\u8F91\u90FD\u5728\u8FD9\u4E2A\u7C7B\u4E2D\u5B9E\u73B0\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MapperMethod</span> <span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">SqlSession</span> sqlSession<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Object</span> result<span class="token punctuation">;</span>
    <span class="token comment">// switch-case \u4EE3\u7801\u5757\u4E3A\u4E86\u533A\u5206 SQL \u8BED\u53E5\u7684\u7C7B\u578B(\u589E\u5220\u6539\u67E5)</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
      <span class="token keyword">case</span> SELECT<span class="token operator">:</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsVoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> method<span class="token punctuation">.</span><span class="token function">hasResultHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD4\u56DE\u7A7A\u503C</span>
          <span class="token function">executeWithResultHandler</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          result <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsMany</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD4\u56DE\u96C6\u5408</span>
          result <span class="token operator">=</span> <span class="token function">executeForMany</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD4\u56DE Map \u96C6\u5408</span>
          result <span class="token operator">=</span> <span class="token function">executeForMap</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsCursor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u8FD4\u56DE Cursor \u5BF9\u8C61(\u6E38\u6807)</span>
          result <span class="token operator">=</span> <span class="token function">executeForCursor</span><span class="token punctuation">(</span>sqlSession<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token comment">// \u5176\u4ED6\u60C5\u51B5</span>
          <span class="token class-name">Object</span> param <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
          result <span class="token operator">=</span> sqlSession<span class="token punctuation">.</span><span class="token function">selectOne</span><span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>method<span class="token punctuation">.</span><span class="token function">returnsOptional</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
              <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> <span class="token operator">!</span>method<span class="token punctuation">.</span><span class="token function">getReturnType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            result <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">ofNullable</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">convertArgsToSqlCommandParam</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> paramNameResolver<span class="token punctuation">.</span><span class="token function">getNamedParams</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\u5728 <code>case SELECT</code> \u4EE3\u7801\u5757\u4E0B\u6BCF\u4E00\u4E2A\u67E5\u8BE2\u7684\u7C7B\u578B\u4E2D\u7ECF\u8FC7\u8FFD\u8E2A\u90FD\u4F1A\u8C03\u7528\u4E00\u4E2A\u65B9\u6CD5\uFF1A<code>convertArgsToSqlCommandParam(args)</code>\uFF0C\u901A\u8FC7\u65B9\u6CD5\u540D\u53EF\u4EE5\u5927\u6982\u4E86\u89E3\u5230\u8FD9\u4E2A\u65B9\u6CD5\u662F\u628A Mapper \u65B9\u6CD5\u4E2D\u4F20\u5165\u7684\u53C2\u6570\u8F6C\u6362\u5230\u4E3A SQL \u8BED\u53E5\u51C6\u5907\u7684\u53C2\u6570\u3002</p><h2 id="paramnameresolver" tabindex="-1"><a class="header-anchor" href="#paramnameresolver" aria-hidden="true">#</a> ParamNameResolver</h2><p>\u5728 ParamNameResolver \u4E2D\uFF0C\u6784\u9020\u65B9\u6CD5\u8D1F\u8D23\u628A\u53C2\u6570\u7D22\u5F15\u548C @Param \u503C\u5B58\u50A8\uFF0C<code>getNamedParams</code> \u65B9\u6CD5\u8D1F\u8D23\u628A @Param \u503C\u548C\u53C2\u6570\u503C\u5B58\u50A8\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ParamNameResolver</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5907\u7528\u7684\u53C2\u6570\u952E\u540D</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> GENERIC_NAME_PREFIX <span class="token operator">=</span> <span class="token string">&quot;param&quot;</span><span class="token punctuation">;</span>
	<span class="token comment">// \u65B9\u6CD5\u7684\u53C2\u6570\u662F\u5426\u4F7F\u7528\u4E86@Param\u6CE8\u89E3</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">boolean</span> useActualParamName<span class="token punctuation">;</span>
	<span class="token comment">// \u65B9\u6CD5\u53C2\u6570\u7684\u7D22\u5F15\u4E0E@Param\u4E2Dvalue\u7684\u5BF9\u5E94\u5173\u7CFBMap\u96C6\u5408</span>
  <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">SortedMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> names<span class="token punctuation">;</span>
  
  <span class="token keyword">public</span> <span class="token class-name">ParamNameResolver</span><span class="token punctuation">(</span><span class="token class-name">Configuration</span> config<span class="token punctuation">,</span> <span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>useActualParamName <span class="token operator">=</span> config<span class="token punctuation">.</span><span class="token function">isUseActualParamName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">[</span><span class="token punctuation">]</span> paramTypes <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getParameterTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E8C\u7EF4\u6570\u7EC4\u662F\u56E0\u4E3A</span>
    <span class="token comment">// 1.\u4E00\u4E2A\u65B9\u6CD5\u4E0A\u53EF\u80FD\u6709\u591A\u4E2A\u53C2\u6570\uFF0C\u6240\u4EE5\u6570\u7EC4\u7B2C\u4E00\u7EF4\u5EA6\u4EE3\u8868\u8FD9\u4E2A\u65B9\u6CD5\u7684\u53C2\u6570\u96C6\u5408</span>
    <span class="token comment">// 2.\u4E00\u4E2A\u53C2\u6570\u53EF\u80FD\u88AB\u591A\u4E2A\u6CE8\u89E3\u4FEE\u9970\uFF0C\u6240\u4EE5\u6570\u7EC4\u7B2C\u4E8C\u7EF4\u5EA6\u4EE3\u8868\u4FEE\u9970\u8FD9\u4E2A\u53C2\u6570\u7684\u6CE8\u89E3\u96C6\u5408</span>
    <span class="token keyword">final</span> <span class="token class-name">Annotation</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paramAnnotations <span class="token operator">=</span> method<span class="token punctuation">.</span><span class="token function">getParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">final</span> <span class="token class-name">SortedMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TreeMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> paramCount <span class="token operator">=</span> paramAnnotations<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    
    <span class="token comment">// \u4ECE@Param\u6CE8\u89E3\u4E2D\u83B7\u53D6value\u503C(\u53C2\u6570\u7684\u81EA\u5B9A\u4E49\u952E\u540D)</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> paramIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> paramIndex <span class="token operator">&lt;</span> paramCount<span class="token punctuation">;</span> paramIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSpecialParameter</span><span class="token punctuation">(</span>paramTypes<span class="token punctuation">[</span>paramIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u8DF3\u8FC7\u7279\u6B8A\u53C2\u6570\uFF0C\u6682\u65F6\u4E0D\u7EC6\u7A76</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Annotation</span> annotation <span class="token operator">:</span> paramAnnotations<span class="token punctuation">[</span>paramIndex<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>annotation <span class="token keyword">instanceof</span> <span class="token class-name">Param</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          hasParamAnnotation <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          name <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">Param</span><span class="token punctuation">)</span> annotation<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// @Param was not specified.</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>useActualParamName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          name <span class="token operator">=</span> <span class="token function">getActualParamName</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> paramIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>name <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token comment">// use the parameter index as the name (&quot;0&quot;, &quot;1&quot;, ...)</span>
          <span class="token comment">// gcode issue #71</span>
          name <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// (\u53C2\u6570\u4F4D\u7F6E\u7D22\u5F15,\u53C2\u6570\u81EA\u5B9A\u4E49\u952E\u540D)</span>
      map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>paramIndex<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    names <span class="token operator">=</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">unmodifiableSortedMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getNamedParams</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token keyword">int</span> paramCount <span class="token operator">=</span> names<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>args <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> paramCount <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hasParamAnnotation <span class="token operator">&amp;&amp;</span> paramCount <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token class-name">Object</span> value <span class="token operator">=</span> args<span class="token punctuation">[</span>names<span class="token punctuation">.</span><span class="token function">firstKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token function">wrapToMapIfCollection</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> useActualParamName <span class="token operator">?</span> names<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u8FD9\u4E2AMap\u96C6\u5408\u5B58\u50A8\u7684\u7ED3\u6784:(\u53C2\u6570\u81EA\u5B9A\u4E49\u952E\u540D,\u53C2\u6570\u503C)</span>
      <span class="token comment">// \u9664\u4E86\u8FD9\u4E2A\u5BF9\u5E94\u5173\u7CFB\uFF0CMyBatis\u8FD8\u51C6\u5907\u4E86\u4E00\u4E2A\u5907\u7528\u7684\u952E\u540D\uFF0C\u7ED3\u6784:(paramn,\u7B2Cn\u4E2A\u53C2\u6570)</span>
      <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ParamMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> names<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        param<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> args<span class="token punctuation">[</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u5907\u7528\u53C2\u6570\u540D(param1, param2, ...)</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> genericParamName <span class="token operator">=</span> GENERIC_NAME_PREFIX <span class="token operator">+</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4FDD\u8BC1\u4E0D\u548C\u539F\u6709\u7684\u81EA\u5B9A\u4E49\u952E\u540D\u51B2\u7A81</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>names<span class="token punctuation">.</span><span class="token function">containsValue</span><span class="token punctuation">(</span>genericParamName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          param<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>genericParamName<span class="token punctuation">,</span> args<span class="token punctuation">[</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        i<span class="token operator">++</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> param<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BD4\u5982\u4E00\u4E2A\u65B9\u6CD5\u7684\u53C2\u6570\u5217\u8868\u662F <code>(@Param(&quot;username&quot;) String username, @Param(&quot;code&quot;) Integer code)</code> \uFF0C\u4F20\u5165\u7684\u53C2\u6570\u662F <code>(&quot;admin&quot;, 20)</code> \uFF0C\u90A3\u4E48\u6B64\u65F6\u8FD9\u4E2A <code>param</code> Map \u96C6\u5408\u4E2D\u7684\u6570\u636E\u5C31\u662F\uFF1A</p><table><thead><tr><th style="text-align:center;">\u952E</th><th style="text-align:center;">\u503C</th></tr></thead><tbody><tr><td style="text-align:center;">username</td><td style="text-align:center;">admin</td></tr><tr><td style="text-align:center;">code</td><td style="text-align:center;">10</td></tr><tr><td style="text-align:center;">param1</td><td style="text-align:center;">admin</td></tr><tr><td style="text-align:center;">param2</td><td style="text-align:center;">10</td></tr></tbody></table>`,20),o=[e];function c(l,u){return s(),a("div",null,o)}var r=n(t,[["render",c],["__file","MyBatis-@Param.html.vue"]]);export{r as default};
