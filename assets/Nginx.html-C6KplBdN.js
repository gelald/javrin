import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as a,a as s}from"./app-D62f3oGG.js";const n={},t=s(`<h1 id="nginx-配置记录" tabindex="-1"><a class="header-anchor" href="#nginx-配置记录"><span>Nginx 配置记录</span></a></h1><h2 id="root-与-alias区别" tabindex="-1"><a class="header-anchor" href="#root-与-alias区别"><span>root 与 alias区别</span></a></h2><p>nginx 指定⽂件路径有两种⽅式 root 和 alias，root 与 alias 主要区别在于 nginx 如何解释 location 后⾯的 uri，这会使两者分别以不同的⽅式将请求映射到服务器⽂件上。</p><h3 id="root" tabindex="-1"><a class="header-anchor" href="#root"><span>root</span></a></h3><p>root 指定⽬录的上级⽬录，并且该上级⽬录要含有 locatoin 指定名称的同名⽬录。</p><p>以root⽅式设置资源路径：</p><ul><li><p>语法：root path</p></li><li><p>配置块：http、server、location、if</p></li></ul><p>例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /img/ {</span></span>
<span class="line"><span>	alias /var/www/image/;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若按照上述配置的话，则访问 <code>/img/</code> ⽬录⾥⾯的⽂件时，nginx 会⾃动去 <code>/var/www/image/</code> ⽬录找⽂件</p><h3 id="alias" tabindex="-1"><a class="header-anchor" href="#alias"><span>alias</span></a></h3><p>alias 指定的⽬录是准确的，给location指定⼀个⽬录。</p><p>以 alias ⽅式设置资源路径：</p><ul><li><p>语法：alias path。需要注意的是目录后面一定要有 <code>/</code></p></li><li><p>配置块：location</p></li></ul><p>例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /img/ {</span></span>
<span class="line"><span>	root /var/www/image;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若按照这种配置的话，则访问 <code>/img/</code> ⽬录下的⽂件时，nginx 会去 <code>/var/www/image/img/</code> ⽬录下找⽂件</p><h2 id="proxy-pass-与-的关系" tabindex="-1"><a class="header-anchor" href="#proxy-pass-与-的关系"><span>proxy_pass 与 / 的关系</span></a></h2><p>在 nginx 中配置 proxy_pass 代理转发时</p><ul><li>如果在 proxy_pass 后面的 url 加 <code>/</code>，表示绝对根路径；</li><li>如果没有 <code>/</code>，表示相对路径，把匹配的路径部分也给代理走。</li></ul><p>假设下面四种情况分别用 <code>http://127.0.0.1/proxy/test.html</code> 进行访问。</p><p>第一种：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy/ {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120/;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120/test.html</code></p><p>第二种（相对于第一种，最后少一个 / ）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy/ {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120/proxy/test.html</code></p><p>第三种：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120/;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120//test.html</code></p><p>第四种：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120/proxy/test.html</code></p><p>第五种：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy/ {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120/aaa/;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120/aaa/test.html</code></p><p>第六种（相对于第五种，最后少一个 / ）</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>location /proxy/ {</span></span>
<span class="line"><span>	proxy_pass http://192.168.0.120/aaa;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>访问的 URL：<code>http://127.0.0.1/proxy/test.html</code></p><p>代理到 URL：<code>http://192.168.0.120/aaatest.html</code></p>`,45),l=[t];function p(o,r){return a(),e("div",null,l)}const h=i(n,[["render",p],["__file","Nginx.html.vue"]]),g=JSON.parse('{"path":"/writings/archive/Nginx.html","title":"Nginx 配置记录","lang":"zh-CN","frontmatter":{"description":"Nginx 配置记录 root 与 alias区别 nginx 指定⽂件路径有两种⽅式 root 和 alias，root 与 alias 主要区别在于 nginx 如何解释 location 后⾯的 uri，这会使两者分别以不同的⽅式将请求映射到服务器⽂件上。 root root 指定⽬录的上级⽬录，并且该上级⽬录要含有 locatoin 指定名称的...","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/archive/Nginx.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Nginx 配置记录"}],["meta",{"property":"og:description","content":"Nginx 配置记录 root 与 alias区别 nginx 指定⽂件路径有两种⽅式 root 和 alias，root 与 alias 主要区别在于 nginx 如何解释 location 后⾯的 uri，这会使两者分别以不同的⽅式将请求映射到服务器⽂件上。 root root 指定⽬录的上级⽬录，并且该上级⽬录要含有 locatoin 指定名称的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-08T09:09:59.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-01-08T09:09:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Nginx 配置记录\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-01-08T09:09:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"root 与 alias区别","slug":"root-与-alias区别","link":"#root-与-alias区别","children":[{"level":3,"title":"root","slug":"root","link":"#root","children":[]},{"level":3,"title":"alias","slug":"alias","link":"#alias","children":[]}]},{"level":2,"title":"proxy_pass 与 / 的关系","slug":"proxy-pass-与-的关系","link":"#proxy-pass-与-的关系","children":[]}],"git":{"createdTime":1673168999000,"updatedTime":1673168999000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":1.47,"words":441},"filePathRelative":"writings/archive/Nginx.md","localizedDate":"2023年1月8日","autoDesc":true}');export{h as comp,g as data};
