const e=JSON.parse('{"key":"v-077e2f5f","path":"/writings/Java-collection/TreeMap-and-TreeSet.html","title":"TreeMap 与 TreeSet","lang":"zh-CN","frontmatter":{"title":"TreeMap 与 TreeSet","icon":"article","category":["Java集合"],"description":"TreeMap &amp; TreeSet 概述 把 TreeSet 和 TreeMap 放在一起讲解，是因为二者在 Java 里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说 TreeSet 里面有一个 TreeMap，体现了适配器模式。所以这里重点讲解 TreeMap Java 中的 TreeMap 实现了 SortedMap 接口，也就是说会按照 key 的大小顺序对元素进行排序，key 大小的判断可以通过其类型本身的自然顺序，也可以通过构造时传入的比较器。 红黑树","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/Java-collection/TreeMap-and-TreeSet.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"TreeMap 与 TreeSet"}],["meta",{"property":"og:description","content":"TreeMap &amp; TreeSet 概述 把 TreeSet 和 TreeMap 放在一起讲解，是因为二者在 Java 里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说 TreeSet 里面有一个 TreeMap，体现了适配器模式。所以这里重点讲解 TreeMap Java 中的 TreeMap 实现了 SortedMap 接口，也就是说会按照 key 的大小顺序对元素进行排序，key 大小的判断可以通过其类型本身的自然顺序，也可以通过构造时传入的比较器。 红黑树"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TreeMap 与 TreeSet\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"红黑树","slug":"红黑树","link":"#红黑树","children":[]}]},{"level":2,"title":"获取元素","slug":"获取元素","link":"#获取元素","children":[]},{"level":2,"title":"添加元素","slug":"添加元素","link":"#添加元素","children":[]},{"level":2,"title":"删除元素","slug":"删除元素","link":"#删除元素","children":[]},{"level":2,"title":"TreeSet","slug":"treeset","link":"#treeset","children":[]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":4.32,"words":1295},"filePathRelative":"writings/Java-collection/TreeMap-and-TreeSet.md","localizedDate":"2023年2月28日","excerpt":"<h1> TreeMap &amp; TreeSet</h1>\\n<h2> 概述</h2>\\n<p>把 TreeSet 和 TreeMap 放在一起讲解，是因为二者在 Java 里有着相同的实现，前者仅仅是对后者做了一层包装，也就是说 TreeSet 里面有一个 TreeMap，体现了适配器模式。所以这里重点讲解 TreeMap</p>\\n<p>Java 中的 TreeMap 实现了 SortedMap 接口，也就是说会按照 <code>key</code> 的大小顺序对元素进行排序，<code>key</code> 大小的判断可以通过其类型本身的自然顺序，也可以通过构造时传入的比较器。</p>\\n<h3> 红黑树</h3>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
