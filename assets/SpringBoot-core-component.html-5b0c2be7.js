import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as a,d as c,e as l}from"./app-85442c0b.js";const i={},u=l(`<h1 id="springboot-核心组件" tabindex="-1"><a class="header-anchor" href="#springboot-核心组件" aria-hidden="true">#</a> SpringBoot 核心组件</h1><blockquote><p>SpringBoot 有四大组件：starter、autoconfigure、actuator 以及 CLI</p></blockquote><h2 id="spring-boot-starter" tabindex="-1"><a class="header-anchor" href="#spring-boot-starter" aria-hidden="true">#</a> Spring Boot Starter</h2><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.3.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 Spring Boot 项目的 pom 文件中经常能看到这两种依赖</p><ul><li><code>spring-boot-starter-xxx</code> ：Spring Boot 官方提供的 starter</li><li><code>xxx-spring-boot-starter</code> ：非官方，厂商自己封装的 starter</li></ul><p>引入依赖后，在 Spring Boot 核心配置文件中进行简单的相关配置即可</p><hr><p>如果不使用 starter，以 MyBatis 为例</p><p>引入依赖时需要以下依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并且需要自己手动编写配置文件配置相关的 bean，并且要把它们注入到 Spring 容器中</p><h3 id="小结" tabindex="-1"><a class="header-anchor" href="#小结" aria-hidden="true">#</a> 小结</h3><ul><li>使用 starter 可以帮助我们封装好所有需要的依赖，避免了手动添加时导致的 jar 包冲突等问题</li><li>使用 starter 帮我们解决了把 bean 自动注入到 Spring 容器的工作，并且配置上更加简化</li></ul><h2 id="spring-boot-autoconfigure" tabindex="-1"><a class="header-anchor" href="#spring-boot-autoconfigure" aria-hidden="true">#</a> Spring Boot Autoconfigure</h2><blockquote><p>autoconfigure 往往伴随着 starter ，是 starter 能力体现的具体实现</p></blockquote><p>以 MyBatis 为例，<code>mybatis-spring-boot-autoconfigure</code> 依赖就在 <code>mybatis-spring-boot-starter</code> 里面</p><p><img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/20220428152640.png" alt=""></p><h3 id="小结-1" tabindex="-1"><a class="header-anchor" href="#小结-1" aria-hidden="true">#</a> 小结</h3><p>autoconfigure 的内容主要是实现了配置 bean 实例到 Spring 容器中，所以说 autoconfigure 是 starter 能力的具体实现</p><h2 id="spring-boot-actuator" tabindex="-1"><a class="header-anchor" href="#spring-boot-actuator" aria-hidden="true">#</a> Spring Boot actuator</h2><blockquote><p>actuator 是 Spring Boot 提供的监控插件，提供了很多接口来获取当前项目的各项运行状态指标</p></blockquote><p>Spring Boot 对这些可以监控的端点称为 <strong>Endpoints</strong></p><h3 id="使用方法" tabindex="-1"><a class="header-anchor" href="#使用方法" aria-hidden="true">#</a> 使用方法</h3><ul><li><p>添加依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置需要开启监控的端点</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">management</span><span class="token punctuation">:</span>
  <span class="token key atrule">endpoint</span><span class="token punctuation">:</span>
    <span class="token key atrule">health</span><span class="token punctuation">:</span> <span class="token comment">## 开启健康监控端点</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启动服务时，可以在控制台中看到这样的输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">..</span>.
<span class="token number">2022</span>-04-28 <span class="token number">15</span>:50:30.785  INFO <span class="token number">19660</span> --- <span class="token punctuation">[</span>           main<span class="token punctuation">]</span> o.s.b.a.e.web.EndpointLinksResolver      <span class="token builtin class-name">:</span> Exposing <span class="token number">1</span> endpoint<span class="token punctuation">(</span>s<span class="token punctuation">)</span> beneath base path <span class="token string">&#39;/actuator&#39;</span>
<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证，访问 <code>IP:port/actuator</code> 就能看到监控信息的地址</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;_links&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token property">&quot;self&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;href&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://localhost:8080/actuator&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;templated&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;health&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;href&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://localhost:8080/actuator/health&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;templated&quot;</span><span class="token operator">:</span><span class="token boolean">false</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token property">&quot;health-path&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span>
            <span class="token property">&quot;href&quot;</span><span class="token operator">:</span><span class="token string">&quot;http://localhost:8080/actuator/health/{*path}&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;templated&quot;</span><span class="token operator">:</span><span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="小结-2" tabindex="-1"><a class="header-anchor" href="#小结-2" aria-hidden="true">#</a> 小结</h3><p>actuator 可以在 Spring Boot 的监控中发挥了巨大的作用。另外，当项目升级到 Spring Cloud 微服务项目时，actuator 暴露的端点可以很好地让注册中心知道当前服务是否在线、可用。</p><h2 id="spring-boot-cli" tabindex="-1"><a class="header-anchor" href="#spring-boot-cli" aria-hidden="true">#</a> Spring Boot CLI</h2><p>Spring Boot CLI 是一个 Spring Boot 提供的客户端工具，主要的功能是</p><ul><li>运行 groovy 脚本</li><li>打包 groovy 文件到 jar</li><li>初始化 Spring Boot 项目</li><li>其他</li></ul><p>这个组件在日常开发中使用得较少，了解即可</p>`,32),r={href:"https://docs.spring.io/spring-boot/docs/current/reference/html/spring-boot-cli.html",target:"_blank",rel:"noopener noreferrer"};function d(k,g){const s=p("ExternalLinkIcon");return e(),o("div",null,[u,n("p",null,[a("官方文档："),n("a",r,[a("Spring Boot CLI"),c(s)])])])}const m=t(i,[["render",d],["__file","SpringBoot-core-component.html.vue"]]);export{m as default};
