const t=JSON.parse('{"key":"v-0e1f54a4","path":"/writings/pattern/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F.html","title":"访问者模式","lang":"zh-CN","frontmatter":{"description":"访问者模式 定义：是一种将数据结构与数据操作分离的设计模式，是指封装一些作用于某种数据结构中的各元素的操作 特征：可以在不改变数据结构的前提下定义作用于这些元素的新的操作 适用场景： 对象结构比较稳定，但经常需要在此对象结构上定义新的操作 需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免这些操作“污染”这些对象的类，也不希望在增加新操作时修改这些类 优点： 使得数据结构和作用于结构上的操作解耦，使得操作集合可以独立变化 扩展容易，如果需要扩展新的访问者，只需要增加抽象访问者的实现类即可 各角色职责分离，符合单一职责原则","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/pattern/%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"访问者模式"}],["meta",{"property":"og:description","content":"访问者模式 定义：是一种将数据结构与数据操作分离的设计模式，是指封装一些作用于某种数据结构中的各元素的操作 特征：可以在不改变数据结构的前提下定义作用于这些元素的新的操作 适用场景： 对象结构比较稳定，但经常需要在此对象结构上定义新的操作 需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免这些操作“污染”这些对象的类，也不希望在增加新操作时修改这些类 优点： 使得数据结构和作用于结构上的操作解耦，使得操作集合可以独立变化 扩展容易，如果需要扩展新的访问者，只需要增加抽象访问者的实现类即可 各角色职责分离，符合单一职责原则"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-01T07:27:35.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-01T07:27:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"访问者模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-01T07:27:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1677655655000,"updatedTime":1677655655000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":3.71,"words":1112},"filePathRelative":"writings/pattern/访问者模式.md","localizedDate":"2023年3月1日","excerpt":"<h1> 访问者模式</h1>\\n<p>定义：是一种将数据结构与数据操作分离的设计模式，是指封装一些作用于某种数据结构中的各元素的操作</p>\\n<p>特征：可以在不改变数据结构的前提下定义作用于这些元素的新的操作</p>\\n<p>适用场景：</p>\\n<ol>\\n<li>对象结构比较稳定，但经常需要在此对象结构上定义新的操作</li>\\n<li>需要对一个对象结构中的对象进行很多不同的并且不相关的操作，而需要避免这些操作“污染”这些对象的类，也不希望在增加新操作时修改这些类</li>\\n</ol>\\n<p>优点：</p>\\n<ol>\\n<li>使得数据结构和作用于结构上的操作解耦，使得操作集合可以独立变化</li>\\n<li>扩展容易，如果需要扩展新的访问者，只需要增加抽象访问者的实现类即可</li>\\n<li>各角色职责分离，符合单一职责原则</li>\\n</ol>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{t as data};
