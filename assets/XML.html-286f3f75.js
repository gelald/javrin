import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as s,e as t}from"./app-859571d0.js";const e={},p=t(`<h1 id="xml" tabindex="-1"><a class="header-anchor" href="#xml" aria-hidden="true">#</a> xml</h1><p>Extensible Markup Language</p><h2 id="可扩展" tabindex="-1"><a class="header-anchor" href="#可扩展" aria-hidden="true">#</a> 可扩展</h2><p>标签都是自定义的，没有一个标签是规定好的。</p><h2 id="与html区别" tabindex="-1"><a class="header-anchor" href="#与html区别" aria-hidden="true">#</a> 与HTML区别</h2><ol><li>xml标签都是自定义的，html标签是预定义的。</li><li>xml的语法严格，html语法松散（没有严格要求每一个标签的属性、不一定要关闭标签等）</li><li>xml存储数据，html展示数据</li></ol><h2 id="功能" tabindex="-1"><a class="header-anchor" href="#功能" aria-hidden="true">#</a> 功能</h2><ol><li>配置文件</li><li>在网络中传输</li></ol><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法" aria-hidden="true">#</a> 语法</h2><ol><li>后缀名为.xml</li><li>xml第一行必须定义为文档声明</li><li>xml文档中有且仅有一个根标签</li><li>属性值必须使用引号(单双都可)引起来</li><li>标签必须正确关闭</li><li>xml标签名称区分大小写</li></ol><p>例子</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&#39;1.0&#39; ?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>users</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>1<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>zhangsan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>23<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gender</span><span class="token punctuation">&gt;</span></span>male<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gender</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&#39;</span>2<span class="token punctuation">&#39;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>lisi<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">&gt;</span></span>24<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>gender</span><span class="token punctuation">&gt;</span></span>female<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>gender</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>user</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>users</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="组成部分" tabindex="-1"><a class="header-anchor" href="#组成部分" aria-hidden="true">#</a> 组成部分</h2><ol><li>文档声明 <ol><li>格式：<code>&lt;?xml 属性列表 ?&gt;</code></li><li>属性列表 <ul><li>version：版本号，必须填写。 一般用1.0</li><li>encoding：编码方式，使用的字符集。默认ISO-8859-1</li><li>standardalone：是否独立。是否依赖其他文件（大部分不设置）</li></ul></li></ol></li><li>规则 <ol><li>名称可以包含字母、数字以及其他的字符</li><li>名称不能以数字或者标点符号开始</li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始</li><li>名称不能包含空格</li></ol></li><li>属性：id要唯一</li></ol><h2 id="约束" tabindex="-1"><a class="header-anchor" href="#约束" aria-hidden="true">#</a> 约束</h2><p>规定xml文档的书写规则</p><p>分类：</p><ol><li>dtd</li><li>schema</li></ol><h3 id="dtd" tabindex="-1"><a class="header-anchor" href="#dtd" aria-hidden="true">#</a> DTD</h3><p>使用</p><p>引入dtd文档到xml文件中</p><ol><li>内部：将约束规则定义在xml文档中</li><li>外部：将约束规则定义在dtd文件中 <ol><li>本地：<code>&lt;!DOCTYPE 根标签名 SYSTEM &quot;dtd文件路径&quot;&gt;</code></li><li>网络：<code>&lt;!DOCTYPE 根标签名 PUBLIC &quot;dtd文件名字&quot; &quot;dtd文件URL&quot;&gt;</code></li></ol></li></ol><h3 id="schema" tabindex="-1"><a class="header-anchor" href="#schema" aria-hidden="true">#</a> Schema</h3><p>使用</p><ol><li>填写xml文档的根元素</li><li>引入xsi前缀. <code>xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</code></li><li>引入xsd文件命名空间. <code>xsi:schemaLocation=&quot;http://www.itcast.cn/xml student.xsd&quot;</code></li><li>为每一个xsd约束声明一个前缀,作为标识</li></ol><p>例子</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>beans</span> 
    <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span> 
		<span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/beans<span class="token punctuation">&quot;</span></span>   				<span class="token attr-name">使用的beans的xsd就直接引用</span>
    <span class="token attr-name"><span class="token namespace">xmlns:</span>context</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/context<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">使用context在前面加context:</span></span>
   	<span class="token attr-name"><span class="token namespace">xmlns:</span>mvc</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.springframework.org/schema/mvc<span class="token punctuation">&quot;</span></span> 				<span class="token attr-name"><span class="token namespace">使用mvc在前面加mvc:</span></span>
    <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>
        http://www.springframework.org/schema/beans											文件名
        http://www.springframework.org/schema/beans/spring-beans.xsd		文件路径
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>annotation-config</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">context:</span>component-scan</span> <span class="token attr-name">base-package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cn.cisol.mvcdemo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- ... --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">context:</span>component-scan</span><span class="token punctuation">&gt;</span></span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>annotation-driven</span> <span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">mvc:</span>resources</span> <span class="token attr-name">mapping</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/resources/**<span class="token punctuation">&quot;</span></span> <span class="token attr-name">location</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/resources/<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>


    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bean</span>
        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>org.springframework.web.servlet.view.ContentNegotiatingViewResolver<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!-- ... --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bean</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="解析" tabindex="-1"><a class="header-anchor" href="#解析" aria-hidden="true">#</a> 解析</h2><p>操作xml文档，将其数据读入内存</p><p><strong>操作方式</strong></p><ol><li>DOM（服务器）：将标记语言文档一次性加载进内存，在内存中形成一棵DOM树<img src="https://wingbun-notes-image.oss-cn-guangzhou.aliyuncs.com/images/007S8ZIlgy1gfsrtx9en0j31ry0pigws.jpg" alt=""><ul><li>优点：操作方便，可以对文档进行crud的所有操作</li><li>缺点：一次性加载，比较占内存</li></ul></li><li>SAX（移动端）：逐行读取，急于事件驱动。读取一行释放一行，在内存中永远只有一行 <ul><li>优点：基本不占内存</li><li>缺点：只能读取，不能增删改</li></ul></li></ol><h2 id="解析器" tabindex="-1"><a class="header-anchor" href="#解析器" aria-hidden="true">#</a> 解析器</h2><p>解析xml的工具包</p><ol><li>JAXP：支持DOM、SAX思想，性能差</li><li>DOM4J：基于DOM思想，性能优秀</li><li>Jsoup：基于DOM</li></ol><h3 id="jsoup" tabindex="-1"><a class="header-anchor" href="#jsoup" aria-hidden="true">#</a> Jsoup</h3><p>使用步骤：</p><ol><li>导入jar包</li><li>获取Document对象</li><li>获取对应的标签 Element对象</li><li>获取数据</li></ol><h4 id="jsoup-1" tabindex="-1"><a class="header-anchor" href="#jsoup-1" aria-hidden="true">#</a> Jsoup</h4><p>工具类，解析HTML或XML文档，返回Document对象</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Document</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">File</span> in<span class="token punctuation">,</span> <span class="token class-name">String</span> charset<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//解析xml或html文件</span>
<span class="token class-name">Document</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//解析xml或html字符串</span>
<span class="token class-name">Document</span> <span class="token function">parse</span><span class="token punctuation">(</span><span class="token class-name">URL</span> url<span class="token punctuation">,</span> <span class="token keyword">int</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//通过网络路径获取指定的html或xml的文档对象</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="document" tabindex="-1"><a class="header-anchor" href="#document" aria-hidden="true">#</a> Document</h4><p>文档对象，代表内存中的dom树</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Elements</span> <span class="token function">getElementByTag</span><span class="token punctuation">(</span><span class="token class-name">String</span> tagName<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据标签名称获取元素对象集合</span>
<span class="token class-name">Elements</span> <span class="token function">getElementByAttribute</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据属性名称获取元素对象集合</span>
<span class="token class-name">Elements</span> <span class="token function">getElementByAttributeValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//根据属性名和值获取元素对象集合</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="elements" tabindex="-1"><a class="header-anchor" href="#elements" aria-hidden="true">#</a> Elements</h4><p>元素对象Element的集合。<code>ArrayList&lt;Element&gt;</code></p><h4 id="element" tabindex="-1"><a class="header-anchor" href="#element" aria-hidden="true">#</a> Element</h4><p>元素对象，可以获取对象的数据、文本、属性等</p><h4 id="node" tabindex="-1"><a class="header-anchor" href="#node" aria-hidden="true">#</a> Node</h4><p>节点对象</p>`,49),l=[p];function c(o,i){return a(),s("div",null,l)}const d=n(e,[["render",c],["__file","XML.html.vue"]]);export{d as default};
