const e=JSON.parse('{"key":"v-3e5c9f7f","path":"/writings/JVM/class-loading.html","title":"Java 类加载机制","lang":"zh-CN","frontmatter":{"title":"Java 类加载机制","icon":"article","category":["JVM"],"description":"Java 类加载机制 类的生命周期 类的生命周期总体上包括：加载、使用、卸载；而类的加载阶段总体上分为加载、连接、初始化，而连接阶段可以细分为验证、准备、解析。 类加载的这五个阶段中，加载、验证、准备和初始化这四个阶段发生的顺序是确定的，而解析阶段则不一定，它在某些情况下可以在初始化阶段之后开始，这是为了支持Java语言的运行时绑定(也成为动态绑定或晚期绑定)。 另外注意这里的几个阶段是按顺序开始，而不是按顺序进行或完成，因为这些阶段通常都是互相交叉地混合进行的，通常在一个阶段执行的过程中调用或激活另一个阶段。","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/JVM/class-loading.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"Java 类加载机制"}],["meta",{"property":"og:description","content":"Java 类加载机制 类的生命周期 类的生命周期总体上包括：加载、使用、卸载；而类的加载阶段总体上分为加载、连接、初始化，而连接阶段可以细分为验证、准备、解析。 类加载的这五个阶段中，加载、验证、准备和初始化这四个阶段发生的顺序是确定的，而解析阶段则不一定，它在某些情况下可以在初始化阶段之后开始，这是为了支持Java语言的运行时绑定(也成为动态绑定或晚期绑定)。 另外注意这里的几个阶段是按顺序开始，而不是按顺序进行或完成，因为这些阶段通常都是互相交叉地混合进行的，通常在一个阶段执行的过程中调用或激活另一个阶段。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java 类加载机制\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"类的生命周期","slug":"类的生命周期","link":"#类的生命周期","children":[{"level":3,"title":"加载","slug":"加载","link":"#加载","children":[]},{"level":3,"title":"连接","slug":"连接","link":"#连接","children":[]},{"level":3,"title":"初始化","slug":"初始化","link":"#初始化","children":[]}]},{"level":2,"title":"类加载器","slug":"类加载器","link":"#类加载器","children":[]},{"level":2,"title":"类加载方式","slug":"类加载方式","link":"#类加载方式","children":[]},{"level":2,"title":"类加载机制","slug":"类加载机制","link":"#类加载机制","children":[{"level":3,"title":"双亲委派机制过程","slug":"双亲委派机制过程","link":"#双亲委派机制过程","children":[]},{"level":3,"title":"双亲委派具体实现","slug":"双亲委派具体实现","link":"#双亲委派具体实现","children":[]}]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":11.41,"words":3422},"filePathRelative":"writings/JVM/class-loading.md","localizedDate":"2023年2月28日","excerpt":"<h1> Java 类加载机制</h1>\\n<h2> 类的生命周期</h2>\\n<p>类的生命周期总体上包括：加载、使用、卸载；而类的加载阶段总体上分为加载、连接、初始化，而连接阶段可以细分为验证、准备、解析。</p>\\n<p>类加载的这五个阶段中，加载、验证、准备和初始化这四个阶段发生的顺序是确定的，而解析阶段则不一定，它在某些情况下可以在初始化阶段之后开始，这是为了支持Java语言的运行时绑定(也成为动态绑定或晚期绑定)。</p>\\n<p>另外注意这里的几个阶段是按顺序开始，而不是按顺序进行或完成，因为这些阶段<strong>通常都是互相交叉地混合进行的</strong>，通常在一个阶段执行的过程中调用或激活另一个阶段。</p>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
