const t=JSON.parse('{"key":"v-6272cdf2","path":"/writings/pattern/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html","title":"迭代器模式","lang":"zh-CN","frontmatter":{"description":"迭代器模式 定义：提供一种顺序访问集合、容器对象元素的方法，而又无需暴露集合内部表示 本质：抽离集合对象迭代行为到迭代器，提供一致访问接口 适用场景： 访问一个集合对象的内容而无需暴露它的内部表示 为遍历不同的集合结构提供一个统一的访问接口 一般来说，开发的时候使用得不多，很多时候都是框架提供了成熟的轮子，开发时只需要使用即可 示例 一般开发的时候不会去实现一个迭代器，都是使用提供好的迭代器，示例可以帮助理解迭代器模式的精髓 课程类","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/pattern/%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"迭代器模式"}],["meta",{"property":"og:description","content":"迭代器模式 定义：提供一种顺序访问集合、容器对象元素的方法，而又无需暴露集合内部表示 本质：抽离集合对象迭代行为到迭代器，提供一致访问接口 适用场景： 访问一个集合对象的内容而无需暴露它的内部表示 为遍历不同的集合结构提供一个统一的访问接口 一般来说，开发的时候使用得不多，很多时候都是框架提供了成熟的轮子，开发时只需要使用即可 示例 一般开发的时候不会去实现一个迭代器，都是使用提供好的迭代器，示例可以帮助理解迭代器模式的精髓 课程类"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-01T07:27:35.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-01T07:27:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"迭代器模式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-01T07:27:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]},{"level":2,"title":"迭代器模式在源码中的体现","slug":"迭代器模式在源码中的体现","link":"#迭代器模式在源码中的体现","children":[{"level":3,"title":"JDK","slug":"jdk","link":"#jdk","children":[]},{"level":3,"title":"MyBatis","slug":"mybatis","link":"#mybatis","children":[]}]}],"git":{"createdTime":1677655655000,"updatedTime":1677655655000,"contributors":[{"name":"wuyingbin","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":3.03,"words":909},"filePathRelative":"writings/pattern/迭代器模式.md","localizedDate":"2023年3月1日","excerpt":"<h1> 迭代器模式</h1>\\n<p>定义：提供一种顺序访问集合、容器对象元素的方法，而又无需暴露集合内部表示</p>\\n<p>本质：抽离集合对象迭代行为到迭代器，提供一致访问接口</p>\\n<p>适用场景：</p>\\n<ol>\\n<li>访问一个集合对象的内容而无需暴露它的内部表示</li>\\n<li>为遍历不同的集合结构提供一个统一的访问接口</li>\\n</ol>\\n<p>一般来说，开发的时候使用得不多，很多时候都是框架提供了成熟的轮子，开发时只需要使用即可</p>\\n<h2> 示例</h2>\\n<p>一般开发的时候不会去实现一个迭代器，都是使用提供好的迭代器，示例可以帮助理解迭代器模式的精髓</p>\\n<p>课程类</p>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{t as data};
