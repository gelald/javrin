import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,d as e}from"./app.00677c1d.js";const p={},t=e(`<h1 id="\u6865\u63A5\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u6865\u63A5\u6A21\u5F0F" aria-hidden="true">#</a> \u6865\u63A5\u6A21\u5F0F</h1><p>\u5B9A\u4E49\uFF1A\u5C06\u62BD\u8C61\u7684\u90E8\u5206\u4E0E\u5B83\u7684\u5177\u4F53\u5B9E\u73B0\u90E8\u5206\u5206\u79BB\uFF0C\u4F7F\u5F97\u4ED6\u4EEC\u90FD\u53EF\u4EE5\u72EC\u7ACB\u5730\u53D8\u5316\u3002\u4E3B\u8981\u7684\u76EE\u7684\u662F\u901A\u8FC7\u7EC4\u5408\u7684\u65B9\u5F0F\u5EFA\u7ACB\u4E24\u4E2A\u7C7B\u4E4B\u95F4\u7684\u8054\u7CFB\uFF0C\u800C\u4E0D\u662F\u7EE7\u627F</p><p>\u9002\u7528\u573A\u666F</p><ol><li>\u5728\u62BD\u8C61\u548C\u5177\u4F53\u5B9E\u73B0\u4E4B\u95F4\u9700\u8981\u589E\u52A0\u66F4\u591A\u7684\u7075\u6D3B\u6027\u7684\u573A\u666F</li><li>\u4E00\u4E2A\u7C7B\u5B58\u5728\u591A\u4E2A\u72EC\u7ACB\u53D8\u5316\u7684\u7EF4\u5EA6\uFF0C\u800C\u8FD9\u591A\u4E2A\u7EF4\u5EA6\u90FD\u9700\u8981\u72EC\u7ACB\u8FDB\u884C\u6269\u5C55</li><li>\u4E0D\u5E0C\u671B\u4F7F\u7528\u7EE7\u627F\uFF0C\u6216\u8005\u56E0\u4E3A\u591A\u5C42\u7EE7\u627F\u5BFC\u81F4\u7CFB\u7EDF\u7C7B\u7684\u6570\u91CF\u5267\u589E</li></ol><p>\u4F18\u70B9\uFF1A</p><ol><li>\u5206\u79BB\u62BD\u8C61\u90E8\u5206\u53CA\u5176\u5177\u4F53\u5B9E\u73B0\u90E8\u5206</li><li>\u63D0\u9AD8\u4E86\u7CFB\u7EDF\u7684\u6269\u5C55\u6027</li><li>\u7B26\u5408\u5F00\u95ED\u539F\u5219</li><li>\u7B26\u5408\u5408\u6210\u590D\u7528\u539F\u5219</li></ol><p>\u7F3A\u70B9\uFF1A</p><ol><li>\u589E\u52A0\u4E86\u7CFB\u7EDF\u7684\u7406\u89E3\u548C\u8BBE\u8BA1\u96BE\u5EA6</li><li>\u9700\u8981\u6B63\u786E\u5730\u8BC6\u522B\u7CFB\u7EDF\u4E2D\u4E24\u4E2A\u72EC\u7ACB\u53D8\u5316\u7684\u7EF4\u5EA6</li></ol><h2 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h2><p>\u5DE5\u4F5C\u4E2D\u7ECF\u5E38\u901A\u8FC7\u6D88\u606F\u6765\u8FDB\u884C\u6C9F\u901A\uFF0C\u65E0\u8BBA\u662F\u90AE\u4EF6\u6D88\u606F\u3001\u77ED\u4FE1\u6D88\u606F\u8FD8\u662F\u5185\u90E8\u6D88\u606F\uFF0C\u540C\u65F6\u6309\u7167\u6D88\u606F\u7D27\u6025\u7A0B\u5EA6\u6765\u770B\u4E5F\u80FD\u5206\u4E3A\u666E\u901A\u6D88\u606F\u3001\u7D27\u6025\u6D88\u606F\u7B49\u3002\u8FD9\u65F6\u6D88\u606F\u5C31\u53EF\u4EE5\u5206\u4E3A\u6D88\u606F\u7C7B\u578B\u3001\u6D88\u606F\u7D27\u6025\u7A0B\u5EA6\u4E24\u4E2A\u72EC\u7ACB\u7684\u7EF4\u5EA6\uFF0C\u4E24\u4E2A\u7EF4\u5EA6\u4E4B\u95F4\u53EF\u4EE5\u81EA\u7531\u7EC4\u5408\uFF0C\u5982\uFF1A\u666E\u901A\u90AE\u4EF6\u6D88\u606F\u3001\u7D27\u6025\u77ED\u4FE1\u6D88\u606F\uFF0C\u8FD9\u65F6\u4EC5\u4EC5\u7528\u7EE7\u627F\u7684\u8BDD\u5C31\u6BD4\u8F83\u9EBB\u70E6</p><p>\u73B0\u5728\u5728\u6D88\u606F\u7C7B\u578B\u548C\u6D88\u606F\u7D27\u6025\u7A0B\u5EA6\u8FD9\u4E24\u4E2A\u7EF4\u5EA6\u4E2D\u95F4\u5EFA\u7ACB\u4E00\u4E2A\u6865\u63A5\u89D2\u8272\uFF0C\u540E\u7EED\u518D\u6709\u65B0\u7684\u6D88\u606F\u7C7B\u578B\uFF0C\u53EA\u9700\u8981\u518D\u52A0\u4E00\u4E2AIMessage\u7684\u5B9E\u73B0\u7C7B\u5373\u53EF</p><p>\u6D88\u606F\u53D1\u9001\u7684\u7EDF\u4E00\u63A5\u53E3</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">IMessage</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u53D1\u9001\u6D88\u606F\u7684\u5185\u5BB9\u548C\u63A5\u6536\u4EBA</span>
    <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span><span class="token class-name">String</span> toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u90AE\u4EF6\u6D88\u606F\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EmailMessage</span> <span class="token keyword">implements</span> <span class="token class-name">IMessage</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> toUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u90AE\u4EF6\u6D88\u606F\u53D1\u9001&quot;</span> <span class="token operator">+</span> message <span class="token operator">+</span> <span class="token string">&quot;\u7ED9&quot;</span> <span class="token operator">+</span> toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u77ED\u4FE1\u6D88\u606F\u7684\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SmsMessage</span> <span class="token keyword">implements</span> <span class="token class-name">IMessage</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">send</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> toUser<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u4F7F\u7528\u77ED\u4FE1\u6D88\u606F\u53D1\u9001&quot;</span> <span class="token operator">+</span> message <span class="token operator">+</span> <span class="token string">&quot;\u7ED9&quot;</span> <span class="token operator">+</span> toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6865\u63A5\u62BD\u8C61\u89D2\u8272</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">class</span> <span class="token class-name">AbastractMessage</span> <span class="token punctuation">{</span>
  	<span class="token comment">// \u6301\u6709\u4E00\u4E2A\u5B9E\u73B0\u90E8\u5206\u7684\u5BF9\u8C61</span>
    <span class="token keyword">private</span> <span class="token class-name">IMessage</span> message<span class="token punctuation">;</span>

  	<span class="token comment">// \u6784\u9020\u65B9\u6CD5\u4F20\u5165\u5B9E\u73B0\u90E8\u5206\u7684\u5BF9\u8C61</span>
    <span class="token keyword">public</span> <span class="token class-name">AbastractMessage</span><span class="token punctuation">(</span><span class="token class-name">IMessage</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
  	<span class="token comment">// \u53D1\u9001\u6D88\u606F\uFF0C\u59D4\u6D3E\u7ED9\u5B9E\u73B0\u90E8\u5206\u7684\u65B9\u6CD5</span>
    <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span><span class="token class-name">String</span> toUser<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>message<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u666E\u901A\u6D88\u606F\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NormalMessage</span> <span class="token keyword">extends</span> <span class="token class-name">AbastractMessage</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">NormalMessage</span><span class="token punctuation">(</span><span class="token class-name">IMessage</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> toUser<span class="token punctuation">)</span><span class="token punctuation">{</span>
        message <span class="token operator">=</span> <span class="token string">&quot;\u3010\u666E\u901A\u3011&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7D27\u6025\u6D88\u606F\u5B9E\u73B0\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UrgencyMessage</span> <span class="token keyword">extends</span> <span class="token class-name">AbastractMessage</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">UrgencyMessage</span><span class="token punctuation">(</span><span class="token class-name">IMessage</span> message<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">,</span> <span class="token class-name">String</span> toUser<span class="token punctuation">)</span><span class="token punctuation">{</span>
        message <span class="token operator">=</span> <span class="token string">&quot;\u3010\u52A0\u6025\u3011&quot;</span> <span class="token operator">+</span> message<span class="token punctuation">;</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">,</span>toUser<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u6865\u63A5\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0" tabindex="-1"><a class="header-anchor" href="#\u6865\u63A5\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0" aria-hidden="true">#</a> \u6865\u63A5\u6A21\u5F0F\u5728\u6E90\u7801\u4E2D\u7684\u4F53\u73B0</h2><h3 id="drivermanager" tabindex="-1"><a class="header-anchor" href="#drivermanager" aria-hidden="true">#</a> DriverManager</h3><p><code>DriverManager</code> \u4E2D\u6301\u6709\u4E86\u4E00\u7CFB\u5217\u7684 <code>DriverInfo</code> \u5BF9\u8C61\uFF0C\u8FD9\u4E9B\u5BF9\u8C61\u662F\u7531\u5404\u6570\u636E\u5E93\u5382\u5546\u5B9E\u73B0\u7684 <code>Driver</code> \u7C7B\u6CE8\u518C\u5230 <code>DriverManger</code> \u751F\u6210</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DriverManager</span> <span class="token punctuation">{</span>
  	<span class="token comment">// List of registered JDBC drivers</span>
  	<span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">static</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">DriverInfo</span><span class="token punctuation">&gt;</span></span> registeredDrivers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CopyOnWriteArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	<span class="token comment">// ...</span>
  
    <span class="token doc-comment comment">/**
     * Load the initial JDBC drivers by checking the System property
     * jdbc.properties and then use the <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token class-name">ServiceLoader</span></span></span><span class="token punctuation">}</span> mechanism
     */</span>
    <span class="token keyword">static</span> <span class="token punctuation">{</span>
      <span class="token function">loadInitialDrivers</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;JDBC DriverManager initialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token comment">// ...</span>
  
  	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Driver</span> driver<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token function">registerDriver</span><span class="token punctuation">(</span>driver<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
  	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token keyword">void</span> <span class="token function">registerDriver</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span></span>Driver</span> driver<span class="token punctuation">,</span> <span class="token class-name">DriverAction</span> da<span class="token punctuation">)</span>
      <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">/* Register the driver if it has not already been added to our list */</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>driver <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            registeredDrivers<span class="token punctuation">.</span><span class="token function">addIfAbsent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DriverInfo</span><span class="token punctuation">(</span>driver<span class="token punctuation">,</span> da<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// This is for compatibility with the original DriverManager</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">NullPointerException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;registerDriver: &quot;</span> <span class="token operator">+</span> driver<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>DriverMangeer</code> \u4E2D\u7684 <code>getConnection()</code> \u65B9\u6CD5\u4E2D\u4F1A\u8C03\u7528\u5404\u81EA\u5382\u5546\u5B9E\u73B0\u7684 <code>Driver</code> \u7684 <code>connect()</code> \u65B9\u6CD5\u83B7\u53D6\u8FDE\u63A5\u5BF9\u8C61</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DriverManager</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  
  <span class="token annotation punctuation">@CallerSensitive</span>
  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Properties</span> info<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">,</span> <span class="token class-name">Reflection</span><span class="token punctuation">.</span><span class="token function">getCallerClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">//  Worker method called by the public getConnection() methods.</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token class-name">String</span> url<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>Properties</span> info<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> caller<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
    <span class="token comment">/*
     * When callerCl is null, we should check the application&#39;s
     * (which is invoking this class indirectly)
     * classloader, so that the JDBC driver class outside rt.jar
     * can be loaded from here.
     */</span>
    <span class="token class-name">ClassLoader</span> callerCL <span class="token operator">=</span> caller <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">?</span> caller<span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">synchronized</span><span class="token punctuation">(</span><span class="token class-name">DriverManager</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// synchronize loading of the correct classloader.</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>callerCL <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        callerCL <span class="token operator">=</span> <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getContextClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span><span class="token punctuation">(</span>url <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SQLException</span><span class="token punctuation">(</span><span class="token string">&quot;The url cannot be null&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;08001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;DriverManager.getConnection(\\&quot;&quot;</span> <span class="token operator">+</span> url <span class="token operator">+</span> <span class="token string">&quot;\\&quot;)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// Walk through the loaded registeredDrivers attempting to make a connection.</span>
    <span class="token comment">// Remember the first exception that gets raised so we can reraise it.</span>
    <span class="token class-name">SQLException</span> reason <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">DriverInfo</span> aDriver <span class="token operator">:</span> registeredDrivers<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// If the caller does not have permission to load the driver then</span>
      <span class="token comment">// skip it.</span>
      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isDriverAllowed</span><span class="token punctuation">(</span>aDriver<span class="token punctuation">.</span>driver<span class="token punctuation">,</span> callerCL<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
          <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;    trying &quot;</span> <span class="token operator">+</span> aDriver<span class="token punctuation">.</span>driver<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token class-name">Connection</span> con <span class="token operator">=</span> aDriver<span class="token punctuation">.</span>driver<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> info<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>con <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// Success!</span>
            <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getConnection returning &quot;</span> <span class="token operator">+</span> aDriver<span class="token punctuation">.</span>driver<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>reason <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            reason <span class="token operator">=</span> ex<span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;    skipping: &quot;</span> <span class="token operator">+</span> aDriver<span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>

    <span class="token comment">// if we got here nobody could connect.</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>reason <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span>
      <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getConnection failed: &quot;</span> <span class="token operator">+</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">throw</span> reason<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;getConnection: no suitable driver found for &quot;</span><span class="token operator">+</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">SQLException</span><span class="token punctuation">(</span><span class="token string">&quot;No suitable driver found for &quot;</span><span class="token operator">+</span> url<span class="token punctuation">,</span> <span class="token string">&quot;08001&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E48\u505A\u53EF\u4EE5\u5DE7\u5999\u5730\u907F\u5F00\u7EE7\u627F\u6240\u5E26\u6765\u7684\u5F3A\u4F9D\u8D56\u7684\u7ED3\u679C\uFF0C\u4E3A\u4E0D\u540C\u7684\u6570\u636E\u5E93\u63D0\u4F9B\u4E86\u76F8\u540C\u7684\u63A5\u53E3</p><h2 id="\u6865\u63A5\u6A21\u5F0F\u548C\u7EC4\u5408\u6A21\u5F0F\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u6865\u63A5\u6A21\u5F0F\u548C\u7EC4\u5408\u6A21\u5F0F\u7684\u533A\u522B" aria-hidden="true">#</a> \u6865\u63A5\u6A21\u5F0F\u548C\u7EC4\u5408\u6A21\u5F0F\u7684\u533A\u522B</h2><p>\u7EC4\u5408\u6A21\u5F0F\u6CE8\u91CD\u7684\u662F\u9700\u8981\u6709\u4E00\u6761\u4E3B\u7EBF\u6216\u8005\u67D0\u4E00\u4E2A\u5171\u540C\u70B9</p><p>\u6865\u63A5\u6A21\u5F0F\u662F\u4E00\u79CD\u975E\u5E38\u7279\u6B8A\u7684\u7EC4\u5408\u6A21\u5F0F\uFF0C\u6865\u63A5\u6A21\u5F0F\u6CE8\u91CD\u7684\u662F\u7EC4\u5408\u7684\u5F62\u5F0F</p><h2 id="\u6865\u63A5\u6A21\u5F0F\u548C\u9002\u914D\u5668\u6A21\u5F0F\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u6865\u63A5\u6A21\u5F0F\u548C\u9002\u914D\u5668\u6A21\u5F0F\u7684\u533A\u522B" aria-hidden="true">#</a> \u6865\u63A5\u6A21\u5F0F\u548C\u9002\u914D\u5668\u6A21\u5F0F\u7684\u533A\u522B</h2><p>\u9002\u914D\u5668\u6A21\u5F0F\u4E3B\u8981\u89E3\u51B3\u7684\u662F\u517C\u5BB9\u95EE\u9898</p><p>\u6865\u63A5\u6A21\u5F0F\u4E3B\u8981\u89E3\u51B3\u7684\u662F\u4E24\u4E2A\u7EF4\u5EA6\u8FDE\u63A5\u7684\u95EE\u9898</p>`,36),o=[t];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","bridge.html.vue"]]);export{k as default};
