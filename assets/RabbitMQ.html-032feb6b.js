const e=JSON.parse('{"key":"v-381681e3","path":"/writings/RocketMQ/RabbitMQ.html","title":"RabbitMQ","lang":"zh-CN","frontmatter":{"description":"RabbitMQ RabbitMQ简述 RabbitMQ 是一个开源的 AMQP 实现，服务器端用 Erlang 语言编写，支持多种客户端，用于在分布式系统中存储、转发消息，在易用性、扩展性、高可用性等方面表现不俗 AMQP Advanced Message Queuing Protocol：高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/RocketMQ/RabbitMQ.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"RabbitMQ"}],["meta",{"property":"og:description","content":"RabbitMQ RabbitMQ简述 RabbitMQ 是一个开源的 AMQP 实现，服务器端用 Erlang 语言编写，支持多种客户端，用于在分布式系统中存储、转发消息，在易用性、扩展性、高可用性等方面表现不俗 AMQP Advanced Message Queuing Protocol：高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-04T10:49:34.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:modified_time","content":"2023-03-04T10:49:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"RabbitMQ\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-04T10:49:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"RabbitMQ简述","slug":"rabbitmq简述","link":"#rabbitmq简述","children":[{"level":3,"title":"AMQP","slug":"amqp","link":"#amqp","children":[]},{"level":3,"title":"使用消息队列的意义","slug":"使用消息队列的意义","link":"#使用消息队列的意义","children":[]},{"level":3,"title":"使用消息队列的不足","slug":"使用消息队列的不足","link":"#使用消息队列的不足","children":[]}]},{"level":2,"title":"RabbitMQ的工作模型","slug":"rabbitmq的工作模型","link":"#rabbitmq的工作模型","children":[]},{"level":2,"title":"RabbitMQ的工作模式","slug":"rabbitmq的工作模式","link":"#rabbitmq的工作模式","children":[{"level":3,"title":"简单模式","slug":"简单模式","link":"#简单模式","children":[]},{"level":3,"title":"工作模式","slug":"工作模式","link":"#工作模式","children":[]},{"level":3,"title":"发布订阅模式","slug":"发布订阅模式","link":"#发布订阅模式","children":[]},{"level":3,"title":"路由模式","slug":"路由模式","link":"#路由模式","children":[]},{"level":3,"title":"主题模式","slug":"主题模式","link":"#主题模式","children":[]}]},{"level":2,"title":"RabbitMQ的交换机","slug":"rabbitmq的交换机","link":"#rabbitmq的交换机","children":[{"level":3,"title":"fanout","slug":"fanout","link":"#fanout","children":[]},{"level":3,"title":"direct","slug":"direct","link":"#direct","children":[]},{"level":3,"title":"topic","slug":"topic","link":"#topic","children":[]},{"level":3,"title":"header","slug":"header","link":"#header","children":[]},{"level":3,"title":"交换机类型选择场景","slug":"交换机类型选择场景","link":"#交换机类型选择场景","children":[]}]},{"level":2,"title":"死信队列和延迟队列","slug":"死信队列和延迟队列","link":"#死信队列和延迟队列","children":[{"level":3,"title":"死信队列","slug":"死信队列","link":"#死信队列","children":[]},{"level":3,"title":"TTL","slug":"ttl","link":"#ttl","children":[]},{"level":3,"title":"延迟队列","slug":"延迟队列","link":"#延迟队列","children":[]}]},{"level":2,"title":"RabbitMQ中的推拉模式","slug":"rabbitmq中的推拉模式","link":"#rabbitmq中的推拉模式","children":[]},{"level":2,"title":"SpringBoot中使用RabbitMQ","slug":"springboot中使用rabbitmq","link":"#springboot中使用rabbitmq","children":[{"level":3,"title":"手动实现","slug":"手动实现","link":"#手动实现","children":[]},{"level":3,"title":"SpringBoot整合RabbitMQ","slug":"springboot整合rabbitmq","link":"#springboot整合rabbitmq","children":[]}]},{"level":2,"title":"生产者生产消息","slug":"生产者生产消息","link":"#生产者生产消息","children":[{"level":3,"title":"消息发送确认机制","slug":"消息发送确认机制","link":"#消息发送确认机制","children":[]}]},{"level":2,"title":"消费者接收数据","slug":"消费者接收数据","link":"#消费者接收数据","children":[{"level":3,"title":"消费者接收数据方式","slug":"消费者接收数据方式","link":"#消费者接收数据方式","children":[]},{"level":3,"title":"Message内容对象序列化与反序列化","slug":"message内容对象序列化与反序列化","link":"#message内容对象序列化与反序列化","children":[]},{"level":3,"title":"消息接收确认机制","slug":"消息接收确认机制","link":"#消息接收确认机制","children":[]}]},{"level":2,"title":"RabbitMQ面试题","slug":"rabbitmq面试题","link":"#rabbitmq面试题","children":[{"level":3,"title":"消息是怎么路由的","slug":"消息是怎么路由的","link":"#消息是怎么路由的","children":[]},{"level":3,"title":"RabbitMQ消息基于什么传输","slug":"rabbitmq消息基于什么传输","link":"#rabbitmq消息基于什么传输","children":[]},{"level":3,"title":"如何保证RabbitMQ消息不丢失","slug":"如何保证rabbitmq消息不丢失","link":"#如何保证rabbitmq消息不丢失","children":[]},{"level":3,"title":"如何保证RabbitMQ消息不重复","slug":"如何保证rabbitmq消息不重复","link":"#如何保证rabbitmq消息不重复","children":[]},{"level":3,"title":"如何保证消息顺序执行","slug":"如何保证消息顺序执行","link":"#如何保证消息顺序执行","children":[]},{"level":3,"title":"RabbitMQ的集群","slug":"rabbitmq的集群","link":"#rabbitmq的集群","children":[]}]}],"git":{"createdTime":1677926974000,"updatedTime":1677926974000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":25.71,"words":7714},"filePathRelative":"writings/RocketMQ/RabbitMQ.md","localizedDate":"2023年3月4日","excerpt":"<h1> RabbitMQ</h1>\\n<h2> RabbitMQ简述</h2>\\n<p><strong>RabbitMQ</strong> 是一个开源的 <strong>AMQP</strong> 实现，服务器端用 <strong>Erlang</strong> 语言编写，支持多种客户端，用于在分布式系统中<strong>存储</strong>、<strong>转发</strong>消息，在易用性、扩展性、高可用性等方面表现不俗</p>\\n<h3> AMQP</h3>\\n<blockquote>\\n<p>Advanced Message Queuing Protocol：高级消息队列协议，是应用层协议的一个开放标准，为面向消息的中间件设计</p>\\n</blockquote>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
