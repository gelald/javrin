const e=JSON.parse('{"key":"v-13d1baa6","path":"/writings/JVM/jvm-remote-monitor.html","title":"JVM 远程监控","lang":"zh-CN","frontmatter":{"title":"JVM 远程监控","icon":"article","category":["JVM"],"tag":["监控","调优"],"description":"JVM 远程监控 JVM 可视化监控工具 JDK 中提供了两款可视化监控工具： jconsole，可以查看当前 cpu、内存、类、线程的使用情况。 jvisualvm，与 jconsole 的功能差别不大，但是 jvisualvm 可以安装 Visual GC 插件，Visual GC 是常常使用的一个功能，可以明显的看到年轻代、老年代的内存变化，以及 gc 频率、gc 的时间等。关于 jvisualvm 的使用这一篇文章有简单介绍：这款 Java 性能调优的可视化工具，你真的会用吗","head":[["meta",{"property":"og:url","content":"https://gelald.github.io/javrin/javrin/writings/JVM/jvm-remote-monitor.html"}],["meta",{"property":"og:site_name","content":"Javrin"}],["meta",{"property":"og:title","content":"JVM 远程监控"}],["meta",{"property":"og:description","content":"JVM 远程监控 JVM 可视化监控工具 JDK 中提供了两款可视化监控工具： jconsole，可以查看当前 cpu、内存、类、线程的使用情况。 jvisualvm，与 jconsole 的功能差别不大，但是 jvisualvm 可以安装 Visual GC 插件，Visual GC 是常常使用的一个功能，可以明显的看到年轻代、老年代的内存变化，以及 gc 频率、gc 的时间等。关于 jvisualvm 的使用这一篇文章有简单介绍：这款 Java 性能调优的可视化工具，你真的会用吗"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-02-28T15:20:13.000Z"}],["meta",{"property":"article:author","content":"gelald"}],["meta",{"property":"article:tag","content":"监控"}],["meta",{"property":"article:tag","content":"调优"}],["meta",{"property":"article:modified_time","content":"2023-02-28T15:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JVM 远程监控\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-02-28T15:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"gelald\\",\\"url\\":\\"https://github.com/gelald\\"}]}"]]},"headers":[{"level":2,"title":"JVM 可视化监控工具","slug":"jvm-可视化监控工具","link":"#jvm-可视化监控工具","children":[]},{"level":2,"title":"远程监控方式","slug":"远程监控方式","link":"#远程监控方式","children":[]},{"level":2,"title":"jmx","slug":"jmx","link":"#jmx","children":[]},{"level":2,"title":"jstatd","slug":"jstatd","link":"#jstatd","children":[]},{"level":2,"title":"jmx 和 jstatd 区别","slug":"jmx-和-jstatd-区别","link":"#jmx-和-jstatd-区别","children":[]},{"level":2,"title":"docker 容器无法使用 JDK 命令的问题","slug":"docker-容器无法使用-jdk-命令的问题","link":"#docker-容器无法使用-jdk-命令的问题","children":[{"level":3,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}]},{"level":2,"title":"参考链接","slug":"参考链接","link":"#参考链接","children":[]}],"git":{"createdTime":1677597613000,"updatedTime":1677597613000,"contributors":[{"name":"gelald","email":"yb.ng@foxmail.com","commits":1}]},"readingTime":{"minutes":3.62,"words":1087},"filePathRelative":"writings/JVM/jvm-remote-monitor.md","localizedDate":"2023年2月28日","excerpt":"<h1> JVM 远程监控</h1>\\n<h2> JVM 可视化监控工具</h2>\\n<p>JDK 中提供了两款可视化监控工具：</p>\\n<ul>\\n<li>jconsole，可以查看当前 cpu、内存、类、线程的使用情况。</li>\\n<li>jvisualvm，与 jconsole 的功能差别不大，但是 jvisualvm 可以安装 Visual GC 插件，Visual GC 是常常使用的一个功能，可以明显的看到年轻代、老年代的内存变化，以及 gc 频率、gc 的时间等。关于 jvisualvm 的使用这一篇文章有简单介绍：<a href=\\"https://mp.weixin.qq.com/s/tR6MzCg8lCC0vD6UtFu8LQ\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">这款 Java 性能调优的可视化工具，你真的会用吗</a></li>\\n</ul>","copyright":{"author":"gelald","license":"MIT Licensed"},"autoDesc":true}');export{e as data};
